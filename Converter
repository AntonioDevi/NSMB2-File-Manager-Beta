#include <math.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <windows.h>

/* ------ Integer Types Definitions ----- */

typedef int64_t int80_t;

/* ------- Float Types Definitions ------ */

typedef float float32_t;
typedef double float64_t;
typedef long double float80_t;

/* ------------- Structures ------------- */

struct _POINT {
    int32_t e0;
    int32_t e1;
};

struct _MSG {
    int32_t * e0;
    int32_t e1;
    int32_t e2;
    int32_t e3;
    int32_t e4;
    struct _POINT e5;
};

struct _RECT {
    int32_t e0;
    int32_t e1;
    int32_t e2;
    int32_t e3;
};

struct _WNDCLASSEX {
    int32_t e0;
    int32_t e1;
    int32_t (*e2)(int32_t);
    int32_t e3;
    int32_t e4;
    int32_t * e5;
    int32_t * e6;
    int32_t * e7;
    int32_t * e8;
    char * e9;
    char * e10;
    int32_t * e11;
};

struct _struct__IO_FILE {
    int32_t e0;
    char * e1;
    char * e2;
    char * e3;
    char * e4;
    char * e5;
    char * e6;
    char * e7;
    char * e8;
    char * e9;
    char * e10;
    char * e11;
    struct _struct__IO_marker * e12;
    struct _struct__IO_FILE * e13;
    int32_t e14;
    int32_t e15;
    int32_t e16;
    int16_t e17;
    char e18;
    int32_t e19[1];
    char * e20;
    int64_t e21;
    char * e22;
    char * e23;
    char * e24;
    char * e25;
    int32_t e26;
    int32_t e27;
    int32_t e28[40];
};

struct _struct__IO_marker {
    struct _struct__IO_marker * e0;
    struct _struct__IO_FILE * e1;
    int32_t e2;
};

struct struct_0 {
    int32_t * e0;
    int32_t e1;
};

struct struct_10 {
    int32_t e0;
    int32_t e1;
    int32_t * e2;
};

struct struct_11 {
    int32_t e0;
    int32_t * e1;
};

struct struct_12 {
    char * e0;
    int32_t e1;
    int32_t e2;
};

struct struct_14 {
    int32_t * e0;
    int32_t e1;
    char e2[24];
    int32_t e3;
};

struct struct_15 {
    int32_t * e0;
    int32_t e1;
    char e2[4];
    int32_t e3;
};

struct struct_16 {
    int32_t * e0;
    int32_t * e1;
    int32_t e2;
};

struct struct_17 {
    int32_t * e0;
    int32_t * e1;
    int32_t * e2;
    char e3;
    int16_t e4;
    int16_t e5;
    int32_t * e6;
    int32_t e7;
    char e8[4];
    int32_t * e9;
    char e10[12];
    int32_t e11;
};

struct struct_18 {
    int32_t e0;
    int32_t e1;
};

struct struct_19 {
    int32_t e0;
    int32_t e1;
    char e2[4];
    int32_t e3;
};

struct struct_2 {
    int32_t e0;
    char e1[4];
    int32_t e2;
    int32_t e3;
    int32_t e4;
    int32_t e5;
    char e6[4];
    int32_t * e7;
    int32_t * e8;
};

struct struct_1 {
    int32_t e0;
    int32_t e1;
    struct struct_2 e2[2];
};

struct struct_20 {
    int32_t * e0;
    int32_t e1;
    char e2[8];
    int32_t * e3;
    int32_t e4;
    int32_t e5;
    int16_t e6;
    int16_t e7;
    int16_t e8;
    int16_t e9;
    int32_t * e10;
};

struct struct_21 {
    int32_t e0;
    int32_t e1;
    int32_t e2;
    int32_t e3;
    int32_t e4;
};

struct struct_22 {
    int32_t e0;
    int32_t e1;
    int32_t e2;
    int32_t e3;
    int32_t e4;
    int32_t e5;
    int32_t e6;
};

struct struct_24 {
    struct struct_0 e0[1];
    int32_t e1;
    int32_t e2;
};

struct struct_27 {
    float64_t e0;
    int32_t e1;
};

struct struct_26 {
    struct struct_27 e0[1];
    int32_t e1;
    int32_t e2;
};

struct struct_3 {
    int32_t * e0;
    int32_t e1;
    int32_t e2;
};

struct struct_31 {
    char * e0;
    char * e1;
};

struct struct_32 {
    int32_t * e0;
    int32_t e1;
    int32_t e2;
    int32_t * e3;
    char e4[4];
    int32_t e5;
};

struct struct_34 {
    int32_t * e0;
    int32_t * e1;
    int32_t * e2;
    char e3[4];
    int32_t e4;
    int32_t * e5;
    int32_t * e6;
    int32_t * e7;
};

struct struct_35 {
    int32_t * e0;
    int32_t * e1;
    int32_t e2;
    int32_t e3;
    int32_t e4;
    int32_t e5;
};

struct struct_38 {
    char * e0;
    int32_t * e1;
    char * e2;
};

struct struct_39 {
    char * e0;
    int32_t e1;
};

struct struct_4 {
    int32_t * e0;
    char * e1;
    char * e2;
    int32_t * e3;
    char * e4;
    char * e5;
};

struct struct_5 {
    char e0;
    char e1;
};

struct struct_6 {
    int32_t e0[2];
    int32_t e1;
};

struct struct_7 {
    int32_t e0;
    int32_t e1;
    char e2;
    char e3;
};

struct struct_8 {
    int32_t * e0;
    int32_t e1;
    char * e2;
    char * e3;
    char * e4;
};

struct struct_9 {
    char * e0;
    int32_t e1;
    int32_t e2;
    int32_t e3;
    int32_t e4;
};

/* -------- Function Prototypes --------- */

int32_t entry_point(void);
void function_401239(void);
void function_401258(void);
int32_t function_401327(void);
void function_401413(void);
void function_40147a(void);
void function_401756(void);
void function_402097(void);
int32_t function_40213f(void);
void function_402391(void);
void function_4024e8(void);
void function_4028e6(void);
void function_402e48(void);
void function_4030c2(void);
void function_40360a(void);
int32_t function_404008(int32_t a1, int32_t a2);
void function_40402e(void);
void function_404078(void);
void function_404084(void);
int32_t function_4040c6(int32_t * lpStartAddress, int32_t * lpParameter, int32_t a3);
int32_t function_404170(int32_t a1, char * a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, int32_t a8, int32_t a9, int32_t a10, int32_t a11);
int32_t function_404250(int32_t a1, int32_t a2);
void function_404270(void);
void function_404470(void);
void function_404490(void);
void function_4044c0(void);
void function_404540(void);
void function_4046b3(void);
void function_404916(void);
int32_t function_4049df(struct struct_4 * a1, struct struct_4 * a2);
void function_404b26(void);
int32_t function_404b44(void);
int32_t function_404b68(int32_t a1, struct struct_5 * a2, int32_t a3, int32_t a4);
void function_404cc4(int32_t a1, struct struct_5 * a2, int32_t a3);
int32_t function_404cda(struct struct_6 * a1);
int32_t function_404e68(void);
int32_t function_404f03(void);
int32_t function_404f3a(char * lpText, int32_t * a2);
void function_404f69(void);
void function_404f88(void);
void function_405038(void);
void function_40506b(void);
void function_405085(void);
int32_t function_4053a8(int32_t a1, char * str3, char * a3, int32_t a4, int32_t a5, char * a6, char * a7);
void function_405676(int32_t a1, char * a2, char * a3, int32_t a4, char * a5);
int32_t function_405698(int32_t a1, char * a2, char * a3, int32_t a4, char * a5);
void function_4056ba(void);
int32_t function_40573e(int32_t a1);
int32_t function_4057e7(int32_t a1);
void function_405815(void);
int32_t function_405842(void);
int32_t function_405871(char * a1, char * a2, int32_t a3);
int32_t function_4058a8(int32_t a1, char * a2, char * a3, unsigned char a4, char * a5);
int32_t function_405cbb(int32_t a1, char * a2, char * a3, char a4);
void function_405cd5(void);
int32_t function_405d25(void);
void function_405d4c(void);
int32_t function_405dd0(int32_t * a1, int32_t * hWnd);
int32_t function_405e49(void);
int32_t function_405e8b(char * a1, struct struct_12 * a2, int32_t a3);
void function_405f30(char * a1, struct struct_12 * a2);
int32_t function_405f42(struct struct_12 * a1, int32_t a2);
int32_t function_40600b(struct struct_12 * a1);
void function_406019(void);
void function_406046(void);
int32_t function_40605c(void);
void function_4060cc(int32_t a1);
void function_4060e6(void);
void function_40611a(void);
int32_t function_406173(char * a1, int32_t X, int32_t * a3, char * a4, int32_t nHeight, char * a6, char * a7);
int32_t function_406294(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6);
void function_4062b4(void);
int32_t function_406319(int32_t * a1, int32_t X, int32_t * a3, int32_t * a4, int32_t nHeight, int32_t a6, uint32_t a7);
int32_t function_406407(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6);
void function_406427(void);
void function_4064bc(void);
int32_t function_4064fb(int32_t * a1, int32_t X, int32_t * a3, int32_t * a4, int32_t * a5, int32_t a6, uint32_t a7);
void function_406600(void);
void function_406622(void);
int32_t function_40663d(char * a1, int32_t X, int32_t * a3, char * a4, int32_t nHeight, char * a6, int32_t a7);
int32_t function_406700(char * a1, int32_t a2, int32_t * a3, char * a4, int32_t a5, char * a6);
bool function_406720(int32_t a1);
int32_t function_40674b(int32_t a1, int32_t a2);
int32_t function_406788(void);
void function_406859(void);
void function_406877(int32_t a1, struct _RECT * a2, int32_t a3, int32_t a4, int32_t * a5);
void function_406973(void);
int32_t function_406a30(struct struct_15 * a1, struct struct_15 * a2, struct struct_15 * a3, int32_t a4, int32_t a5);
int32_t function_406aab(int32_t a1);
void function_406ade(void);
void function_406b38(void);
void function_406b5e(void);
int32_t function_406b72(int32_t a1, int32_t a2);
int32_t function_406baa(int32_t * a1);
int32_t function_406c17(int32_t * a1);
void function_406c66(void);
void function_406d5d(void);
void function_406da6(void);
int32_t function_406ddb(void);
void function_406e27(char * a1);
void function_406faf(void);
int32_t function_406fb7(void);
int32_t function_406fc6(void);
int32_t function_406fd5(struct struct_17 * a1, char * a2, int32_t * a3, int32_t * a4, int32_t * a5, char * a6, int32_t * a7, char * a8);
void function_4072e6(struct struct_17 * a1, char * a2, int32_t * a3, int32_t * a4, int32_t * a5, char * a6, int32_t * a7);
int32_t function_407309(int32_t a1);
void function_407325(void);
void function_40738a(void);
void function_4073e0(void);
int32_t function_4074e8(int32_t * hWnd, int32_t * a2);
int32_t function_40753a(char * a1);
int32_t function_407640(void);
void function_407651(void);
void function_40767f(void);
void function_407761(void);
void function_4077af(void);
void function_4077fd(void);
void function_407be3(void);
void function_407c43(void);
void function_407c59(void);
void function_40810f(void);
int32_t function_4081a5(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6);
void function_408227(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_408244(int32_t * a1, int32_t * a2, int32_t * a3, int32_t * a4, int32_t * a5, int32_t a6);
void function_4082a4(void);
void function_4082c1(void);
int32_t function_4082cd(void);
void function_4082e4(int32_t a1, int32_t a2, int32_t a3);
int32_t function_40835e(void);
int32_t function_4083aa(void);
int32_t function_408463(void);
void function_4084f1(void);
void function_4084fe(void);
void function_4085cb(void);
void function_4085dd(void);
void function_408690(void);
void function_408693(void);
void function_4086b8(void);
void function_4086bf(void);
void function_40876e(void);
void function_4087d7(void);
void function_4089ec(void);
void function_408a1b(void);
void function_408a23(void);
void function_408a2b(void);
void function_408b6d(void);
void function_408cb0(void);
int32_t function_408d62(int32_t * a1);
int32_t * function_408dad(void);
int32_t function_408ddb(void);
void function_408def(int32_t a1, int32_t a2);
int32_t function_408e64(void);
void function_408e7a(void);
int32_t function_408e9f(void);
int32_t function_408eab(int32_t a1);
int32_t function_408eeb(int32_t a1);
int32_t function_408efd(int32_t a1);
int32_t function_408f49(int32_t a1);
int32_t function_408f71(int32_t * a1);
int32_t function_408fa4(char * a1, int32_t a2, char * a3);
int32_t function_409099(int32_t a1);
void function_4090de(void);
int32_t function_4093a7(char * lpExistingFileName, char * lpNewFileName);
void function_4093cb(void);
void function_409444(void);
void function_40945d(void);
char * function_4096f8(int32_t * a1, int32_t * a2);
int32_t function_409778(int32_t a1, int32_t a2);
int32_t function_4097d0(int32_t * a1);
int32_t function_409810(int32_t a1);
int32_t function_409870(void);
int32_t function_409880(void);
int32_t function_4098a0(int32_t a1);
int32_t function_4098c0(int32_t a1, int32_t * a2, int32_t * a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, int32_t a8, int32_t a9, int32_t a10);
void function_4099e0(void);
int32_t function_409a00(int32_t a1, int32_t a2);
void function_409a20(void);
void function_409a70(void);
int32_t function_409b6d(struct struct_32 * a1, int32_t a2);
int32_t function_409bf5(int32_t a1, int32_t a2);
int32_t function_409c1a(int32_t a1, uint32_t a2);
int32_t function_409c5b(int32_t a1);
int32_t function_409c96(int32_t a1, int32_t a2, int32_t a3);
int32_t function_409cdf(char * a1);
int32_t function_409ce6(int32_t dwBytes, int32_t a2);
int32_t function_409d0e(int32_t a1);
int32_t function_409d32(int32_t a1, int32_t * a2, int32_t * a3);
int32_t function_409d85(int32_t * a1);
void function_409db3(void);
int32_t function_409dc6(int32_t a1, char * a2, int32_t * a3, char a4, int32_t a5);
int32_t function_409efc(int32_t a1);
int32_t function_40a05b(int32_t a1, int32_t a2);
int32_t function_40a114(int32_t * a1);
int32_t function_40a182(int32_t a1, int32_t a2);
void function_40a21d(void);
int32_t function_40a231(int32_t * a1, int32_t * a2, int32_t a3);
void function_40a2b2(void);
int32_t function_40a2c0(int32_t * a1, int32_t a2);
int32_t function_40a2cb(int32_t * a1, int32_t a2, int32_t result);
bool function_40a2dc(int32_t * a1, int32_t a2);
int32_t function_40a31c(struct struct_18 * a1, int32_t dwBytes);
void function_40a349(void);
void function_40a3da(void);
void function_40a3f9(void);
void function_40a444(void);
int32_t function_40a4f0(void);
void function_40a540(void);
int32_t function_40a570(int32_t a1);
int32_t function_40a5d0(int32_t ** a1, char * a2, int32_t a3);
void function_40a650(char * lpMem);
void function_40a680(void);
int32_t function_40a6d0(int32_t ** a1, char * str);
int32_t function_40a780(char * a1);
int32_t function_40a7c0(int32_t a1, int32_t a2);
int32_t function_40a840(int32_t a1);
int32_t function_40a860(int32_t a1);
void function_40a880(void);
int32_t function_40a8a0(int32_t * a1, int32_t * a2, int32_t a3, int32_t a4);
void function_40a8f0(void);
void function_40a930(void);
void function_40a9db(void);
void function_40aa26(void);
void function_40ab41(void);
void function_40ac13(void);
void function_40aecc(void);
int32_t function_40af95(char * a1, char * a2);
void function_40b0b7(void);

/* ---------- Global Variables ---------- */

float80_t g1 = 2.62608180206317186844e-4934; // fpr0
float80_t g2 = 2.62612188145588055257e-4934; // fpr1
float80_t g3 = 2.6261619608485892367e-4934; // fpr2
float80_t g4 = 2.62632227841942397322e-4934; // fpr6
float80_t g5 = 6.33020980006309557758e-4932; // fpr7
int32_t g6 = 0; // 0x40e064
int32_t g7 = 1; // 0x40e068
int32_t g8 = 0x40c030; // 0x40e06c
int32_t g9 = 0x1000; // 0x40e070
int32_t g10 = 0; // 0x40e074
int32_t g11 = 0xe7b0; // 0x40e428
int32_t g12 = 0xe7ce; // 0x40e430
int32_t g13 = 0xe7da; // 0x40e434
int32_t g14 = 0xe820; // 0x40e444
int32_t g15 = 0xe854; // 0x40e450
int32_t g16 = 0xe876; // 0x40e458
int32_t g17 = 0xe886; // 0x40e45c
int32_t g18 = 0xe904; // 0x40e47c
int32_t g19 = 0xe936; // 0x40e488
int32_t g20 = 0xe9d8; // 0x40e4b4
int32_t g21 = 0xe9e4; // 0x40e4b8
int32_t g22 = 0xea1a; // 0x40e4c8
int32_t g23 = 0xea36; // 0x40e4d0
int32_t g24 = 0xea6a; // 0x40e4dc
int32_t g25 = 0xea76; // 0x40e4e0
int32_t g26 = 0xeb74; // 0x40e51c
int32_t g27 = 0xeb88; // 0x40e520
int32_t g28 = 0xed02; // 0x40e574
int32_t g29 = 0xee1e; // 0x40e5b8
int32_t g30 = 0xee32; // 0x40e5bc
int32_t g31 = 0xef0a; // 0x40e5f4
int32_t g32 = 0xef40; // 0x40e600
int32_t g33 = 0xefb4; // 0x40e61c
int32_t g34 = 0; // 0x40f0b0
int32_t g35 = 0; // 0x40f0b4
int32_t g36 = 0; // 0x40f0bc
int32_t g37 = 0; // 0x40f0c0
int32_t g38 = 0; // 0x40f0c4
int32_t g39 = 0; // 0x40f0c8
int32_t g40 = 0; // 0x40f0c9
int32_t g41 = 0; // 0x40f0ca
int32_t g42 = 0; // 0x40f0cb
int32_t g43 = 0; // 0x40f0d4
int32_t g44 = 0; // 0x40f0d8
int32_t g45 = 0; // 0x40f0dc
int32_t g46 = 0; // 0x40f0e0
int32_t g47 = 0; // 0x40f0e4
int32_t g48 = 0; // 0x40f0e8
int32_t g49 = 0; // 0x40f0ec
int32_t g50 = 0; // 0x40f0f0
int32_t g51 = 0; // 0x40f1fc
int32_t g52 = 0; // 0x40f204
int32_t g53 = 0; // 0x40f208
int32_t g54 = 0; // 0x40f20c
int32_t g55 = 0; // 0x40f218
int32_t g56 = 0; // 0x40f21c
int32_t g57 = 0; // 0x40f220
int32_t g58 = 0; // 0x40f228
int32_t g59 = 0; // 0x40f230
int32_t g60 = 0; // 0x40f234
int32_t g61 = 0; // 0x40f260
int32_t g62 = 0; // 0x40f2c8
int32_t g63 = 0; // 0x40f2d0
int32_t g64 = 0; // 0x40f368
int32_t g65 = 0; // 0x40f370
int32_t g66 = 0; // 0x40f378
int32_t g67 = 0; // 0x40f410
int32_t g68 = 0; // 0x40f418
int32_t g69 = 0; // 0x40f41c
int32_t g70 = 0; // 0x40f428
int32_t g71 = 0; // 0x40f42c
int32_t g72 = 0; // 0x40f4b0
int32_t g73 = 0; // 0x40f4b4
int32_t g74 = 0; // 0x40f4b8
int32_t g75 = 0; // 0x40f4bc
float64_t g76 = 0.0; // 0x40f4c0
float64_t g77 = 0.0; // 0x40f4c8
float64_t g78 = 0.0; // 0x40f4d0
float64_t g79 = 0.0; // 0x40f4d8
float64_t g80 = 0.0; // 0x40f4e0
float64_t g81 = 0.0; // 0x40f4e8
float64_t g82 = 0.0; // 0x40f4f0
int32_t g83 = 0; // 0x40f4f8
int32_t g84 = 0; // 0x40f4fc
int32_t g85 = 0; // 0x40f500
int32_t g86 = 0; // 0x40f504
int32_t g87 = 0; // 0x40f508
int32_t * g88; // 0x40f50c
int32_t * g89; // 0x40f528
int32_t g90 = 0; // 0x40f544
int32_t g91 = 0; // 0x40f548
int32_t g92 = 0; // 0x40f54c
int32_t g93 = 0; // 0x40f550
int32_t g94 = 0; // 0x40f554
int32_t g95 = 0; // 0x40f558
int32_t g96 = 0; // 0x40f55c
int32_t g97 = 0; // 0x40f560
int32_t g98 = 0; // 0x40f564
int32_t g99 = 0; // 0x40f568
int32_t * g100; // 0x40f56c
int32_t g101 = 0; // 0x40f584
int32_t g102 = 0; // 0x40f588
int32_t g103 = 0; // 0x40f58c
int32_t g104 = 0; // 0x40f590
int32_t * g105; // 0x40f594
int32_t g106 = 0; // 0x40f5ac
int32_t g107 = 0; // 0x40f5b0
int32_t g108 = 0; // 0x40f5b4
int32_t * g109; // 0x40f5b8
int32_t g110 = 0; // 0x40f5d0
int32_t g111 = 0; // 0x40f5d4
int32_t g112 = 0; // 0x40f5d8
int32_t g113 = 0; // 0x40f5dc
int32_t g114 = 0; // 0x40f5e0
int32_t g115 = 0; // 0x40f5e4
int32_t g116 = 0; // 0x40f5e8
int32_t g117 = 0; // 0x40f5ec
int32_t g118 = 0; // 0x40f5f0
int32_t g119 = 0; // 0x40f5f4
int32_t g120 = 0; // 0x40f670
int32_t g121 = 0; // 0x40f674
int32_t g122 = 0; // 0x40f678
int32_t g123 = 0; // 0x40f67c
int32_t g124 = 0; // gpr0
int32_t g125 = 0; // gpr1
int32_t g126 = 0; // gpr2
int32_t g127 = 0; // gpr3
int32_t g128 = 0; // gpr4
int32_t g129 = 0; // gpr5
int32_t g130 = 0; // gpr6
int32_t g131 = 0; // gpr7

/* ------------- Functions -------------- */

// Address range: 0x401000 - 0x401234
int32_t entry_point(void) {
    // 0x401000
    memset(&g34, 0, 28);
    g35 = (int32_t)GetModuleHandleA(NULL);
    g34 = HeapCreate(0, 0x1000, 0);
    function_40a4f0();
    function_40a3da();
    function_409880();
    function_408e9f();
    function_408e64();
    function_408ddb();
    function_408463();
    function_4082cd();
    function_406ddb();
    function_40605c();
    function_405d25();
    function_405842();
    function_404f03();
    function_404b44();
    function_404078();
    g126 = 0x40d00e;
    g125 = 0x40f0bc;
    bool v1;
    int32_t v2;
    function_404008((int32_t)v1, v2);
    int32_t v3 = g99; // 0x40109a
    function_408eab(v3);
    g126 = 0x40db86;
    function_40a570(v3);
    function_40a5d0((int32_t **)&g37, (char *)v3, v3);
    g39 = 0;
    g40 = 0;
    g41 = 0;
    g42 = 0;
    function_40213f();
    // branch -> 0x4010db
    while (true) {
        // 0x4010db
        function_406faf();
        int32_t v4 = g124; // 0x4010e0
        g38 = v4;
        void (*v5)(); // bp+619
        void (*v6)(); // bp+616
        void (*v7)(); // bp+613
        void (*v8)(); // bp+610
        void (*v9)();
        void (*v10)();
        void (*v11)();
        void (*v12)();
        int32_t * v13;
        void (*v14)();
        int32_t v15;
        int32_t * v16;
        int32_t v17;
        int32_t * v18;
        int32_t * v19; // 0x401196_07
        void (*v20)(); // 0x4011c0_01
        if (v4 == 0x332c) {
            // 0x4010f9
            g127 = 3;
            if (function_406fb7() == 3) {
                // 0x401109
                g124 = (int32_t)function_402391;
                function_4040c6((int32_t *)function_402391, NULL, 3);
                // branch -> 0x40118e
            } else {
                // 0x40111c
                g127 = 4;
                if (v9 == (void (*)())4) {
                    // 0x401126
                    g124 = (int32_t)function_40147a;
                    function_4040c6((int32_t *)function_40147a, NULL, 4);
                    // branch -> 0x40118e
                } else {
                    // 0x401139
                    g127 = 5;
                    if (v10 == (void (*)())5) {
                        // 0x401143
                        g124 = (int32_t)function_401756;
                        function_4040c6((int32_t *)function_401756, NULL, 5);
                        // branch -> 0x40118e
                    } else {
                        // 0x401156
                        g127 = 6;
                        void (*v21)(); // bp+614
                        int32_t * v22; // 0x401196_08
                        if (v11 == (void (*)())6) {
                            // 0x401160
                            g124 = (int32_t)function_4024e8;
                            function_4040c6((int32_t *)function_4024e8, NULL, 6);
                            v21 = (void (*)())6;
                            v22 = (int32_t *)0x401171;
                            // branch -> 0x40118e
                        } else {
                            // 0x401173
                            g127 = 7;
                            if (v12 == (void (*)())7) {
                                // 0x40117d
                                g124 = (int32_t)function_4028e6;
                                function_4040c6((int32_t *)function_4028e6, NULL, 7);
                                v21 = v11;
                                function_4024e8 = (void (*)())7;
                                v22 = NULL;
                                // branch -> 0x40118e
                            } else {
                                v21 = v11;
                                function_4024e8 = v12;
                                v22 = v13;
                            }
                        }
                        // 0x40118e
                        v5 = v9;
                        v6 = v10;
                        v7 = v21;
                        v8 = function_4024e8;
                        v19 = v22;
                        v20 = v14;
                        v17 = v15;
                        v18 = v16;
                        // branch -> 0x4011e8
                      lab_0x3cf6e90:
                        // 0x4011e8
                        g124 = v17;
                        int32_t v23 = g38; // 0x4011e9
                        g127 = v23;
                        if (v23 == 16) {
                            // break -> 0x4011f8
                            break;
                        }
                        v9 = v5;
                        v10 = v6;
                        v11 = v7;
                        v12 = v8;
                        v13 = v19;
                        v14 = v20;
                        v15 = v17;
                        v16 = v18;
                        // continue -> 0x4010db
                        continue;
                    }
                    // 0x40118e
                    v5 = v9;
                    v6 = (void (*)())5;
                    v7 = function_401756;
                    v8 = v12;
                    v19 = v13;
                    v20 = v14;
                    v17 = v15;
                    v18 = v16;
                    // branch -> 0x4011e8
                    goto lab_0x3cf6e90;
                }
                // 0x40118e
                v5 = (void (*)())4;
                v6 = function_40147a;
                v7 = v11;
                v8 = v12;
                v19 = v13;
                v20 = v14;
                v17 = v15;
                v18 = v16;
                // branch -> 0x4011e8
                goto lab_0x3cf6e90;
            }
            // 0x40118e
            v5 = function_402391;
            v6 = v10;
            v7 = v11;
            v8 = v12;
            v19 = v13;
            v20 = v14;
            v17 = v15;
            v18 = v16;
            // branch -> 0x4011e8
            goto lab_0x3cf6e90;
        } else {
            // 0x401191
            if (v13 != (int32_t *)0x332d) {
                v5 = v9;
                v6 = v10;
                v7 = v11;
                v8 = v12;
                v19 = v13;
                v20 = v14;
                v17 = v15;
                v18 = v16;
                goto lab_0x3cf6e90;
            }
            // 0x40119b
            g127 = 0;
            if (function_406fc6() == 0) {
                // 0x4011a8
                g124 = (int32_t)function_402391;
                function_4040c6((int32_t *)function_402391, NULL, 0);
                // branch -> 0x4011e7
            } else {
                // 0x4011bb
                int32_t v24;
                int32_t * v25;
                void (*v26)(); // 0x4011c0_02
                if (v14 == (void (*)())2) {
                    // 0x4011c5
                    function_404f3a("About", (int32_t *)"3DS Lazy by hackotedelaplaque. Only a quick and dirty GUI - thanks to devs involved in providing all the tools and batchs needed.");
                    v26 = (void (*)())2;
                    v24 = (int32_t)"3DS Lazy by hackotedelaplaque. Only a quick and dirty GUI - thanks to devs involved in providing all the tools and batchs needed.";
                    v25 = (int32_t *)"About";
                    // branch -> 0x4011e7
                } else {
                    // 0x4011db
                    g127 = 1;
                    if (v16 == (int32_t *)1) {
                        // 0x4011f8
                        if (function_4098a0(0) != 0) {
                            // 0x401206
                            function_409810(0);
                            // branch -> 0x401210
                        }
                        // 0x401210
                        function_408eeb(114);
                        function_401239();
                        function_40a540();
                        HeapDestroy(g34);
                        ExitProcess(0);
                        return g124;
                    }
                    v26 = v14;
                    v24 = v15;
                    v25 = v16;
                }
                // 0x4011e7
                v5 = v9;
                v6 = v10;
                v7 = v11;
                v8 = v12;
                v19 = (int32_t *)0x332d;
                v20 = v26;
                v17 = v24;
                v18 = v25;
                // branch -> 0x4011e8
                goto lab_0x3cf6e90;
            }
            // 0x4011e7
            v5 = v9;
            v6 = v10;
            v7 = v11;
            v8 = v12;
            v19 = (int32_t *)0x332d;
            v20 = function_402391;
            v17 = v15;
            v18 = v16;
            // branch -> 0x4011e8
            goto lab_0x3cf6e90;
        }
    }
    // 0x4011f8
    if (function_4098a0(0) != 0) {
        // 0x401206
        function_409810(0);
        // branch -> 0x401210
    }
    // 0x401210
    function_408eeb(114);
    function_401239();
    function_40a540();
    HeapDestroy(g34);
    ExitProcess(0);
    return g124;
}

// Address range: 0x401239 - 0x401257
void function_401239(void) {
    // 0x401239
    function_404084();
    int32_t v1;
    function_4060cc(v1);
    function_406d5d();
    function_4084f1();
    g128 = (int32_t)function_408dad() - 4;
    function_409870();
}

// Address range: 0x401258 - 0x401326
void function_401258(void) {
    int32_t v1 = g99; // 0x401263
    function_408eab(v1);
    g126 = 0x40dc04;
    function_40a570(v1);
    g99++;
    int32_t v2 = g6; // 0x401284
    g126 = v2;
    int32_t v3 = function_408fa4(NULL, v2 + v1, (char *)v1); // 0x40128e
    g99 = 0;
    int32_t v4 = 0; // 0x4012c9
    int32_t v5; // 0x4012f4
    int32_t v6; // 0x4012ea
    if (v3 == 0) {
        // 0x4012be
        function_408eab(v4);
        g126 = 0x40d488;
        function_40a570(v4);
        g99++;
        v6 = g6;
        g126 = v6;
        v5 = function_408fa4(NULL, v6 + v4, (char *)v4);
        g99 = 0;
        if (v5 == 0) {
            // 0x401324
            g124 = 0;
            // branch -> 0x401326
            // 0x401326
            return;
        }
        // 0x401303
        if (function_409099(0) == 0) {
            // 0x40131a
            function_408f71(NULL);
            // branch -> 0x401324
            // 0x401324
            g124 = 0;
            // branch -> 0x401326
        } else {
            // 0x401311
            g124 = 1;
            // branch -> 0x401326
        }
        // 0x401326
        return;
    }
    // 0x40129d
    if (function_409099(0) == 0) {
        // 0x4012b4
        function_408f71(NULL);
        v4 = g99;
        // branch -> 0x4012be
        // 0x4012be
        function_408eab(v4);
        g126 = 0x40d488;
        function_40a570(v4);
        g99++;
        v6 = g6;
        g126 = v6;
        v5 = function_408fa4(NULL, v6 + v4, (char *)v4);
        g99 = 0;
        if (v5 != 0) {
            // 0x401303
            if (function_409099(0) == 0) {
                // 0x40131a
                function_408f71(NULL);
                // branch -> 0x401324
                // 0x401324
                g124 = 0;
                // branch -> 0x401326
            } else {
                // 0x401311
                g124 = 1;
                // branch -> 0x401326
            }
            // 0x401326
            return;
        }
        // 0x401324
        g124 = 0;
        // branch -> 0x401326
    } else {
        // 0x4012ab
        g124 = 1;
        // branch -> 0x401326
    }
}

// Address range: 0x401327 - 0x401412
int32_t function_401327(void) {
    int32_t v1 = g99; // 0x401333
    function_408eab(v1);
    g99++;
    int32_t v2 = g6; // 0x40134a
    g126 = v2;
    int32_t v3 = function_408fa4(NULL, v2 + v1, (char *)v1); // 0x401354
    g99 = 0;
    g124 = v3;
    if (v3 == 0) {
        // 0x40140f
        return 0;
    }
    // 0x401367
    if (function_409099(0) == 0) {
        // 0x401405
        function_408f71(NULL);
        // branch -> 0x40140f
        // 0x40140f
        return 0;
    }
    while (true) {
        // 0x401379
        if (function_408f49(0) == 1) {
            // 0x40138a
            function_408efd(0);
            int32_t v4 = g6; // 0x4013a6
            int32_t v5 = function_404250(v4, g99); // 0x4013af
            g99 = v4;
            if (v5 != 0) {
                // 0x4013be
                g41 = 1;
                // branch -> 0x4013c5
            }
            // 0x4013c5
            function_408efd(0);
            int32_t v6 = g6; // 0x4013e1
            int32_t v7 = function_404250(v6, v4); // 0x4013ea
            g99 = v6;
            if (v7 != 0) {
                // 0x4013f9
                g42 = 1;
                // branch -> 0x401367
            }
        }
        // 0x401367
        if (function_409099(0) == 0) {
            // break -> 0x401405
            break;
        }
        // continue -> 0x401379
    }
    // 0x401405
    function_408f71(NULL);
    // branch -> 0x40140f
    // 0x40140f
    return 0;
}

// Address range: 0x401413 - 0x401479
void function_401413(void) {
    // 0x401413
    function_404cc4(9, NULL, 67);
    function_4090de();
    function_4090de();
    function_4090de();
    function_4090de();
}

// Address range: 0x40147a - 0x401753
void function_40147a(void) {
    // 0x40147a
    function_404cc4(9, NULL, 69);
    int32_t v1 = g99; // 0x4014a1
    function_408eab(v1);
    int32_t v2 = g99 + 1; // 0x4014ad
    g99 = v2;
    function_408eab(v2);
    g126 = 0x40d98c;
    function_40a570(v2);
    int32_t v3 = g6 + v2; // 0x4014d4
    function_405cbb(v3, (char *)v2, "rom.3ds", (char)v1);
    g99 = v3;
    function_408eab(v3);
    g126 = 0x40df6e;
    function_40a570(v3);
    int32_t v4 = g99 + 1; // 0x401508
    g99 = v4;
    function_408eab(v4);
    g126 = 0x40dfe4;
    function_40a570(v4);
    int32_t v5 = g6 + v4; // 0x40152a
    char * v6 = (char *)v5; // 0x401537
    function_4093a7(v6, v6);
    g99 = v5;
    function_408eab(v5);
    g126 = 0x40dfe4;
    function_40a570(v5);
    int32_t v7 = g6; // 0x40155e
    g126 = v7;
    int32_t v8 = v7 + v5; // 0x401564
    function_408eeb(v8);
    g99 = v8;
    function_404cc4(9, NULL, 110);
    if (function_404f3a("Success", (int32_t *)"ncchinfo.bin extracted, do you have 7.x Encryption Key ?") != 6) {
        // 0x401711
        function_404f3a("Success !", (int32_t *)"Now copy the content of 'Copy To SD' Folder to the root of your 3DS SD Card and launch the Profile Exploit in order to get the Xorpads. When it's over, put all xorpads in the main app folder.");
        function_404cc4(9, NULL, 87);
        g124 = 0;
        function_40a650((char *)9);
        function_40a3f9();
        return;
    }
    // 0x4015a5
    function_405085();
    function_40a5d0((int32_t **)"Write Key Here", "7.x Encryption Key", 87);
    function_404470();
    function_40a5d0((int32_t **)" ", "\x8D\x44\x24\x04\x50\xE8\x06\x90", 32);
    int32_t v9 = g99; // 0x4015e9
    function_408eab(v9);
    g126 = 0x40dcf1;
    int32_t v10 = function_40a570(v9); // 0x401600
    g99++;
    g126 = g6;
    function_4099e0();
    g99 = 0;
    g124 = v10;
    if (v10 == 0) {
        // 0x4016fd
        function_404f3a("Error", (int32_t *)"Fail to create slot0x25KeyX.bin");
        // branch -> 0x401711
    } else {
        // 0x40162d
        function_404490();
        function_40a349();
        int32_t v11 = g124 + 1;
        // branch -> 0x401658
        while (true) {
            // 0x401658
            function_404490();
            g125 = 2;
            int64_t v12 = 0x100000000 * (int64_t)(v11 / -0x80000000) | (int64_t)v11; // 0x40166a
            int32_t v13 = v12 / 2; // 0x40166a
            g124 = v13;
            g126 = v12 % 2;
            if (v13 >= 9) {
                int32_t * v14 = (int32_t *)2; // bp-204
                function_4044c0();
                int32_t v15 = *v14; // 0x401696
                g129 = v15;
                int32_t v16 = v15 + 4 * g99; // 0x40169d
                function_40a5d0((int32_t **)v16, (char *)4, 17);
                int32_t v17 = g99; // 0x4016a7
                g126 = 0x40d1ac;
                function_40a570(v17);
                g127 = 4 * *v14;
                g126 = *v14;
                int32_t v18 = function_40a570(v17); // 0x4016c3
                function_404540();
                g99 = g6 + v17;
                function_409a20();
                if ((v16 + 1 & (v16 ^ -0x80000000)) < 0) {
                    // break -> 0x4016f1
                    break;
                }
                v11 = v18;
                // continue -> 0x401658
                continue;
            }
            // 0x4016f1
            function_409810(0);
            // branch -> 0x401711
            // 0x401711
            function_404f3a("Success !", (int32_t *)"Now copy the content of 'Copy To SD' Folder to the root of your 3DS SD Card and launch the Profile Exploit in order to get the Xorpads. When it's over, put all xorpads in the main app folder.");
            function_404cc4(9, NULL, 87);
            g124 = 0;
            function_40a650((char *)9);
            function_40a3f9();
            return;
        }
        // 0x4016f1
        function_409810(0);
        // branch -> 0x401711
    }
    // 0x401711
    function_404f3a("Success !", (int32_t *)"Now copy the content of 'Copy To SD' Folder to the root of your 3DS SD Card and launch the Profile Exploit in order to get the Xorpads. When it's over, put all xorpads in the main app folder.");
    function_404cc4(9, NULL, 87);
    g124 = 0;
    function_40a650((char *)9);
    function_40a3f9();
}

// Address range: 0x401756 - 0x402094
void function_401756(void) {
    // 0x401756
    function_401413();
    function_404cc4(9, NULL, 67);
    function_402097();
    function_404cc4(9, NULL, 80);
    function_4030c2();
    function_404cc4(9, NULL, 68);
    if (g39 == 1) {
        // 0x4017b2
        function_4093cb();
        function_4093cb();
        function_4093cb();
        int32_t v1 = g99; // 0x4017db
        function_408eab(v1);
        int32_t v2 = g99 + 1; // 0x4017e7
        g99 = v2;
        function_408eab(v2);
        g126 = 0x40d12e;
        function_40a570(v2);
        int32_t v3 = g6 + v2; // 0x40180e
        function_405cbb(v3, (char *)v2, " -p --exefs=exefs.bin rom.3ds", (char)v1);
        g99 = v3;
        function_408eab(v3);
        int32_t v4 = g99 + 1; // 0x40183d
        g99 = v4;
        function_408eab(v4);
        g126 = 0x40d12e;
        function_40a570(v4);
        int32_t v5 = g6 + v4; // 0x401864
        function_405cbb(v5, (char *)v4, " -p --romfs=romfs.bin  rom.3ds", (char)v3);
        g99 = v5;
        function_408eab(v5);
        int32_t v6 = g99 + 1; // 0x401893
        g99 = v6;
        function_408eab(v6);
        g126 = 0x40d12e;
        function_40a570(v6);
        int32_t v7 = g6 + v6; // 0x4018ba
        function_405cbb(v7, (char *)v6, " -p --exheader=exheader.bin rom.3ds", (char)v5);
        g99 = v7;
        int32_t v8 = v7; // 0x401934
        if (g40 == 1) {
            // 0x4018de
            function_408eab(v7);
            int32_t v9 = g99 + 1; // 0x4018f5
            g99 = v9;
            function_408eab(v9);
            g126 = 0x40db78;
            function_40a570(v9);
            int32_t v10 = g6 + v9; // 0x40191c
            function_405cbb(v10, (char *)v9, " exefs.bin exefs_norm.xorpad exefs_7x.xorpad exefs.xorpad", (char)v7);
            g99 = v10;
            v8 = v10;
            // branch -> 0x401934
        }
        // 0x401934
        function_408eab(v8);
        int32_t v11 = g99 + 1; // 0x40194b
        g99 = v11;
        function_408eab(v11);
        g126 = 0x40da24;
        function_40a570(v11);
        int32_t v12 = g6 + v11; // 0x401972
        function_405cbb(v12, (char *)v11, " exefs.bin exefs.xorpad", (char)v8);
        g99 = v12;
        function_408eab(v12);
        int32_t v13 = g99 + 1; // 0x4019a1
        g99 = v13;
        function_408eab(v13);
        g126 = 0x40da24;
        function_40a570(v13);
        int32_t v14 = g6 + v13; // 0x4019c8
        function_405cbb(v14, (char *)v13, " exheader.bin exh.xorpad", (char)v12);
        g99 = v14;
        function_408eab(v14);
        int32_t v15 = g99 + 1; // 0x4019f7
        g99 = v15;
        function_408eab(v15);
        g126 = 0x40da24;
        function_40a570(v15);
        int32_t v16 = g6 + v15; // 0x401a1e
        function_405cbb(v16, (char *)v15, " romfs.bin romfs.xorpad", (char)v14);
        g99 = v16;
        int32_t v17 = v16; // 0x401af2
        if (g40 == 1) {
            // 0x401a46
            function_408eab(v16);
            g126 = 0x40db48;
            function_40a570(v16);
            int32_t v18 = g99 + 1; // 0x401a62
            g99 = v18;
            function_408eab(v18);
            g126 = 0x40e00f;
            function_40a570(v18);
            int32_t v19 = g6 + v18; // 0x401a84
            function_409444();
            g99 = v19;
            function_408eab(v19);
            g126 = 0x40d964;
            function_40a570(v19);
            int32_t v20 = g99 + 1; // 0x401ab8
            g99 = v20;
            function_408eab(v20);
            g126 = 0x40dda1;
            function_40a570(v20);
            int32_t v21 = g6 + v20; // 0x401ada
            function_409444();
            g99 = v21;
            v17 = v21;
            // branch -> 0x401af2
        }
        // 0x401af2
        function_408eab(v17);
        g126 = 0x40dbf0;
        function_40a570(v17);
        int32_t v22 = g99 + 1; // 0x401b0e
        g99 = v22;
        function_408eab(v22);
        g126 = 0x40de2b;
        function_40a570(v22);
        int32_t v23 = g6 + v22; // 0x401b30
        function_409444();
        g99 = v23;
        function_408eab(v23);
        g126 = 0x40d4b5;
        function_40a570(v23);
        int32_t v24 = g99 + 1; // 0x401b64
        g99 = v24;
        function_408eab(v24);
        g126 = 0x40d7bf;
        function_40a570(v24);
        int32_t v25 = g6 + v24; // 0x401b86
        function_409444();
        g99 = v25;
        function_408eab(v25);
        g126 = 0x40dd0d;
        function_40a570(v25);
        int32_t v26 = g99 + 1; // 0x401bba
        g99 = v26;
        function_408eab(v26);
        g126 = 0x40e01f;
        function_40a570(v26);
        int32_t v27 = g6 + v26; // 0x401bdc
        function_409444();
        g99 = v27;
        function_408eab(v27);
        g126 = 0x40dc21;
        function_40a570(v27);
        int32_t v28 = g99 + 1; // 0x401c10
        g99 = v28;
        function_408eab(v28);
        g126 = 0x40d048;
        function_40a570(v28);
        int32_t v29 = g6 + v28; // 0x401c32
        function_409444();
        g99 = v29;
        function_408eab(v29);
        g126 = 0x40d9b5;
        function_40a570(v29);
        int32_t v30 = g99 + 1; // 0x401c66
        g99 = v30;
        function_408eab(v30);
        g126 = 0x40ddf4;
        function_40a570(v30);
        int32_t v31 = g6 + v30; // 0x401c88
        function_409444();
        g99 = v31;
        function_408eab(v31);
        g126 = 0x40dcd6;
        function_40a570(v31);
        int32_t v32 = g99 + 1; // 0x401cbc
        g99 = v32;
        function_408eab(v32);
        g126 = 0x40df86;
        function_40a570(v32);
        int32_t v33 = g6 + v32; // 0x401cde
        function_409444();
        g99 = v33;
        function_408eab(v33);
        g126 = 0x40de38;
        function_40a570(v33);
        int32_t v34 = g99 + 1; // 0x401d12
        g99 = v34;
        function_408eab(v34);
        g126 = 0x40d797;
        function_40a570(v34);
        int32_t v35 = g6 + v34; // 0x401d34
        function_409444();
        g99 = v35;
        function_408eab(v35);
        int32_t v36 = g99 + 1; // 0x401d63
        g99 = v36;
        function_408eab(v36);
        g126 = 0x40d12e;
        function_40a570(v36);
        int32_t v37 = g6 + v36; // 0x401d8a
        function_405cbb(v37, (char *)v36, " --romfsdir=romfs decrypted_romfs.bin", (char)v35);
        g99 = v37;
        function_408eab(v37);
        int32_t v38 = g99 + 1; // 0x401db9
        g99 = v38;
        function_408eab(v38);
        g126 = 0x40d12e;
        function_40a570(v38);
        int32_t v39 = g6 + v38; // 0x401de0
        function_405cbb(v39, (char *)v38, " --exefsdir=exefs --decompresscode -t exefs decrypted_exefs.bin", (char)v37);
        g99 = v39;
        function_408eab(v39);
        g126 = 0x40dd75;
        function_40a570(v39);
        int32_t v40 = g99 + 1; // 0x401e14
        g99 = v40;
        function_408eab(v40);
        g126 = 0x40dba0;
        function_40a570(v40);
        int32_t v41 = g6 + v40; // 0x401e36
        function_409444();
        g99 = v41;
        function_408eab(v41);
        g126 = 0x40d00f;
        function_40a570(v41);
        int32_t v42 = g99 + 1; // 0x401e6a
        g99 = v42;
        function_408eab(v42);
        g126 = 0x40ddd1;
        function_40a570(v42);
        int32_t v43 = g6 + v42; // 0x401e8c
        function_409444();
        g99 = v43;
        function_408eab(v43);
        g126 = 0x40dbdc;
        function_40a570(v43);
        int32_t v44 = g99 + 1; // 0x401ec0
        g99 = v44;
        function_408eab(v44);
        g126 = 0x40d1ae;
        function_40a570(v44);
        int32_t v45 = g6 + v44; // 0x401ee2
        function_409444();
        g99 = v45;
        function_408eab(v45);
        g126 = 0x40de17;
        function_40a570(v45);
        int32_t v46 = g99 + 1; // 0x401f16
        g99 = v46;
        function_408eab(v46);
        g126 = 0x40d517;
        function_40a570(v46);
        int32_t v47 = g6 + v46; // 0x401f38
        function_409444();
        g99 = v47;
        function_408eab(v47);
        g126 = 0x40d7ae;
        function_40a570(v47);
        int32_t v48 = g99 + 1; // 0x401f76
        g99 = v48;
        function_408eab(v48);
        g126 = 0x40d762;
        function_40a570(v48);
        function_40945d();
        g99 = g6 + v48;
        function_4090de();
        int32_t v49 = g99; // 0x401fcf
        function_408eab(v49);
        int32_t v50 = g99 + 1; // 0x401fdb
        g99 = v50;
        function_408eab(v50);
        g126 = 0x40d12e;
        function_40a570(v50);
        int32_t v51 = g6 + v50; // 0x402002
        uint32_t v52 = function_405cbb(v51, (char *)v50, " -t exheader decrypted\\exheader.bin > exheaderinfo.txt", (char)v49); // 0x40200f
        g99 = v51;
        function_404cc4(9, NULL, 68);
        function_404cc4(9, NULL, 80);
        function_402e48();
        function_401258();
        if (v52 % 2 == 0) {
            // 0x402069
            function_404f3a("Error!", (int32_t *)"Decrypt failed :-( !");
            // branch -> 0x40207d
        } else {
            // 0x402053
            function_404f3a("Success!", (int32_t *)"Decrypt work is over!");
            // branch -> 0x40207d
        }
        // 0x40207d
        function_404cc4(9, NULL, 87);
        // branch -> 0x402091
    }
}

// Address range: 0x402097 - 0x40213e
void function_402097(void) {
    int32_t v1 = g99; // 0x4020a3
    function_408eab(v1);
    g99++;
    int32_t v2 = g6; // 0x4020ba
    g126 = v2;
    int32_t v3 = function_408fa4(NULL, v2 + v1, (char *)v1); // 0x4020c4
    g99 = 0;
    if (v3 == 0) {
        // 0x40213b
        return;
    }
    // 0x4020d3
    if (function_409099(0) == 0) {
        // 0x402131
        function_408f71(NULL);
        // branch -> 0x40213b
        // 0x40213b
        return;
    }
    while (true) {
        // 0x4020e1
        if (function_408f49(0) == 1) {
            // 0x4020f2
            function_408efd(0);
            int32_t v4 = g6; // 0x40210e
            int32_t v5 = function_404250(v4, g99); // 0x402117
            g99 = v4;
            if (v5 != 0) {
                // 0x402128
                g40 = 1;
                // branch -> 0x4020d3
            }
        }
        // 0x4020d3
        if (function_409099(0) == 0) {
            // break -> 0x402131
            break;
        }
        // continue -> 0x4020e1
    }
    // 0x402131
    function_408f71(NULL);
    // branch -> 0x40213b
}

// Address range: 0x40213f - 0x402390
int32_t function_40213f(void) {
    int32_t v1 = 0xc80003; // bp-8
    int32_t v2 = 259; // bp-16
    int32_t v3 = 392; // bp-20
    int32_t v4 = 179; // bp-24
    int32_t v5 = 535; // bp-28
    function_4072e6(NULL, (char *)&v5, &v4, &v3, &v2, "3DS to CIA converter - ant888", &v1);
    int32_t v6; // 0x40235f
    int32_t v7;
    if (g124 == 0) {
        // 0x40235a
        v6 = function_407309(0);
        v7 = 9;
        function_4049df((struct struct_4 *)&v7, (struct struct_4 *)v6);
        function_404e68();
        function_404cc4(9, NULL, 87);
        g127 = 9;
        return 0;
    }
    int32_t v8 = function_405dd0(NULL, (int32_t *)function_407309(0)); // 0x402180
    g124 = v8;
    if (v8 != 0) {
        // 0x402189
        function_405e49();
        function_405f30(NULL, (struct struct_12 *)"Open");
        int32_t v9 = 1;
        function_405f30((char *)&v9, (struct struct_12 *)"Quit");
        function_405e49();
        int32_t v10 = 2;
        function_405f30((char *)&v10, (struct struct_12 *)"About");
        // branch -> 0x4021ca
    }
    // 0x4021ca
    function_406294(0, 10, 30, 370, 80, 49);
    function_406407(1, 20, 60, 70, 20, 82);
    int32_t v11 = 20;
    int32_t v12 = 210;
    int32_t v13 = 60;
    int32_t v14 = 2;
    function_4064fb(&v14, 90, &v13, &v12, &v11, 0, 2048);
    int32_t v15 = 40;
    int32_t v16 = 60;
    int32_t v17 = 3;
    function_406700((char *)&v17, 320, &v16, (char *)&v15, 20, "...");
    int32_t v18 = 80;
    int32_t v19 = 150;
    int32_t v20 = 4;
    function_40663d((char *)&v20, 20, &v19, (char *)&v18, 50, "Build ncchinfo.bin", 0x2000);
    int32_t v21 = 80;
    int32_t v22 = 150;
    int32_t v23 = 5;
    function_40663d((char *)&v23, 110, &v22, (char *)&v21, 50, "Decrypt Rom", 0x2000);
    int32_t v24 = 80;
    int32_t v25 = 150;
    int32_t v26 = 6;
    function_40663d((char *)&v26, 200, &v25, (char *)&v24, 50, "Make 3DS Rom", 0x2000);
    int32_t v27 = 80;
    int32_t v28 = 150;
    int32_t v29 = 7;
    function_40663d((char *)&v29, 290, &v28, (char *)&v27, 50, "Make CIA Install File", 0x2000);
    function_406294(8, 10, 120, 370, 100, 50);
    function_406720(4);
    function_406720(5);
    function_406720(6);
    function_406720(7);
    // branch -> 0x40235a
    // 0x40235a
    v6 = function_407309(0);
    v7 = 9;
    function_4049df((struct struct_4 *)&v7, (struct struct_4 *)v6);
    function_404e68();
    function_404cc4(9, NULL, 87);
    g127 = 9;
    return 0;
}

// Address range: 0x402391 - 0x4024e5
void function_402391(void) {
    // 0x402391
    g126 = 0x40d602;
    function_404008(0, 0);
    g126 = 0x40d56b;
    function_404008(0, 0);
    int32_t v1 = 0; // bp-24
    int32_t v2 = 0; // bp-28
    function_405676(80, (char *)&v2, (char *)&v1, 0, (char *)g99);
    function_40a5d0((int32_t **)&g36, "Please, Load 3DS Rom", v2);
    int32_t * v3; // 0x4024c0_4
    if (function_409a00(0, g36) == 0) {
        // 0x402481
        g126 = 0x40d027;
        function_40a570(g99);
        int32_t v4 = g99; // 0x40249c
        int32_t v5 = g36; // 0x4024a3
        function_4096f8((int32_t *)v5, (int32_t *)v4);
        g124 = v5;
        g99++;
        g126 = g6;
        v3 = (int32_t *)(g6 + v4);
        function_404f3a("Error", v3);
        g99 = (int32_t)"Error";
        // branch -> 0x4024cf
    } else {
        // 0x4023f0
        function_40674b(2, g36);
        function_409810(0);
        function_404cc4(9, NULL, 67);
        function_4093a7((char *)g36, (char *)g37);
        function_404cc4(9, NULL, 67);
        function_406720(4);
        function_406720(5);
        function_406720(6);
        function_406720(7);
        int32_t * v6;
        v3 = v6;
        // branch -> 0x4024cf
    }
    // 0x4024cf
    g124 = 0;
    function_40a650((char *)v3);
    function_40a650((char *)v3);
}

// Address range: 0x4024e8 - 0x4028e3
void function_4024e8(void) {
    // 0x4024e8
    function_401327();
    int32_t v1 = g99; // 0x4024f3
    function_408eab(v1);
    g126 = 0x40dd5a;
    function_40a570(v1);
    int32_t v2 = g99 + 1; // 0x40250f
    g99 = v2;
    function_408eab(v2);
    g126 = 0x40dcc1;
    function_40a570(v2);
    int32_t v3 = g6 + v2; // 0x402531
    char * v4 = (char *)v3; // 0x40253e
    function_4093a7(v4, v4);
    g99 = v3;
    function_408eab(v3);
    g126 = 0x40df86;
    function_40a570(v3);
    int32_t v5 = g99 + 1; // 0x402565
    g99 = v5;
    function_408eab(v5);
    g126 = 0x40de38;
    function_40a570(v5);
    int32_t v6 = g6 + v5; // 0x402587
    char * v7 = (char *)v6; // 0x402594
    function_4093a7(v7, v7);
    g99 = v6;
    function_404cc4(9, NULL, 80);
    int32_t v8 = g99; // 0x4025be
    function_408eab(v8);
    int32_t v9 = g99 + 1; // 0x4025ca
    g99 = v9;
    function_408eab(v9);
    g126 = 0x40d37c;
    function_40a570(v9);
    int32_t v10 = g6 + v9; // 0x4025f1
    function_405cbb(v10, (char *)v9, " rom false", (char)v8);
    g99 = v10;
    function_404cc4(9, NULL, 77);
    int32_t v11; // 0x402792
    char * v12; // 0x402814
    int32_t v13; // 0x4027b9
    int32_t v14; // 0x402875
    int32_t v15; // 0x402786
    int32_t v16; // 0x4027f9
    int32_t v17; // 0x402859
    int32_t v18; // 0x40286f
    if (function_404f3a("Manual", (int32_t *)"Include manual ?") == 6) {
        // 0x402638
        if (g41 == 1) {
            int32_t v19 = g99; // 0x40266c
            function_408eab(v19);
            int32_t v20 = g99 + 1; // 0x402678
            g99 = v20;
            function_408eab(v20);
            g126 = 0x40dd62;
            function_40a570(v20);
            int32_t v21 = g6 + v20; // 0x40269f
            char * v22 = (char *)v20; // 0x4026ac
            char v23 = v19; // 0x4026ac
            if (g42 == 1) {
                // 0x402661
                function_405cbb(v21, v22, " -f cci -o rom.cci -target g -desc app:5 -content manual.cfa:1:1 -content dlp.cfa:2:2 -rsf rom.rsf -icon exefs\\icon.bin -banner exefs\\banner.bin -exefslogo -code exefs\\code.bin -exheader decrypted\\exheader.bin -romfs decrypted\\romfs.bin", v23);
                // branch -> 0x402767
            } else {
                // 0x4026b9
                function_405cbb(v21, v22, " -f cci -o rom.cci -target g -desc app:5 -content manual.cfa:1:1 -rsf rom.rsf -icon exefs\\icon.bin -banner exefs\\banner.bin -exefslogo -code exefs\\code.bin -exheader decrypted\\exheader.bin -romfs decrypted\\romfs.bin", v23);
                // branch -> 0x402767
            }
            // 0x402767
            g99 = v21;
            function_404cc4(9, NULL, 73);
            v15 = g99;
            function_408eab(v15);
            v11 = g99 + 1;
            g99 = v11;
            function_408eab(v11);
            g126 = 0x40db21;
            function_40a570(v11);
            v13 = g6 + v11;
            function_405cbb(v13, (char *)v11, " -rom rom.cci -exheader decrypted\\exheader.bin -sd", (char)v15);
            g99 = v13;
            function_404cc4(9, NULL, 82);
            function_408eeb(114);
            function_408eeb(101);
            v16 = g99;
            function_408eab(v16);
            g126 = 0x40d5c6;
            function_40a570(v16);
            v12 = (char *)v16;
            function_40a5d0((int32_t **)v16, v12, v16);
            g126 = 0x40d4e4;
            function_404008(v16, v16);
            function_405698(83, v12, v12, 0, (char *)g99);
            function_40a5d0(NULL, "Save your edited 3ds rom file", v16);
            v17 = g99;
            function_408eab(v17);
            g126 = 0x40db19;
            function_40a570(v17);
            v18 = g6;
            g126 = v18;
            v14 = v18 + v17;
            function_4093a7((char *)v14, (char *)v17);
            g99 = v14;
            function_408eeb(114);
            function_404f3a("Success", (int32_t *)"3DS Rom rebuilt!");
            function_404cc4(9, NULL, 87);
            g41 = 0;
            g42 = 0;
            g124 = 0;
            function_40a650((char *)9);
            function_40a650((char *)9);
            function_40a650((char *)9);
            return;
        }
    }
    int32_t v24 = g99; // 0x402711
    function_408eab(v24);
    int32_t v25 = g99 + 1; // 0x402728
    g99 = v25;
    function_408eab(v25);
    g126 = 0x40dd62;
    function_40a570(v25);
    int32_t v26 = g6 + v25; // 0x40274f
    function_405cbb(v26, (char *)v25, " -f cci -o rom.cci -target g -desc app:5 -rsf rom.rsf -icon exefs\\icon.bin -banner exefs\\banner.bin -exefslogo -code exefs\\code.bin -exheader decrypted\\exheader.bin -romfs decrypted\\romfs.bin", (char)v24);
    // branch -> 0x402767
    // 0x402767
    g99 = v26;
    function_404cc4(9, NULL, 73);
    v15 = g99;
    function_408eab(v15);
    v11 = g99 + 1;
    g99 = v11;
    function_408eab(v11);
    g126 = 0x40db21;
    function_40a570(v11);
    v13 = g6 + v11;
    function_405cbb(v13, (char *)v11, " -rom rom.cci -exheader decrypted\\exheader.bin -sd", (char)v15);
    g99 = v13;
    function_404cc4(9, NULL, 82);
    function_408eeb(114);
    function_408eeb(101);
    v16 = g99;
    function_408eab(v16);
    g126 = 0x40d5c6;
    function_40a570(v16);
    v12 = (char *)v16;
    function_40a5d0((int32_t **)v16, v12, v16);
    g126 = 0x40d4e4;
    function_404008(v16, v16);
    function_405698(83, v12, v12, 0, (char *)g99);
    function_40a5d0(NULL, "Save your edited 3ds rom file", v16);
    v17 = g99;
    function_408eab(v17);
    g126 = 0x40db19;
    function_40a570(v17);
    v18 = g6;
    g126 = v18;
    v14 = v18 + v17;
    function_4093a7((char *)v14, (char *)v17);
    g99 = v14;
    function_408eeb(114);
    function_404f3a("Success", (int32_t *)"3DS Rom rebuilt!");
    function_404cc4(9, NULL, 87);
    g41 = 0;
    g42 = 0;
    g124 = 0;
    function_40a650((char *)9);
    function_40a650((char *)9);
    function_40a650((char *)9);
}

// Address range: 0x4028e6 - 0x402e45
void function_4028e6(void) {
    // 0x4028e6
    function_401327();
    int32_t v1 = g99; // 0x4028f1
    function_408eab(v1);
    g126 = 0x40d355;
    function_40a570(v1);
    int32_t v2 = g99 + 1; // 0x40290d
    g99 = v2;
    function_408eab(v2);
    g126 = 0x40dcc1;
    function_40a570(v2);
    int32_t v3 = g6 + v2; // 0x40292f
    char * v4 = (char *)v3; // 0x40293c
    function_4093a7(v4, v4);
    g99 = v3;
    function_408eab(v3);
    g126 = 0x40df86;
    function_40a570(v3);
    int32_t v5 = g99 + 1; // 0x402963
    g99 = v5;
    function_408eab(v5);
    g126 = 0x40de38;
    function_40a570(v5);
    int32_t v6 = g6 + v5; // 0x402985
    char * v7 = (char *)v6; // 0x402992
    function_4093a7(v7, v7);
    g99 = v6;
    function_404cc4(9, NULL, 80);
    int32_t v8 = function_404f3a("Region Lock", (int32_t *)"Remove region lock ?"); // 0x4029c0
    int32_t v9 = g99; // 0x4029d7
    function_408eab(v9);
    int32_t v10 = g99 + 1; // 0x4029e3
    g99 = v10;
    function_408eab(v10);
    g126 = 0x40d37c;
    function_40a570(v10);
    int32_t v11 = g6 + v10; // 0x402a0a
    char * v12 = (char *)v10; // 0x402a17
    char v13 = v9; // 0x402a17
    if (v8 == 6) {
        // 0x4029cc
        function_405cbb(v11, v12, " rom true", v13);
        // branch -> 0x402a7a
    } else {
        // 0x402a24
        function_405cbb(v11, v12, " rom false", v13);
        // branch -> 0x402a7a
    }
    // 0x402a7a
    g99 = v11;
    function_404cc4(9, NULL, 77);
    int32_t v14 = g99; // 0x402a99
    function_408eab(v14);
    int32_t v15 = g99 + 1; // 0x402aa5
    g99 = v15;
    function_408eab(v15);
    g126 = 0x40d785;
    function_40a570(v15);
    int32_t v16 = g6 + v15; // 0x402acc
    function_405cbb(v16, (char *)v15, " -f cxi -o rom.cxi -target t -desc app:5 -rsf rom.rsf -icon exefs\\icon.bin -banner exefs\\banner.bin -exefslogo -code exefs\\code.bin -exheader decrypted\\exheader.bin -romfs decrypted\\romfs.bin", (char)v14);
    g99 = v16;
    function_404cc4(9, NULL, 73);
    int32_t v17 = function_404f3a("Firmware spoof", (int32_t *)"Spoof firmware ?"); // 0x402b07
    int32_t v18 = g99; // 0x402b1e
    function_408eab(v18);
    int32_t v19 = g99 + 1; // 0x402b2a
    g99 = v19;
    function_408eab(v19);
    g126 = 0x40db21;
    function_40a570(v19);
    int32_t v20 = g6 + v19; // 0x402b51
    char * v21 = (char *)v19; // 0x402b5e
    char v22 = v18; // 0x402b5e
    if (v17 == 7) {
        // 0x402b13
        function_405cbb(v20, v21, " -rom rom.cxi -exheader decrypted\\exheader.bin -sd", v22);
        // branch -> 0x402bc1
    } else {
        // 0x402b6b
        function_405cbb(v20, v21, " -rom rom.cxi -exheader decrypted\\exheader.bin -sd -fwspoof", v22);
        // branch -> 0x402bc1
    }
    // 0x402bc1
    g99 = v20;
    function_404cc4(9, NULL, 67);
    char * v23; // 0x402d76
    int32_t v24; // 0x402dd7
    int32_t v25; // 0x402d5b
    int32_t v26; // 0x402dbb
    int32_t v27; // 0x402dd1
    if (function_404f3a("Manual", (int32_t *)"Include manual ?") == 6) {
        // 0x402bf0
        if (g41 == 1) {
            int32_t v28 = g99; // 0x402c24
            function_408eab(v28);
            int32_t v29 = g99 + 1; // 0x402c30
            g99 = v29;
            function_408eab(v29);
            g126 = 0x40d785;
            function_40a570(v29);
            int32_t v30 = g6 + v29; // 0x402c57
            char * v31 = (char *)v29; // 0x402c64
            char v32 = v28; // 0x402c64
            if (g42 == 1) {
                // 0x402c19
                function_405cbb(v30, v31, " -f cia -o rom.cia -content rom.cxi:0:0 -content manual.cfa:1:1 -content dlp.cfa:2:2", v32);
                // branch -> 0x402d1f
            } else {
                // 0x402c71
                function_405cbb(v30, v31, " -f cia -o rom.cia -content rom.cxi:0:0 -content manual.cfa:1:1", v32);
                // branch -> 0x402d1f
            }
            // 0x402d1f
            g99 = v30;
            function_404cc4(9, NULL, 67);
            function_408eeb(114);
            function_408eeb(114);
            function_408eeb(97);
            function_408eeb(101);
            v25 = g99;
            function_408eab(v25);
            g126 = 0x40db8e;
            function_40a570(v25);
            v23 = (char *)v25;
            function_40a5d0((int32_t **)v25, v23, v25);
            g126 = 0x40d35e;
            function_404008(v25, v25);
            function_405698(83, v23, v23, 0, (char *)g99);
            function_40a5d0(NULL, "Save your edited cia rom file", v25);
            v26 = g99;
            function_408eab(v26);
            g126 = 0x40d615;
            function_40a570(v26);
            v27 = g6;
            g126 = v27;
            v24 = v27 + v26;
            function_4093a7((char *)v24, (char *)v26);
            g99 = v24;
            function_408eeb(114);
            function_404f3a("Success", (int32_t *)"CIA Conversion done ! ");
            function_404cc4(9, NULL, 87);
            g41 = 0;
            g42 = 0;
            g124 = 0;
            function_40a650((char *)9);
            function_40a650((char *)9);
            function_40a650((char *)9);
            return;
        }
    }
    int32_t v33 = g99; // 0x402cc9
    function_408eab(v33);
    int32_t v34 = g99 + 1; // 0x402ce0
    g99 = v34;
    function_408eab(v34);
    g126 = 0x40d785;
    function_40a570(v34);
    int32_t v35 = g6 + v34; // 0x402d07
    function_405cbb(v35, (char *)v34, " -f cia -o rom.cia -content rom.cxi:0:0", (char)v33);
    // branch -> 0x402d1f
    // 0x402d1f
    g99 = v35;
    function_404cc4(9, NULL, 67);
    function_408eeb(114);
    function_408eeb(114);
    function_408eeb(97);
    function_408eeb(101);
    v25 = g99;
    function_408eab(v25);
    g126 = 0x40db8e;
    function_40a570(v25);
    v23 = (char *)v25;
    function_40a5d0((int32_t **)v25, v23, v25);
    g126 = 0x40d35e;
    function_404008(v25, v25);
    function_405698(83, v23, v23, 0, (char *)g99);
    function_40a5d0(NULL, "Save your edited cia rom file", v25);
    v26 = g99;
    function_408eab(v26);
    g126 = 0x40d615;
    function_40a570(v26);
    v27 = g6;
    g126 = v27;
    v24 = v27 + v26;
    function_4093a7((char *)v24, (char *)v26);
    g99 = v24;
    function_408eeb(114);
    function_404f3a("Success", (int32_t *)"CIA Conversion done ! ");
    function_404cc4(9, NULL, 87);
    g41 = 0;
    g42 = 0;
    g124 = 0;
    function_40a650((char *)9);
    function_40a650((char *)9);
    function_40a650((char *)9);
}

// Address range: 0x402e48 - 0x4030c1
void function_402e48(void) {
    int32_t v1 = g99; // 0x402e54
    function_408eab(v1);
    g99++;
    int32_t v2 = g6; // 0x402e6b
    g126 = v2;
    int32_t v3 = function_408fa4(NULL, v2 + v1, (char *)v1); // 0x402e75
    g99 = 0;
    int32_t v4 = 0; // 0x403038
    int32_t v5; // 0x403059
    int32_t v6; // 0x40304f
    if (v3 != 0) {
        // 0x402e88
        if (function_409099(0) != 0) {
            while (true) {
                // 0x402e9a
                if (function_408f49(0) == 1) {
                    // 0x402eaf
                    function_408efd(0);
                    int32_t v7 = g6; // 0x402ecb
                    int32_t v8 = function_404250(v7, g99); // 0x402ed4
                    g99 = v7;
                    int32_t v9 = v7; // 0x402f36
                    if (v8 != 0) {
                        // 0x402ee5
                        function_408eab(v7);
                        g126 = 0x40d2ee;
                        function_40a570(v7);
                        g99++;
                        function_408efd(0);
                        int32_t v10 = g6; // 0x402f18
                        function_409444();
                        g99 = v10;
                        v9 = v10;
                        // branch -> 0x402f36
                    }
                    // 0x402f36
                    function_408efd(0);
                    int32_t v11 = g6; // 0x402f52
                    int32_t v12 = function_404250(v11, v9); // 0x402f5b
                    g99 = v11;
                    int32_t v13 = v11; // 0x402fbd
                    if (v12 != 0) {
                        // 0x402f6c
                        function_408eab(v11);
                        g126 = 0x40d08e;
                        function_40a570(v11);
                        g99++;
                        function_408efd(0);
                        int32_t v14 = g6; // 0x402f9f
                        function_409444();
                        g99 = v14;
                        v13 = v14;
                        // branch -> 0x402fbd
                    }
                    // 0x402fbd
                    function_408efd(0);
                    int32_t v15 = g6; // 0x402fd9
                    int32_t v16 = function_404250(v15, v13); // 0x402fe2
                    g99 = v15;
                    if (v16 != 0) {
                        // 0x402ff3
                        function_408efd(0);
                        int32_t v17 = g6; // 0x40300a
                        function_408eeb(v17);
                        g99 = v17;
                        // branch -> 0x402e88
                    }
                }
                // 0x402e88
                if (function_409099(0) == 0) {
                    // break -> 0x403023
                    break;
                }
                // continue -> 0x402e9a
            }
            // 0x403023
            function_408f71(NULL);
            v4 = g99;
            // branch -> 0x40302d
            // 0x40302d
            function_408eab(v4);
            g99++;
            v6 = g6;
            g126 = v6;
            v5 = function_408fa4(NULL, v6 + v4, (char *)v4);
            g99 = 0;
            if (v5 == 0) {
                // 0x4030be
                return;
            }
            // 0x403068
            if (function_409099(0) == 0) {
                // 0x4030b4
                function_408f71(NULL);
                // branch -> 0x4030be
                // 0x4030be
                return;
            }
            while (true) {
                // 0x403076
                if (function_408f49(0) == 1) {
                  lab_0x3fc86b0:
                    // 0x403087
                    function_408efd(0);
                    int32_t v18 = g6; // 0x40309e
                    function_408eeb(v18);
                    g99 = v18;
                    // branch -> 0x403068
                }
              lab_0x3fc9930:
                // 0x403068
                if (function_409099(0) == 0) {
                    // break -> 0x4030b4
                    break;
                }
                // continue -> 0x403076
            }
            // 0x4030b4
            function_408f71(NULL);
            // branch -> 0x4030be
            // 0x4030be
            return;
        }
        // 0x403023
        function_408f71(NULL);
        v4 = g99;
        // branch -> 0x40302d
    }
    // 0x40302d
    function_408eab(v4);
    g99++;
    v6 = g6;
    g126 = v6;
    v5 = function_408fa4(NULL, v6 + v4, (char *)v4);
    g99 = 0;
    if (v5 == 0) {
        // 0x4030be
        return;
    }
    // 0x403068
    if (function_409099(0) != 0) {
        while (true) {
            // 0x403076
            if (function_408f49(0) == 1) {
                goto lab_0x3fc86b0;
            }
            goto lab_0x3fc9930;
        }
    }
    // 0x4030b4
    function_408f71(NULL);
    // branch -> 0x4030be
}

// Address range: 0x4030c2 - 0x403609
void function_4030c2(void) {
    int32_t v1 = g99; // 0x4030ce
    function_408eab(v1);
    g99++;
    int32_t v2 = g6; // 0x4030e5
    g126 = v2;
    int32_t v3 = function_408fa4(NULL, v2 + v1, (char *)v1); // 0x4030ef
    g99 = 0;
    if (v3 == 0) {
        // 0x403606
        return;
    }
    // 0x403102
    if (function_409099(0) == 0) {
        // 0x4035dd
        function_408f71(NULL);
        if (g39 == 0) {
            // 0x4035f2
            function_404f3a("Error", (int32_t *)"No xorpad file found!");
            // branch -> 0x403606
        }
        // 0x403606
        return;
    }
    while (true) {
        // 0x403114
        g39 = 1;
        if (function_408f49(0) == 1) {
            // 0x403130
            function_408efd(0);
            int32_t v4 = g6; // 0x40314c
            int32_t v5 = function_404250(v4, g99); // 0x403155
            g99 = v4;
            function_408efd(0);
            int32_t v6 = g6; // 0x4031b2
            g126 = v6;
            if (v5 == 0) {
                int32_t v7 = function_404250(v6, v4); // 0x4031bb
                g99 = v6;
                if (v7 == 0) {
                    // 0x403222
                    function_408efd(0);
                    int32_t v8 = g6; // 0x40323e
                    int32_t v9 = function_404250(v8, v6); // 0x403247
                    g99 = v8;
                    if (v9 == 0) {
                        // 0x4032ae
                        function_408efd(0);
                        int32_t v10 = g6; // 0x4032ca
                        int32_t v11 = function_404250(v10, v8); // 0x4032d3
                        g99 = v10;
                        if (v11 == 0) {
                            // 0x403394
                            function_408efd(0);
                            int32_t v12 = g6; // 0x4033b0
                            int32_t v13 = function_404250(v12, v10); // 0x4033b9
                            g99 = v12;
                            if (v13 == 0) {
                                // 0x403420
                                function_408efd(0);
                                int32_t v14 = g6; // 0x40344b
                                g126 = v14;
                                int32_t v15 = function_404250(v14, v12); // 0x403454
                                g99 = v14;
                                if (g40 == 0) {
                                    // 0x40342f
                                    if (v15 != 0) {
                                        // 0x403465
                                        function_408eab(v14);
                                        g126 = 0x40de2b;
                                        function_40a570(v14);
                                        g99++;
                                        function_408efd(0);
                                        int32_t v16 = g6; // 0x403498
                                        g126 = v16;
                                        function_409444();
                                        g99 = v16;
                                        // branch -> 0x403102
                                    }
                                } else {
                                    // 0x4034c0
                                    if (v15 == 0) {
                                        // 0x40354c
                                        function_408efd(0);
                                        int32_t v17 = g6; // 0x403568
                                        g126 = v17;
                                        int32_t v18 = function_404250(v17, v14); // 0x403571
                                        g99 = v17;
                                        if (v18 != 0) {
                                            // 0x403582
                                            function_408eab(v17);
                                            g126 = 0x40dda1;
                                            function_40a570(v17);
                                            g99++;
                                            function_408efd(0);
                                            int32_t v19 = g6; // 0x4035b5
                                            g126 = v19;
                                            function_409444();
                                            g99 = v19;
                                            // branch -> 0x403102
                                        }
                                    } else {
                                        // 0x4034f6
                                        function_408eab(v14);
                                        g126 = 0x40e00f;
                                        function_40a570(v14);
                                        g99++;
                                        function_408efd(0);
                                        int32_t v20 = g6; // 0x403529
                                        g126 = v20;
                                        function_409444();
                                        g99 = v20;
                                        // branch -> 0x403102
                                    }
                                    // 0x403102
                                    if (function_409099(0) == 0) {
                                        // break -> 0x4035dd
                                        break;
                                    }
                                    // continue -> 0x403114
                                    continue;
                                }
                              lab_0x4001870:
                                // 0x403102
                                if (function_409099(0) == 0) {
                                    // break -> 0x4035dd
                                    break;
                                }
                                // continue -> 0x403114
                                continue;
                            } else {
                                // 0x4033ca
                                function_408eab(v12);
                                g126 = 0x40ddf4;
                                function_40a570(v12);
                                g99++;
                                function_408efd(0);
                                int32_t v21 = g6; // 0x4033fd
                                g126 = v21;
                                function_409444();
                                g99 = v21;
                                // branch -> 0x403102
                                goto lab_0x4001870;
                            }
                          lab_0x4003fd0:
                            // 0x403102
                            if (function_409099(0) == 0) {
                                // break -> 0x4035dd
                                break;
                            }
                            // continue -> 0x403114
                            continue;
                        } else {
                            // 0x4032e8
                            function_408eab(v10);
                            int32_t v22 = g99 + 1; // 0x4032ff
                            g99 = v22;
                            function_408eab(v22);
                            g126 = 0x40dc0e;
                            function_40a570(v22);
                            int32_t v23 = g6 + v22; // 0x403326
                            function_405cbb(v23, (char *)v22, " --extract=. rom.3ds", (char)v10);
                            g99 = v23;
                            function_408eab(v23);
                            g126 = 0x40d048;
                            function_40a570(v23);
                            g99++;
                            function_408efd(0);
                            int32_t v24 = g6; // 0x403371
                            g126 = v24;
                            function_409444();
                            g99 = v24;
                            // branch -> 0x403102
                            goto lab_0x4003fd0;
                        }
                      lab_0x4008570:
                        // 0x403102
                        if (function_409099(0) == 0) {
                            // break -> 0x4035dd
                            break;
                        }
                        // continue -> 0x403114
                        continue;
                    } else {
                        // 0x403258
                        function_408eab(v8);
                        g126 = 0x40e01f;
                        function_40a570(v8);
                        g99++;
                        function_408efd(0);
                        int32_t v25 = g6; // 0x40328b
                        g126 = v25;
                        function_409444();
                        g99 = v25;
                        // branch -> 0x403102
                        goto lab_0x4008570;
                    }
                  lab_0x400ac10:
                    // 0x403102
                    if (function_409099(0) == 0) {
                        // break -> 0x4035dd
                        break;
                    }
                    // continue -> 0x403114
                    continue;
                } else {
                    // 0x4031cc
                    function_408eab(v6);
                    g126 = 0x40d7bf;
                    function_40a570(v6);
                    g99++;
                    function_408efd(0);
                    int32_t v26 = g6; // 0x4031ff
                    g126 = v26;
                    function_409444();
                    g99 = v26;
                    // branch -> 0x403102
                    goto lab_0x400ac10;
                }
              lab_0x400d0b0:
                // 0x403102
                if (function_409099(0) == 0) {
                    // break -> 0x4035dd
                    break;
                }
                // continue -> 0x403114
                continue;
            } else {
                // 0x403166
                function_408eeb(v6);
                g99 = v6;
                // branch -> 0x403102
                goto lab_0x400d0b0;
            }
        }
        // 0x403102
        if (function_409099(0) == 0) {
            // break -> 0x4035dd
            break;
        }
        // continue -> 0x403114
    }
    // 0x4035dd
    function_408f71(NULL);
    if (g39 == 0) {
        // 0x4035f2
        function_404f3a("Error", (int32_t *)"No xorpad file found!");
        // branch -> 0x403606
    }
}

// Address range: 0x40360a - 0x404007
void function_40360a(void) {
    int32_t v1 = g124; // 0x40360a
    char * v2 = (char *)v1; // 0x40360a_0
    *v2 = (char)((int32_t)*v2 + v1);
    int32_t v3 = g124; // 0x40360c
    char * v4 = (char *)v3; // 0x40360c_0
    *v4 = (char)((int32_t)*v4 + v3);
    int32_t v5 = g124; // 0x40360e
    char * v6 = (char *)v5; // 0x40360e_0
    *v6 = (char)((int32_t)*v6 + v5);
    int32_t v7 = g124; // 0x403610
    char * v8 = (char *)v7; // 0x403610_0
    *v8 = (char)((int32_t)*v8 + v7);
    int32_t v9 = g124; // 0x403612
    char * v10 = (char *)v9; // 0x403612_0
    *v10 = (char)((int32_t)*v10 + v9);
    int32_t v11 = g124; // 0x403614
    char * v12 = (char *)v11; // 0x403614_0
    *v12 = (char)((int32_t)*v12 + v11);
    int32_t v13 = g124; // 0x403616
    char * v14 = (char *)v13; // 0x403616_0
    *v14 = (char)((int32_t)*v14 + v13);
    int32_t v15 = g124; // 0x403618
    char * v16 = (char *)v15; // 0x403618_0
    *v16 = (char)((int32_t)*v16 + v15);
    int32_t v17 = g124; // 0x40361a
    char * v18 = (char *)v17; // 0x40361a_0
    *v18 = (char)((int32_t)*v18 + v17);
    int32_t v19 = g124; // 0x40361c
    char * v20 = (char *)v19; // 0x40361c_0
    *v20 = (char)((int32_t)*v20 + v19);
    int32_t v21 = g124; // 0x40361e
    char * v22 = (char *)v21; // 0x40361e_0
    *v22 = (char)((int32_t)*v22 + v21);
    int32_t v23 = g124; // 0x403620
    char * v24 = (char *)v23; // 0x403620_0
    *v24 = (char)((int32_t)*v24 + v23);
    int32_t v25 = g124; // 0x403622
    char * v26 = (char *)v25; // 0x403622_0
    *v26 = (char)((int32_t)*v26 + v25);
    int32_t v27 = g124; // 0x403624
    char * v28 = (char *)v27; // 0x403624_0
    *v28 = (char)((int32_t)*v28 + v27);
    int32_t v29 = g124; // 0x403626
    char * v30 = (char *)v29; // 0x403626_0
    *v30 = (char)((int32_t)*v30 + v29);
    int32_t v31 = g124; // 0x403628
    char * v32 = (char *)v31; // 0x403628_0
    *v32 = (char)((int32_t)*v32 + v31);
    int32_t v33 = g124; // 0x40362a
    char * v34 = (char *)v33; // 0x40362a_0
    *v34 = (char)((int32_t)*v34 + v33);
    int32_t v35 = g124; // 0x40362c
    char * v36 = (char *)v35; // 0x40362c_0
    *v36 = (char)((int32_t)*v36 + v35);
    int32_t v37 = g124; // 0x40362e
    char * v38 = (char *)v37; // 0x40362e_0
    *v38 = (char)((int32_t)*v38 + v37);
    int32_t v39 = g124; // 0x403630
    char * v40 = (char *)v39; // 0x403630_0
    *v40 = (char)((int32_t)*v40 + v39);
    int32_t v41 = g124; // 0x403632
    char * v42 = (char *)v41; // 0x403632_0
    *v42 = (char)((int32_t)*v42 + v41);
    int32_t v43 = g124; // 0x403634
    char * v44 = (char *)v43; // 0x403634_0
    *v44 = (char)((int32_t)*v44 + v43);
    int32_t v45 = g124; // 0x403636
    char * v46 = (char *)v45; // 0x403636_0
    *v46 = (char)((int32_t)*v46 + v45);
    int32_t v47 = g124; // 0x403638
    char * v48 = (char *)v47; // 0x403638_0
    *v48 = (char)((int32_t)*v48 + v47);
    int32_t v49 = g124; // 0x40363a
    char * v50 = (char *)v49; // 0x40363a_0
    *v50 = (char)((int32_t)*v50 + v49);
    int32_t v51 = g124; // 0x40363c
    char * v52 = (char *)v51; // 0x40363c_0
    *v52 = (char)((int32_t)*v52 + v51);
    int32_t v53 = g124; // 0x40363e
    char * v54 = (char *)v53; // 0x40363e_0
    *v54 = (char)((int32_t)*v54 + v53);
    int32_t v55 = g124; // 0x403640
    char * v56 = (char *)v55; // 0x403640_0
    *v56 = (char)((int32_t)*v56 + v55);
    int32_t v57 = g124; // 0x403642
    char * v58 = (char *)v57; // 0x403642_0
    *v58 = (char)((int32_t)*v58 + v57);
    int32_t v59 = g124; // 0x403644
    char * v60 = (char *)v59; // 0x403644_0
    *v60 = (char)((int32_t)*v60 + v59);
    int32_t v61 = g124; // 0x403646
    char * v62 = (char *)v61; // 0x403646_0
    *v62 = (char)((int32_t)*v62 + v61);
    int32_t v63 = g124; // 0x403648
    char * v64 = (char *)v63; // 0x403648_0
    *v64 = (char)((int32_t)*v64 + v63);
    int32_t v65 = g124; // 0x40364a
    char * v66 = (char *)v65; // 0x40364a_0
    *v66 = (char)((int32_t)*v66 + v65);
    int32_t v67 = g124; // 0x40364c
    char * v68 = (char *)v67; // 0x40364c_0
    *v68 = (char)((int32_t)*v68 + v67);
    int32_t v69 = g124; // 0x40364e
    char * v70 = (char *)v69; // 0x40364e_0
    *v70 = (char)((int32_t)*v70 + v69);
    int32_t v71 = g124; // 0x403650
    char * v72 = (char *)v71; // 0x403650_0
    *v72 = (char)((int32_t)*v72 + v71);
    int32_t v73 = g124; // 0x403652
    char * v74 = (char *)v73; // 0x403652_0
    *v74 = (char)((int32_t)*v74 + v73);
    int32_t v75 = g124; // 0x403654
    char * v76 = (char *)v75; // 0x403654_0
    *v76 = (char)((int32_t)*v76 + v75);
    int32_t v77 = g124; // 0x403656
    char * v78 = (char *)v77; // 0x403656_0
    *v78 = (char)((int32_t)*v78 + v77);
    int32_t v79 = g124; // 0x403658
    char * v80 = (char *)v79; // 0x403658_0
    *v80 = (char)((int32_t)*v80 + v79);
    int32_t v81 = g124; // 0x40365a
    char * v82 = (char *)v81; // 0x40365a_0
    *v82 = (char)((int32_t)*v82 + v81);
    int32_t v83 = g124; // 0x40365c
    char * v84 = (char *)v83; // 0x40365c_0
    *v84 = (char)((int32_t)*v84 + v83);
    int32_t v85 = g124; // 0x40365e
    char * v86 = (char *)v85; // 0x40365e_0
    *v86 = (char)((int32_t)*v86 + v85);
    int32_t v87 = g124; // 0x403660
    char * v88 = (char *)v87; // 0x403660_0
    *v88 = (char)((int32_t)*v88 + v87);
    int32_t v89 = g124; // 0x403662
    char * v90 = (char *)v89; // 0x403662_0
    *v90 = (char)((int32_t)*v90 + v89);
    int32_t v91 = g124; // 0x403664
    char * v92 = (char *)v91; // 0x403664_0
    *v92 = (char)((int32_t)*v92 + v91);
    int32_t v93 = g124; // 0x403666
    char * v94 = (char *)v93; // 0x403666_0
    *v94 = (char)((int32_t)*v94 + v93);
    int32_t v95 = g124; // 0x403668
    char * v96 = (char *)v95; // 0x403668_0
    *v96 = (char)((int32_t)*v96 + v95);
    int32_t v97 = g124; // 0x40366a
    char * v98 = (char *)v97; // 0x40366a_0
    *v98 = (char)((int32_t)*v98 + v97);
    int32_t v99 = g124; // 0x40366c
    char * v100 = (char *)v99; // 0x40366c_0
    *v100 = (char)((int32_t)*v100 + v99);
    int32_t v101 = g124; // 0x40366e
    char * v102 = (char *)v101; // 0x40366e_0
    *v102 = (char)((int32_t)*v102 + v101);
    int32_t v103 = g124; // 0x403670
    char * v104 = (char *)v103; // 0x403670_0
    *v104 = (char)((int32_t)*v104 + v103);
    int32_t v105 = g124; // 0x403672
    char * v106 = (char *)v105; // 0x403672_0
    *v106 = (char)((int32_t)*v106 + v105);
    int32_t v107 = g124; // 0x403674
    char * v108 = (char *)v107; // 0x403674_0
    *v108 = (char)((int32_t)*v108 + v107);
    int32_t v109 = g124; // 0x403676
    char * v110 = (char *)v109; // 0x403676_0
    *v110 = (char)((int32_t)*v110 + v109);
    int32_t v111 = g124; // 0x403678
    char * v112 = (char *)v111; // 0x403678_0
    *v112 = (char)((int32_t)*v112 + v111);
    int32_t v113 = g124; // 0x40367a
    char * v114 = (char *)v113; // 0x40367a_0
    *v114 = (char)((int32_t)*v114 + v113);
    int32_t v115 = g124; // 0x40367c
    char * v116 = (char *)v115; // 0x40367c_0
    *v116 = (char)((int32_t)*v116 + v115);
    int32_t v117 = g124; // 0x40367e
    char * v118 = (char *)v117; // 0x40367e_0
    *v118 = (char)((int32_t)*v118 + v117);
    int32_t v119 = g124; // 0x403680
    char * v120 = (char *)v119; // 0x403680_0
    *v120 = (char)((int32_t)*v120 + v119);
    int32_t v121 = g124; // 0x403682
    char * v122 = (char *)v121; // 0x403682_0
    *v122 = (char)((int32_t)*v122 + v121);
    int32_t v123 = g124; // 0x403684
    char * v124 = (char *)v123; // 0x403684_0
    *v124 = (char)((int32_t)*v124 + v123);
    int32_t v125 = g124; // 0x403686
    char * v126 = (char *)v125; // 0x403686_0
    *v126 = (char)((int32_t)*v126 + v125);
    int32_t v127 = g124; // 0x403688
    char * v128 = (char *)v127; // 0x403688_0
    *v128 = (char)((int32_t)*v128 + v127);
    int32_t v129 = g124; // 0x40368a
    char * v130 = (char *)v129; // 0x40368a_0
    *v130 = (char)((int32_t)*v130 + v129);
    int32_t v131 = g124; // 0x40368c
    char * v132 = (char *)v131; // 0x40368c_0
    *v132 = (char)((int32_t)*v132 + v131);
    int32_t v133 = g124; // 0x40368e
    char * v134 = (char *)v133; // 0x40368e_0
    *v134 = (char)((int32_t)*v134 + v133);
    int32_t v135 = g124; // 0x403690
    char * v136 = (char *)v135; // 0x403690_0
    *v136 = (char)((int32_t)*v136 + v135);
    int32_t v137 = g124; // 0x403692
    char * v138 = (char *)v137; // 0x403692_0
    *v138 = (char)((int32_t)*v138 + v137);
    int32_t v139 = g124; // 0x403694
    char * v140 = (char *)v139; // 0x403694_0
    *v140 = (char)((int32_t)*v140 + v139);
    int32_t v141 = g124; // 0x403696
    char * v142 = (char *)v141; // 0x403696_0
    *v142 = (char)((int32_t)*v142 + v141);
    int32_t v143 = g124; // 0x403698
    char * v144 = (char *)v143; // 0x403698_0
    *v144 = (char)((int32_t)*v144 + v143);
    int32_t v145 = g124; // 0x40369a
    char * v146 = (char *)v145; // 0x40369a_0
    *v146 = (char)((int32_t)*v146 + v145);
    int32_t v147 = g124; // 0x40369c
    char * v148 = (char *)v147; // 0x40369c_0
    *v148 = (char)((int32_t)*v148 + v147);
    int32_t v149 = g124; // 0x40369e
    char * v150 = (char *)v149; // 0x40369e_0
    *v150 = (char)((int32_t)*v150 + v149);
    int32_t v151 = g124; // 0x4036a0
    char * v152 = (char *)v151; // 0x4036a0_0
    *v152 = (char)((int32_t)*v152 + v151);
    int32_t v153 = g124; // 0x4036a2
    char * v154 = (char *)v153; // 0x4036a2_0
    *v154 = (char)((int32_t)*v154 + v153);
    int32_t v155 = g124; // 0x4036a4
    char * v156 = (char *)v155; // 0x4036a4_0
    *v156 = (char)((int32_t)*v156 + v155);
    int32_t v157 = g124; // 0x4036a6
    char * v158 = (char *)v157; // 0x4036a6_0
    *v158 = (char)((int32_t)*v158 + v157);
    int32_t v159 = g124; // 0x4036a8
    char * v160 = (char *)v159; // 0x4036a8_0
    *v160 = (char)((int32_t)*v160 + v159);
    int32_t v161 = g124; // 0x4036aa
    char * v162 = (char *)v161; // 0x4036aa_0
    *v162 = (char)((int32_t)*v162 + v161);
    int32_t v163 = g124; // 0x4036ac
    char * v164 = (char *)v163; // 0x4036ac_0
    *v164 = (char)((int32_t)*v164 + v163);
    int32_t v165 = g124; // 0x4036ae
    char * v166 = (char *)v165; // 0x4036ae_0
    *v166 = (char)((int32_t)*v166 + v165);
    int32_t v167 = g124; // 0x4036b0
    char * v168 = (char *)v167; // 0x4036b0_0
    *v168 = (char)((int32_t)*v168 + v167);
    int32_t v169 = g124; // 0x4036b2
    char * v170 = (char *)v169; // 0x4036b2_0
    *v170 = (char)((int32_t)*v170 + v169);
    int32_t v171 = g124; // 0x4036b4
    char * v172 = (char *)v171; // 0x4036b4_0
    *v172 = (char)((int32_t)*v172 + v171);
    int32_t v173 = g124; // 0x4036b6
    char * v174 = (char *)v173; // 0x4036b6_0
    *v174 = (char)((int32_t)*v174 + v173);
    int32_t v175 = g124; // 0x4036b8
    char * v176 = (char *)v175; // 0x4036b8_0
    *v176 = (char)((int32_t)*v176 + v175);
    int32_t v177 = g124; // 0x4036ba
    char * v178 = (char *)v177; // 0x4036ba_0
    *v178 = (char)((int32_t)*v178 + v177);
    int32_t v179 = g124; // 0x4036bc
    char * v180 = (char *)v179; // 0x4036bc_0
    *v180 = (char)((int32_t)*v180 + v179);
    int32_t v181 = g124; // 0x4036be
    char * v182 = (char *)v181; // 0x4036be_0
    *v182 = (char)((int32_t)*v182 + v181);
    int32_t v183 = g124; // 0x4036c0
    char * v184 = (char *)v183; // 0x4036c0_0
    *v184 = (char)((int32_t)*v184 + v183);
    int32_t v185 = g124; // 0x4036c2
    char * v186 = (char *)v185; // 0x4036c2_0
    *v186 = (char)((int32_t)*v186 + v185);
    int32_t v187 = g124; // 0x4036c4
    char * v188 = (char *)v187; // 0x4036c4_0
    *v188 = (char)((int32_t)*v188 + v187);
    int32_t v189 = g124; // 0x4036c6
    char * v190 = (char *)v189; // 0x4036c6_0
    *v190 = (char)((int32_t)*v190 + v189);
    int32_t v191 = g124; // 0x4036c8
    char * v192 = (char *)v191; // 0x4036c8_0
    *v192 = (char)((int32_t)*v192 + v191);
    int32_t v193 = g124; // 0x4036ca
    char * v194 = (char *)v193; // 0x4036ca_0
    *v194 = (char)((int32_t)*v194 + v193);
    int32_t v195 = g124; // 0x4036cc
    char * v196 = (char *)v195; // 0x4036cc_0
    *v196 = (char)((int32_t)*v196 + v195);
    int32_t v197 = g124; // 0x4036ce
    char * v198 = (char *)v197; // 0x4036ce_0
    *v198 = (char)((int32_t)*v198 + v197);
    int32_t v199 = g124; // 0x4036d0
    char * v200 = (char *)v199; // 0x4036d0_0
    *v200 = (char)((int32_t)*v200 + v199);
    int32_t v201 = g124; // 0x4036d2
    char * v202 = (char *)v201; // 0x4036d2_0
    *v202 = (char)((int32_t)*v202 + v201);
    int32_t v203 = g124; // 0x4036d4
    char * v204 = (char *)v203; // 0x4036d4_0
    *v204 = (char)((int32_t)*v204 + v203);
    int32_t v205 = g124; // 0x4036d6
    char * v206 = (char *)v205; // 0x4036d6_0
    *v206 = (char)((int32_t)*v206 + v205);
    int32_t v207 = g124; // 0x4036d8
    char * v208 = (char *)v207; // 0x4036d8_0
    *v208 = (char)((int32_t)*v208 + v207);
    int32_t v209 = g124; // 0x4036da
    char * v210 = (char *)v209; // 0x4036da_0
    *v210 = (char)((int32_t)*v210 + v209);
    int32_t v211 = g124; // 0x4036dc
    char * v212 = (char *)v211; // 0x4036dc_0
    *v212 = (char)((int32_t)*v212 + v211);
    int32_t v213 = g124; // 0x4036de
    char * v214 = (char *)v213; // 0x4036de_0
    *v214 = (char)((int32_t)*v214 + v213);
    int32_t v215 = g124; // 0x4036e0
    char * v216 = (char *)v215; // 0x4036e0_0
    *v216 = (char)((int32_t)*v216 + v215);
    int32_t v217 = g124; // 0x4036e2
    char * v218 = (char *)v217; // 0x4036e2_0
    *v218 = (char)((int32_t)*v218 + v217);
    int32_t v219 = g124; // 0x4036e4
    char * v220 = (char *)v219; // 0x4036e4_0
    *v220 = (char)((int32_t)*v220 + v219);
    int32_t v221 = g124; // 0x4036e6
    char * v222 = (char *)v221; // 0x4036e6_0
    *v222 = (char)((int32_t)*v222 + v221);
    int32_t v223 = g124; // 0x4036e8
    char * v224 = (char *)v223; // 0x4036e8_0
    *v224 = (char)((int32_t)*v224 + v223);
    int32_t v225 = g124; // 0x4036ea
    char * v226 = (char *)v225; // 0x4036ea_0
    *v226 = (char)((int32_t)*v226 + v225);
    int32_t v227 = g124; // 0x4036ec
    char * v228 = (char *)v227; // 0x4036ec_0
    *v228 = (char)((int32_t)*v228 + v227);
    int32_t v229 = g124; // 0x4036ee
    char * v230 = (char *)v229; // 0x4036ee_0
    *v230 = (char)((int32_t)*v230 + v229);
    int32_t v231 = g124; // 0x4036f0
    char * v232 = (char *)v231; // 0x4036f0_0
    *v232 = (char)((int32_t)*v232 + v231);
    int32_t v233 = g124; // 0x4036f2
    char * v234 = (char *)v233; // 0x4036f2_0
    *v234 = (char)((int32_t)*v234 + v233);
    int32_t v235 = g124; // 0x4036f4
    char * v236 = (char *)v235; // 0x4036f4_0
    *v236 = (char)((int32_t)*v236 + v235);
    int32_t v237 = g124; // 0x4036f6
    char * v238 = (char *)v237; // 0x4036f6_0
    *v238 = (char)((int32_t)*v238 + v237);
    int32_t v239 = g124; // 0x4036f8
    char * v240 = (char *)v239; // 0x4036f8_0
    *v240 = (char)((int32_t)*v240 + v239);
    int32_t v241 = g124; // 0x4036fa
    char * v242 = (char *)v241; // 0x4036fa_0
    *v242 = (char)((int32_t)*v242 + v241);
    int32_t v243 = g124; // 0x4036fc
    char * v244 = (char *)v243; // 0x4036fc_0
    *v244 = (char)((int32_t)*v244 + v243);
    int32_t v245 = g124; // 0x4036fe
    char * v246 = (char *)v245; // 0x4036fe_0
    *v246 = (char)((int32_t)*v246 + v245);
    int32_t v247 = g124; // 0x403700
    char * v248 = (char *)v247; // 0x403700_0
    *v248 = (char)((int32_t)*v248 + v247);
    int32_t v249 = g124; // 0x403702
    char * v250 = (char *)v249; // 0x403702_0
    *v250 = (char)((int32_t)*v250 + v249);
    int32_t v251 = g124; // 0x403704
    char * v252 = (char *)v251; // 0x403704_0
    *v252 = (char)((int32_t)*v252 + v251);
    int32_t v253 = g124; // 0x403706
    char * v254 = (char *)v253; // 0x403706_0
    *v254 = (char)((int32_t)*v254 + v253);
    int32_t v255 = g124; // 0x403708
    char * v256 = (char *)v255; // 0x403708_0
    *v256 = (char)((int32_t)*v256 + v255);
    int32_t v257 = g124; // 0x40370a
    char * v258 = (char *)v257; // 0x40370a_0
    *v258 = (char)((int32_t)*v258 + v257);
    int32_t v259 = g124; // 0x40370c
    char * v260 = (char *)v259; // 0x40370c_0
    *v260 = (char)((int32_t)*v260 + v259);
    int32_t v261 = g124; // 0x40370e
    char * v262 = (char *)v261; // 0x40370e_0
    *v262 = (char)((int32_t)*v262 + v261);
    int32_t v263 = g124; // 0x403710
    char * v264 = (char *)v263; // 0x403710_0
    *v264 = (char)((int32_t)*v264 + v263);
    int32_t v265 = g124; // 0x403712
    char * v266 = (char *)v265; // 0x403712_0
    *v266 = (char)((int32_t)*v266 + v265);
    int32_t v267 = g124; // 0x403714
    char * v268 = (char *)v267; // 0x403714_0
    *v268 = (char)((int32_t)*v268 + v267);
    int32_t v269 = g124; // 0x403716
    char * v270 = (char *)v269; // 0x403716_0
    *v270 = (char)((int32_t)*v270 + v269);
    int32_t v271 = g124; // 0x403718
    char * v272 = (char *)v271; // 0x403718_0
    *v272 = (char)((int32_t)*v272 + v271);
    int32_t v273 = g124; // 0x40371a
    char * v274 = (char *)v273; // 0x40371a_0
    *v274 = (char)((int32_t)*v274 + v273);
    int32_t v275 = g124; // 0x40371c
    char * v276 = (char *)v275; // 0x40371c_0
    *v276 = (char)((int32_t)*v276 + v275);
    int32_t v277 = g124; // 0x40371e
    char * v278 = (char *)v277; // 0x40371e_0
    *v278 = (char)((int32_t)*v278 + v277);
    int32_t v279 = g124; // 0x403720
    char * v280 = (char *)v279; // 0x403720_0
    *v280 = (char)((int32_t)*v280 + v279);
    int32_t v281 = g124; // 0x403722
    char * v282 = (char *)v281; // 0x403722_0
    *v282 = (char)((int32_t)*v282 + v281);
    int32_t v283 = g124; // 0x403724
    char * v284 = (char *)v283; // 0x403724_0
    *v284 = (char)((int32_t)*v284 + v283);
    int32_t v285 = g124; // 0x403726
    char * v286 = (char *)v285; // 0x403726_0
    *v286 = (char)((int32_t)*v286 + v285);
    int32_t v287 = g124; // 0x403728
    char * v288 = (char *)v287; // 0x403728_0
    *v288 = (char)((int32_t)*v288 + v287);
    int32_t v289 = g124; // 0x40372a
    char * v290 = (char *)v289; // 0x40372a_0
    *v290 = (char)((int32_t)*v290 + v289);
    int32_t v291 = g124; // 0x40372c
    char * v292 = (char *)v291; // 0x40372c_0
    *v292 = (char)((int32_t)*v292 + v291);
    int32_t v293 = g124; // 0x40372e
    char * v294 = (char *)v293; // 0x40372e_0
    *v294 = (char)((int32_t)*v294 + v293);
    int32_t v295 = g124; // 0x403730
    char * v296 = (char *)v295; // 0x403730_0
    *v296 = (char)((int32_t)*v296 + v295);
    int32_t v297 = g124; // 0x403732
    char * v298 = (char *)v297; // 0x403732_0
    *v298 = (char)((int32_t)*v298 + v297);
    int32_t v299 = g124; // 0x403734
    char * v300 = (char *)v299; // 0x403734_0
    *v300 = (char)((int32_t)*v300 + v299);
    int32_t v301 = g124; // 0x403736
    char * v302 = (char *)v301; // 0x403736_0
    *v302 = (char)((int32_t)*v302 + v301);
    int32_t v303 = g124; // 0x403738
    char * v304 = (char *)v303; // 0x403738_0
    *v304 = (char)((int32_t)*v304 + v303);
    int32_t v305 = g124; // 0x40373a
    char * v306 = (char *)v305; // 0x40373a_0
    *v306 = (char)((int32_t)*v306 + v305);
    int32_t v307 = g124; // 0x40373c
    char * v308 = (char *)v307; // 0x40373c_0
    *v308 = (char)((int32_t)*v308 + v307);
    int32_t v309 = g124; // 0x40373e
    char * v310 = (char *)v309; // 0x40373e_0
    *v310 = (char)((int32_t)*v310 + v309);
    int32_t v311 = g124; // 0x403740
    char * v312 = (char *)v311; // 0x403740_0
    *v312 = (char)((int32_t)*v312 + v311);
    int32_t v313 = g124; // 0x403742
    char * v314 = (char *)v313; // 0x403742_0
    *v314 = (char)((int32_t)*v314 + v313);
    int32_t v315 = g124; // 0x403744
    char * v316 = (char *)v315; // 0x403744_0
    *v316 = (char)((int32_t)*v316 + v315);
    int32_t v317 = g124; // 0x403746
    char * v318 = (char *)v317; // 0x403746_0
    *v318 = (char)((int32_t)*v318 + v317);
    int32_t v319 = g124; // 0x403748
    char * v320 = (char *)v319; // 0x403748_0
    *v320 = (char)((int32_t)*v320 + v319);
    int32_t v321 = g124; // 0x40374a
    char * v322 = (char *)v321; // 0x40374a_0
    *v322 = (char)((int32_t)*v322 + v321);
    int32_t v323 = g124; // 0x40374c
    char * v324 = (char *)v323; // 0x40374c_0
    *v324 = (char)((int32_t)*v324 + v323);
    int32_t v325 = g124; // 0x40374e
    char * v326 = (char *)v325; // 0x40374e_0
    *v326 = (char)((int32_t)*v326 + v325);
    int32_t v327 = g124; // 0x403750
    char * v328 = (char *)v327; // 0x403750_0
    *v328 = (char)((int32_t)*v328 + v327);
    int32_t v329 = g124; // 0x403752
    char * v330 = (char *)v329; // 0x403752_0
    *v330 = (char)((int32_t)*v330 + v329);
    int32_t v331 = g124; // 0x403754
    char * v332 = (char *)v331; // 0x403754_0
    *v332 = (char)((int32_t)*v332 + v331);
    int32_t v333 = g124; // 0x403756
    char * v334 = (char *)v333; // 0x403756_0
    *v334 = (char)((int32_t)*v334 + v333);
    int32_t v335 = g124; // 0x403758
    char * v336 = (char *)v335; // 0x403758_0
    *v336 = (char)((int32_t)*v336 + v335);
    int32_t v337 = g124; // 0x40375a
    char * v338 = (char *)v337; // 0x40375a_0
    *v338 = (char)((int32_t)*v338 + v337);
    int32_t v339 = g124; // 0x40375c
    char * v340 = (char *)v339; // 0x40375c_0
    *v340 = (char)((int32_t)*v340 + v339);
    int32_t v341 = g124; // 0x40375e
    char * v342 = (char *)v341; // 0x40375e_0
    *v342 = (char)((int32_t)*v342 + v341);
    int32_t v343 = g124; // 0x403760
    char * v344 = (char *)v343; // 0x403760_0
    *v344 = (char)((int32_t)*v344 + v343);
    int32_t v345 = g124; // 0x403762
    char * v346 = (char *)v345; // 0x403762_0
    *v346 = (char)((int32_t)*v346 + v345);
    int32_t v347 = g124; // 0x403764
    char * v348 = (char *)v347; // 0x403764_0
    *v348 = (char)((int32_t)*v348 + v347);
    int32_t v349 = g124; // 0x403766
    char * v350 = (char *)v349; // 0x403766_0
    *v350 = (char)((int32_t)*v350 + v349);
    int32_t v351 = g124; // 0x403768
    char * v352 = (char *)v351; // 0x403768_0
    *v352 = (char)((int32_t)*v352 + v351);
    int32_t v353 = g124; // 0x40376a
    char * v354 = (char *)v353; // 0x40376a_0
    *v354 = (char)((int32_t)*v354 + v353);
    int32_t v355 = g124; // 0x40376c
    char * v356 = (char *)v355; // 0x40376c_0
    *v356 = (char)((int32_t)*v356 + v355);
    int32_t v357 = g124; // 0x40376e
    char * v358 = (char *)v357; // 0x40376e_0
    *v358 = (char)((int32_t)*v358 + v357);
    int32_t v359 = g124; // 0x403770
    char * v360 = (char *)v359; // 0x403770_0
    *v360 = (char)((int32_t)*v360 + v359);
    int32_t v361 = g124; // 0x403772
    char * v362 = (char *)v361; // 0x403772_0
    *v362 = (char)((int32_t)*v362 + v361);
    int32_t v363 = g124; // 0x403774
    char * v364 = (char *)v363; // 0x403774_0
    *v364 = (char)((int32_t)*v364 + v363);
    int32_t v365 = g124; // 0x403776
    char * v366 = (char *)v365; // 0x403776_0
    *v366 = (char)((int32_t)*v366 + v365);
    int32_t v367 = g124; // 0x403778
    char * v368 = (char *)v367; // 0x403778_0
    *v368 = (char)((int32_t)*v368 + v367);
    int32_t v369 = g124; // 0x40377a
    char * v370 = (char *)v369; // 0x40377a_0
    *v370 = (char)((int32_t)*v370 + v369);
    int32_t v371 = g124; // 0x40377c
    char * v372 = (char *)v371; // 0x40377c_0
    *v372 = (char)((int32_t)*v372 + v371);
    int32_t v373 = g124; // 0x40377e
    char * v374 = (char *)v373; // 0x40377e_0
    *v374 = (char)((int32_t)*v374 + v373);
    int32_t v375 = g124; // 0x403780
    char * v376 = (char *)v375; // 0x403780_0
    *v376 = (char)((int32_t)*v376 + v375);
    int32_t v377 = g124; // 0x403782
    char * v378 = (char *)v377; // 0x403782_0
    *v378 = (char)((int32_t)*v378 + v377);
    int32_t v379 = g124; // 0x403784
    char * v380 = (char *)v379; // 0x403784_0
    *v380 = (char)((int32_t)*v380 + v379);
    int32_t v381 = g124; // 0x403786
    char * v382 = (char *)v381; // 0x403786_0
    *v382 = (char)((int32_t)*v382 + v381);
    int32_t v383 = g124; // 0x403788
    char * v384 = (char *)v383; // 0x403788_0
    *v384 = (char)((int32_t)*v384 + v383);
    int32_t v385 = g124; // 0x40378a
    char * v386 = (char *)v385; // 0x40378a_0
    *v386 = (char)((int32_t)*v386 + v385);
    int32_t v387 = g124; // 0x40378c
    char * v388 = (char *)v387; // 0x40378c_0
    *v388 = (char)((int32_t)*v388 + v387);
    int32_t v389 = g124; // 0x40378e
    char * v390 = (char *)v389; // 0x40378e_0
    *v390 = (char)((int32_t)*v390 + v389);
    int32_t v391 = g124; // 0x403790
    char * v392 = (char *)v391; // 0x403790_0
    *v392 = (char)((int32_t)*v392 + v391);
    int32_t v393 = g124; // 0x403792
    char * v394 = (char *)v393; // 0x403792_0
    *v394 = (char)((int32_t)*v394 + v393);
    int32_t v395 = g124; // 0x403794
    char * v396 = (char *)v395; // 0x403794_0
    *v396 = (char)((int32_t)*v396 + v395);
    int32_t v397 = g124; // 0x403796
    char * v398 = (char *)v397; // 0x403796_0
    *v398 = (char)((int32_t)*v398 + v397);
    int32_t v399 = g124; // 0x403798
    char * v400 = (char *)v399; // 0x403798_0
    *v400 = (char)((int32_t)*v400 + v399);
    int32_t v401 = g124; // 0x40379a
    char * v402 = (char *)v401; // 0x40379a_0
    *v402 = (char)((int32_t)*v402 + v401);
    int32_t v403 = g124; // 0x40379c
    char * v404 = (char *)v403; // 0x40379c_0
    *v404 = (char)((int32_t)*v404 + v403);
    int32_t v405 = g124; // 0x40379e
    char * v406 = (char *)v405; // 0x40379e_0
    *v406 = (char)((int32_t)*v406 + v405);
    int32_t v407 = g124; // 0x4037a0
    char * v408 = (char *)v407; // 0x4037a0_0
    *v408 = (char)((int32_t)*v408 + v407);
    int32_t v409 = g124; // 0x4037a2
    char * v410 = (char *)v409; // 0x4037a2_0
    *v410 = (char)((int32_t)*v410 + v409);
    int32_t v411 = g124; // 0x4037a4
    char * v412 = (char *)v411; // 0x4037a4_0
    *v412 = (char)((int32_t)*v412 + v411);
    int32_t v413 = g124; // 0x4037a6
    char * v414 = (char *)v413; // 0x4037a6_0
    *v414 = (char)((int32_t)*v414 + v413);
    int32_t v415 = g124; // 0x4037a8
    char * v416 = (char *)v415; // 0x4037a8_0
    *v416 = (char)((int32_t)*v416 + v415);
    int32_t v417 = g124; // 0x4037aa
    char * v418 = (char *)v417; // 0x4037aa_0
    *v418 = (char)((int32_t)*v418 + v417);
    int32_t v419 = g124; // 0x4037ac
    char * v420 = (char *)v419; // 0x4037ac_0
    *v420 = (char)((int32_t)*v420 + v419);
    int32_t v421 = g124; // 0x4037ae
    char * v422 = (char *)v421; // 0x4037ae_0
    *v422 = (char)((int32_t)*v422 + v421);
    int32_t v423 = g124; // 0x4037b0
    char * v424 = (char *)v423; // 0x4037b0_0
    *v424 = (char)((int32_t)*v424 + v423);
    int32_t v425 = g124; // 0x4037b2
    char * v426 = (char *)v425; // 0x4037b2_0
    *v426 = (char)((int32_t)*v426 + v425);
    int32_t v427 = g124; // 0x4037b4
    char * v428 = (char *)v427; // 0x4037b4_0
    *v428 = (char)((int32_t)*v428 + v427);
    int32_t v429 = g124; // 0x4037b6
    char * v430 = (char *)v429; // 0x4037b6_0
    *v430 = (char)((int32_t)*v430 + v429);
    int32_t v431 = g124; // 0x4037b8
    char * v432 = (char *)v431; // 0x4037b8_0
    *v432 = (char)((int32_t)*v432 + v431);
    int32_t v433 = g124; // 0x4037ba
    char * v434 = (char *)v433; // 0x4037ba_0
    *v434 = (char)((int32_t)*v434 + v433);
    int32_t v435 = g124; // 0x4037bc
    char * v436 = (char *)v435; // 0x4037bc_0
    *v436 = (char)((int32_t)*v436 + v435);
    int32_t v437 = g124; // 0x4037be
    char * v438 = (char *)v437; // 0x4037be_0
    *v438 = (char)((int32_t)*v438 + v437);
    int32_t v439 = g124; // 0x4037c0
    char * v440 = (char *)v439; // 0x4037c0_0
    *v440 = (char)((int32_t)*v440 + v439);
    int32_t v441 = g124; // 0x4037c2
    char * v442 = (char *)v441; // 0x4037c2_0
    *v442 = (char)((int32_t)*v442 + v441);
    int32_t v443 = g124; // 0x4037c4
    char * v444 = (char *)v443; // 0x4037c4_0
    *v444 = (char)((int32_t)*v444 + v443);
    int32_t v445 = g124; // 0x4037c6
    char * v446 = (char *)v445; // 0x4037c6_0
    *v446 = (char)((int32_t)*v446 + v445);
    int32_t v447 = g124; // 0x4037c8
    char * v448 = (char *)v447; // 0x4037c8_0
    *v448 = (char)((int32_t)*v448 + v447);
    int32_t v449 = g124; // 0x4037ca
    char * v450 = (char *)v449; // 0x4037ca_0
    *v450 = (char)((int32_t)*v450 + v449);
    int32_t v451 = g124; // 0x4037cc
    char * v452 = (char *)v451; // 0x4037cc_0
    *v452 = (char)((int32_t)*v452 + v451);
    int32_t v453 = g124; // 0x4037ce
    char * v454 = (char *)v453; // 0x4037ce_0
    *v454 = (char)((int32_t)*v454 + v453);
    int32_t v455 = g124; // 0x4037d0
    char * v456 = (char *)v455; // 0x4037d0_0
    *v456 = (char)((int32_t)*v456 + v455);
    int32_t v457 = g124; // 0x4037d2
    char * v458 = (char *)v457; // 0x4037d2_0
    *v458 = (char)((int32_t)*v458 + v457);
    int32_t v459 = g124; // 0x4037d4
    char * v460 = (char *)v459; // 0x4037d4_0
    *v460 = (char)((int32_t)*v460 + v459);
    int32_t v461 = g124; // 0x4037d6
    char * v462 = (char *)v461; // 0x4037d6_0
    *v462 = (char)((int32_t)*v462 + v461);
    int32_t v463 = g124; // 0x4037d8
    char * v464 = (char *)v463; // 0x4037d8_0
    *v464 = (char)((int32_t)*v464 + v463);
    int32_t v465 = g124; // 0x4037da
    char * v466 = (char *)v465; // 0x4037da_0
    *v466 = (char)((int32_t)*v466 + v465);
    int32_t v467 = g124; // 0x4037dc
    char * v468 = (char *)v467; // 0x4037dc_0
    *v468 = (char)((int32_t)*v468 + v467);
    int32_t v469 = g124; // 0x4037de
    char * v470 = (char *)v469; // 0x4037de_0
    *v470 = (char)((int32_t)*v470 + v469);
    int32_t v471 = g124; // 0x4037e0
    char * v472 = (char *)v471; // 0x4037e0_0
    *v472 = (char)((int32_t)*v472 + v471);
    int32_t v473 = g124; // 0x4037e2
    char * v474 = (char *)v473; // 0x4037e2_0
    *v474 = (char)((int32_t)*v474 + v473);
    int32_t v475 = g124; // 0x4037e4
    char * v476 = (char *)v475; // 0x4037e4_0
    *v476 = (char)((int32_t)*v476 + v475);
    int32_t v477 = g124; // 0x4037e6
    char * v478 = (char *)v477; // 0x4037e6_0
    *v478 = (char)((int32_t)*v478 + v477);
    int32_t v479 = g124; // 0x4037e8
    char * v480 = (char *)v479; // 0x4037e8_0
    *v480 = (char)((int32_t)*v480 + v479);
    int32_t v481 = g124; // 0x4037ea
    char * v482 = (char *)v481; // 0x4037ea_0
    *v482 = (char)((int32_t)*v482 + v481);
    int32_t v483 = g124; // 0x4037ec
    char * v484 = (char *)v483; // 0x4037ec_0
    *v484 = (char)((int32_t)*v484 + v483);
    int32_t v485 = g124; // 0x4037ee
    char * v486 = (char *)v485; // 0x4037ee_0
    *v486 = (char)((int32_t)*v486 + v485);
    int32_t v487 = g124; // 0x4037f0
    char * v488 = (char *)v487; // 0x4037f0_0
    *v488 = (char)((int32_t)*v488 + v487);
    int32_t v489 = g124; // 0x4037f2
    char * v490 = (char *)v489; // 0x4037f2_0
    *v490 = (char)((int32_t)*v490 + v489);
    int32_t v491 = g124; // 0x4037f4
    char * v492 = (char *)v491; // 0x4037f4_0
    *v492 = (char)((int32_t)*v492 + v491);
    int32_t v493 = g124; // 0x4037f6
    char * v494 = (char *)v493; // 0x4037f6_0
    *v494 = (char)((int32_t)*v494 + v493);
    int32_t v495 = g124; // 0x4037f8
    char * v496 = (char *)v495; // 0x4037f8_0
    *v496 = (char)((int32_t)*v496 + v495);
    int32_t v497 = g124; // 0x4037fa
    char * v498 = (char *)v497; // 0x4037fa_0
    *v498 = (char)((int32_t)*v498 + v497);
    int32_t v499 = g124; // 0x4037fc
    char * v500 = (char *)v499; // 0x4037fc_0
    *v500 = (char)((int32_t)*v500 + v499);
    int32_t v501 = g124; // 0x4037fe
    char * v502 = (char *)v501; // 0x4037fe_0
    *v502 = (char)((int32_t)*v502 + v501);
    function_40a680();
}

// Address range: 0x404008 - 0x404028
int32_t function_404008(int32_t a1, int32_t a2) {
    int32_t v1 = g126; // bp-4
    int32_t v2 = g125; // bp-8
    function_40a6d0((int32_t **)&v2, (char *)&v1);
    return g124;
}

// Address range: 0x40402e - 0x404075
void function_40402e(void) {
    int32_t v1 = g130; // 0x40402f
    int32_t v2 = g131; // 0x404030
    int32_t v3 = 0x40f56c;
    g131 = 0;
    EnterCriticalSection(g100);
    int32_t v4 = g43;
    g130 = v4;
    int32_t dwMilliseconds = g131; // 0x4040522
    if (v4 == dwMilliseconds) {
        // 0x404069
        LeaveCriticalSection((int32_t *)v3);
        g131 = v2;
        g130 = v1;
        return;
    }
    while (true) {
        // 0x404047
        int32_t v5;
        if (*(int32_t *)(v4 + 12) == v5) {
            // 0x404058
            if (WaitForSingleObject(*(int32_t *)(v4 + 8), dwMilliseconds) == 0) {
                // 0x404069
                LeaveCriticalSection((int32_t *)v3);
                g131 = v2;
                g130 = v1;
                return;
            }
            // 0x404066
            g131 = *(int32_t *)(g130 + 8);
            // branch -> 0x404069
            // 0x404069
            LeaveCriticalSection((int32_t *)v3);
            g131 = v2;
            g130 = v1;
            return;
        }
        int32_t v6 = *(int32_t *)v4;
        g130 = v6;
        if (v6 == dwMilliseconds) {
            // break -> 0x404069
            break;
        }
        v4 = v6;
        // continue -> 0x404047
    }
    // 0x404069
    LeaveCriticalSection((int32_t *)v3);
    g131 = v2;
    g130 = v1;
}

// Address range: 0x404078 - 0x404083
void function_404078(void) {
    // 0x404078
    InitializeCriticalSection(g100);
}

// Address range: 0x404084 - 0x4040c5
void function_404084(void) {
    int32_t v1 = g131; // 0x404084
    g131 = 0x40f56c;
    EnterCriticalSection(g100);
    int32_t v2 = g43; // 0x404091
    if (v2 == 0) {
        // 0x4040bd
        LeaveCriticalSection((int32_t *)g131);
        g131 = v1;
        return;
    }
    int32_t v3 = g130; // 0x40409a
    int32_t v4 = v2 + 8; // 0x40409b
    g130 = v4;
    CloseHandle(*(int32_t *)v4);
    int32_t v5 = g130; // 0x4040a6
    function_40a2dc(&g43, v5);
    int32_t v6 = g43; // 0x4040b1
    // branch -> 0x40409b
    while (v6 != 0) {
        // 0x40409b
        g125 = v5;
        v4 = v6 + 8;
        g130 = v4;
        CloseHandle(*(int32_t *)v4);
        v5 = g130;
        function_40a2dc(&g43, v5);
        v6 = g43;
        // continue -> 0x40409b
    }
    // 0x4040bc
    g130 = v3;
    // branch -> 0x4040bd
    // 0x4040bd
    LeaveCriticalSection((int32_t *)g131);
    g131 = v1;
}

// Address range: 0x4040c6 - 0x40416f
int32_t function_4040c6(int32_t * lpStartAddress, int32_t * lpParameter, int32_t a3) {
    int32_t v1 = g130; // 0x4040c6
    g130 = 0;
    CreateThread(0, 0x1000, lpStartAddress, lpParameter, 0, lpStartAddress);
    int32_t v2 = g124; // 0x4040e3
    int32_t result; // 0x40415e
    if (v2 == 0) {
        // 0x40415e
        result = g130;
        g130 = v1;
        return result;
    }
    // 0x4040eb
    EnterCriticalSection(g100);
    int32_t v3 = g43; // 0x4040f9
    g130 = v3;
    if (v3 != 0) {
        int32_t v4 = g131; // 0x404108
        // branch -> 0x404109
        while (true) {
            int32_t v5 = v3 + 8; // 0x40410b
            g131 = v5;
            int32_t v6; // 0x404131
            if (WaitForSingleObject(*(int32_t *)v5, 0) == 0) {
                // 0x40411a
                CloseHandle(*(int32_t *)g131);
                g130 = *(int32_t *)g130;
                function_40a2dc(&g43, g131);
                v6 = g130;
                // branch -> 0x404131
            } else {
                int32_t v7 = *(int32_t *)g130; // 0x40412f
                g130 = v7;
                v6 = v7;
                // branch -> 0x404131
            }
            // 0x404131
            if (v6 == 0) {
                // break -> 0x404135
                break;
            }
            v3 = v6;
            // continue -> 0x404109
        }
        // 0x404135
        g131 = v4;
        // branch -> 0x404136
    }
    int32_t v8 = g7; // 0x404136
    g130 = v8;
    g7 = v8 + 1;
    struct struct_0 * v9 = (struct struct_0 *)function_40a31c((struct struct_18 *)&g43, 16); // 0x404145_5
    v9->e0 = (int32_t *)v2;
    v9->e1 = g130;
    LeaveCriticalSection(g100);
    // branch -> 0x40415e
    // 0x40415e
    result = g130;
    g130 = v1;
    return result;
}

// Address range: 0x404170 - 0x40424f
int32_t function_404170(int32_t a1, char * a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, int32_t a8, int32_t a9, int32_t a10, int32_t a11) {
    int32_t v1 = g130; // 0x404175
    g130 = 0;
    if (a1 == 0) {
        // 0x40423e
        g130 = a9;
        g125 = a10;
        return 0;
    }
    char v2 = *a2; // 0x404184
    int32_t v3 = v2; // 0x404184_0
    g124 = v3;
    if (v2 == 0 || *(char *)a1 == 0) {
        // 0x40423e
        g130 = a9;
        g125 = a10;
        return 0;
    }
    char * v4 = (char *)v3; // 0x404199_0
    if (*v4 == 0) {
        // 0x40423e
        g130 = a9;
        g125 = a10;
        return 0;
    }
    int32_t v5 = g129; // 0x4041a2
    int32_t v6 = a1 + 1; // 0x4041a5
    // branch -> 0x4041a5
    while (*(char *)v6 != 0) {
        // 0x4041a5
        v6++;
        // continue -> 0x4041a5
    }
    // 0x4041ad
    g126 = a3;
    int32_t v7 = v6 - a1; // 0x4041b1
    int32_t v8; // 0x4041c3
    if (a3 > 0) {
        // 0x4041bf
        if (v7 < a3) {
            // 0x4041c3
            v8 = v7 + 1;
            g126 = v8;
            // branch -> 0x4041c6
        } else {
            v8 = a3;
        }
    } else {
        // 0x4041b8
        g126 = 1;
        v8 = 1;
        // branch -> 0x4041c6
    }
    int32_t v9 = a1 - 1 + v8; // 0x4041c6
    int32_t v10 = (int32_t)*(char *)v9 | v7 & -256; // 0x4041c6
    int32_t v11 = g131;
    g131 = v9;
    if (v10 == 0) {
        // 0x40422b
        int32_t v12;
        g131 = v12;
        g129 = a1;
        g130 = (int32_t)*a2;
        g125 = a3;
        return 0;
    }
    int32_t v13 = g127; // 0x4041d3
    int32_t v14 = v9 - v3; // 0x4041da
    g130 = v14;
    int32_t v15 = v8; // 0x404216
    int32_t result = 0; // 0x404237
    // branch -> 0x4041e0
  lab_0x864be80:;
    int32_t result2; // 0x4042272
    while (true) {
        // 0x4041e0
        g126 = result;
        if (result != 0) {
            // 0x404234
            g127 = a4;
            g131 = a5;
            g129 = a6;
            g130 = a7;
            g125 = a8;
            return result;
        }
        int32_t v16 = (int32_t)*v4; // 0x4041e8
        g126 = v16;
        int32_t v17; // 0x404210
        int32_t v18; // 0x404213
        int32_t v19; // 0x404219
        int32_t v20; // 0x4041f413
        int32_t v21; // 0x40420a11
        if (v10 == v16) {
            int32_t v22 = v10; // 0x4041fa
            // branch -> 0x4041f0
            while (true) {
                // 0x4041f0
                int32_t v23; // 0x404219
                if (v22 % 256 != 0) {
                    int32_t v24 = v3; // 0x404205
                    if (*(char *)(v3 + v14) != 0) {
                        int32_t v25 = (int32_t)a2[1] | v22 & -256; // 0x4041fa
                        g126 = v25;
                        int32_t v26 = v3 + 1; // 0x4041fd
                        if ((int32_t)*(char *)(v26 + v14) != v25) {
                            // break -> 0x404205
                            break;
                        }
                        v3 = v26;
                        v22 = v25;
                        // continue -> 0x4041f0
                        continue;
                    }
                    // 0x404205
                    if (*(char *)v24 != 0) {
                        // 0x404210
                        v17 = v9 + 1;
                        g131 = v17;
                        v18 = v14 + 1;
                        g130 = v18;
                        v20 = v18;
                        v19 = v17;
                        v21 = v15 + 1;
                        result2 = 0;
                        // branch -> 0x404219
                    } else {
                        v20 = v14;
                        v19 = v9;
                        v21 = v15;
                        result2 = v15;
                    }
                    // 0x404219
                    v23 = (int32_t)*(char *)v19 | v24 & -256;
                    if (v23 == 0) {
                        // break (via goto) -> 0x40421f
                        goto lab_0x416eb60;
                    }
                    v14 = v20;
                    v9 = v19;
                    v15 = v21;
                    v10 = v23;
                    result = result2;
                    // continue (via goto) -> 0x4041e0
                    goto lab_0x864be80;
                } else {
                    v20 = v14;
                    v19 = v9;
                    v21 = v15;
                    result2 = v15;
                }
              lab_0x4169e40:
                // 0x404219
                v23 = (int32_t)*(char *)v19 | v3 & -256;
                if (v23 == 0) {
                    // break (via goto) -> 0x40421f
                    goto lab_0x416eb60;
                }
                v14 = v20;
                v9 = v19;
                v15 = v21;
                v10 = v23;
                result = result2;
                // continue (via goto) -> 0x4041e0
                goto lab_0x864be80;
            }
            // 0x40421f
            g127 = v13;
            g131 = &v11;
            g129 = v5;
            g130 = v1;
            g125 = result2;
            return result2;
        }
        // 0x404210
        v17 = v9 + 1;
        g131 = v17;
        v18 = v14 + 1;
        g130 = v18;
        v20 = v18;
        v3 = v10;
        v19 = v17;
        v21 = v15 + 1;
        result2 = 0;
        // branch -> 0x404219
        goto lab_0x4169e40;
    }
  lab_0x416eb60:
    // 0x40421f
    g127 = v13;
    g131 = &v11;
    g129 = v5;
    g130 = v1;
    g125 = result2;
    return result2;
}

// Address range: 0x404250 - 0x40426f
int32_t function_404250(int32_t a1, int32_t a2) {
    // 0x404250
    g124 = a2;
    int32_t v1 = a2; // bp-8
    function_404170(a1, (char *)&v1, 1, 0, a1, a2, 0, 0, 0, 0, 0);
    return g124;
}

// Address range: 0x404270 - 0x40446f
void function_404270(void) {
    int32_t v1 = g129; // 0x404274
    char * v2 = (char *)g130; // bp-32
    char * v3;
    char v4 = *v3; // 0x404276
    int32_t v5 = v4; // 0x404276_0
    g130 = v5;
    int32_t v6 = 0;
    if (v4 != 0) {
        int32_t v7 = v5; // 0x404286
        int32_t v8 = (int32_t)*(char *)v7 | g125 & -256; // 0x404284
        int32_t v9 = v7 + 1; // 0x404286
        // branch -> 0x404284
        while (v8 != 0) {
            // 0x404284
            v7 = v9;
            v8 = (int32_t)*(char *)v7 | v8 & -256;
            v9 = v7 + 1;
            // continue -> 0x404284
        }
        // 0x40428d
        v6 = v9 - (v5 + 1);
        // branch -> 0x40429d
    }
    int32_t v10 = function_40a780((char *)v5); // 0x40429e
    int32_t v11 = (int32_t)*v3; // 0x4042a3_0
    g129 = v11;
    char * v12 = (char *)v11; // 0x4042a7_0
    g131 = v10;
    function_40a780(v12);
    int32_t * v13;
    int32_t v14 = (int32_t)v13; // 0x4042b7
    int32_t v15 = function_40a7c0(v1, v14); // 0x4042bd
    int32_t v16 = g131; // 0x4042c2
    int32_t v17 = v15;
    char * v18; // 0x4042cd_4
    if (v16 != 0) {
        int32_t v19 = function_40a840(v16); // 0x4042cd
        v18 = (char *)v19;
        g130 = v19;
        // branch -> 0x4042d4
    }
    char v20 = *(char *)v15; // 0x4042d4
    if (v20 != 0) {
        // 0x4042dc
        g129 = function_40a840((int32_t)*(char *)(int32_t)v20);
        // branch -> 0x4042e4
    }
    int32_t v21 = g130; // 0x4042e4
    g131 = v17;
    char * v22 = (char *)v17; // 0x4042e8_0
    int32_t v23; // 0x404415_11
    int32_t v24; // 0x404413
    if (v21 == 0) {
        // 0x404413
        v24 = 0;
        g131 = v24;
        v23 = (int32_t)(*v2 + (char)v24);
        g131 = v23;
        function_40a860(v23);
        g131 = v23;
        g130 = v14;
        g129 = (int32_t)*v12;
        *(char *)v17 = 0;
        return;
    }
    char * str = (char *)v21; // 0x4042f2_0
    if (*str == 0) {
        // 0x404413
        v24 = 0;
        g131 = v24;
        v23 = (int32_t)(*v2 + (char)v24);
        g131 = v23;
        function_40a860(v23);
        g131 = v23;
        g130 = v14;
        g129 = (int32_t)*v12;
        *(char *)v17 = 0;
        return;
    }
    // 0x4042fb
    int32_t v25; // 0x404455
    int32_t v26; // 0x40445525
    int32_t v27; // 0x40445528
    int32_t v28; // 0x40445c_11
    int32_t v29; // 0x404458
    int32_t v30; // 0x40445826
    unsigned char v31; // 0x404450
    unsigned char v32; // 0x40445019
    if (g129 == 0) {
        // 0x404449
        v32 = v18[v21];
        *v22 = v32;
        v26 = v21 + 1;
        v30 = (int32_t)v32 | g125 & -256;
        if (v30 == 0) {
            // 0x40445c
            v28 = (int32_t)(*v3 + (char)v17);
            // branch -> 0x404413
            // 0x404413
            v24 = g131 - v28;
            g131 = v24;
            v23 = (int32_t)(*v2 + (char)v24);
            g131 = v23;
            function_40a860(v23);
            g131 = v23;
            g130 = v14;
            g129 = (int32_t)*v12;
            *(char *)v28 = 0;
            return;
        }
        v27 = v26;
        v31 = v18[v27];
        *(char *)(v27 + v17 - v21) = v31;
        v25 = v26 + 1;
        v29 = (int32_t)v31 | v30 & -256;
        while (v29 != 0) {
            // 0x404450
            v27 = v25;
            v31 = v18[v27];
            *(char *)(v27 + v17 - v21) = v31;
            v25++;
            v29 = (int32_t)v31 | v29 & -256;
            // continue -> 0x404450
        }
        // 0x40445c
        v28 = (int32_t)(*v3 + (char)v17);
        // branch -> 0x404413
        // 0x404413
        v24 = g131 - v28;
        g131 = v24;
        v23 = (int32_t)(*v2 + (char)v24);
        g131 = v23;
        function_40a860(v23);
        g131 = v23;
        g130 = v14;
        g129 = (int32_t)*v12;
        *(char *)v28 = 0;
        return;
    }
    // 0x404303
    if (*(char *)g129 != 0) {
        int32_t v33 = g129; // 0x404318
        int32_t v34 = (int32_t)*(char *)v33 | g125 & -256; // 0x404316
        int32_t v35 = v33 + 1; // 0x404318
        // branch -> 0x404316
        while (v34 != 0) {
            // 0x404316
            v33 = v35;
            v34 = (int32_t)*(char *)v33 | v34 & -256;
            v35 = v33 + 1;
            // continue -> 0x404316
        }
        int32_t v36 = v35 - (g129 + 1); // 0x40431f
        g131 = v36;
        char * v37;
        if (v37 != NULL) {
            // 0x40432e
            abort();
            // UNREACHABLE
        }
        // 0x40435e
        char * v38;
        unsigned char v39 = *v38; // 0x404375
        int32_t v40 = v39; // 0x404375_0
        int32_t v41 = v21; // 0x4043a0
        if (v39 >= 2) {
            // 0x40437e
            g131 = v6;
            strncpy((char *)v6, str, v40 - 1);
            g131 = v36;
            int32_t v42 = v40 - 1 + g130; // 0x40439c
            g130 = v42;
            v41 = v42;
            // branch -> 0x4043a0
        }
        // 0x4043a0
        if (*(char *)v41 != 0) {
            // 0x4043a5
            return;
        }
        // 0x4043f0
        int32_t v43;
        if (v43 != 0) {
            // 0x4043f7
            HeapFree((int32_t)*(char *)g34, 0, NULL);
            // branch -> 0x40440b
        }
        // 0x40440b
        g131 = v1;
        int32_t v44 = (int32_t)*v38; // 0x40440f_0
        // branch -> 0x404413
        // 0x404413
        v24 = v1 - v44;
        g131 = v24;
        v23 = (int32_t)(*str + (char)v24);
        g131 = v23;
        function_40a860(v23);
        g131 = v23;
        g130 = v14;
        g129 = (int32_t)*v12;
        *(char *)v44 = 0;
        return;
    }
    // 0x404449
    v32 = v18[v21];
    *v22 = v32;
    v26 = v21 + 1;
    v30 = (int32_t)v32 | g125 & -256;
    if (v30 == 0) {
        // 0x40445c
        v28 = (int32_t)(*v3 + (char)v17);
        // branch -> 0x404413
        // 0x404413
        v24 = g131 - v28;
        g131 = v24;
        v23 = (int32_t)(*v2 + (char)v24);
        g131 = v23;
        function_40a860(v23);
        g131 = v23;
        g130 = v14;
        g129 = (int32_t)*v12;
        *(char *)v28 = 0;
        return;
    }
    v27 = v26;
    v31 = v18[v27];
    *(char *)(v27 + v17 - v21) = v31;
    v25 = v26 + 1;
    v29 = (int32_t)v31 | v30 & -256;
    while (v29 != 0) {
        // 0x404450
        v27 = v25;
        v31 = v18[v27];
        *(char *)(v27 + v17 - v21) = v31;
        v25++;
        v29 = (int32_t)v31 | v29 & -256;
        // continue -> 0x404450
    }
    // 0x40445c
    v28 = (int32_t)(*v3 + (char)v17);
    // branch -> 0x404413
    // 0x404413
    v24 = g131 - v28;
    g131 = v24;
    v23 = (int32_t)(*v2 + (char)v24);
    g131 = v23;
    function_40a860(v23);
    g131 = v23;
    g130 = v14;
    g129 = (int32_t)*v12;
    *(char *)v28 = 0;
}

// Address range: 0x404470 - 0x40448f
void function_404470(void) {
    // 0x404470
    int32_t v1;
    g125 = v1;
    function_404270();
}

// Address range: 0x404490 - 0x4044bf
void function_404490(void) {
    // 0x404490
    int32_t v1;
    if (v1 == 0) {
        // 0x4044ae
        g124 = 0;
        return;
    }
    int32_t v2 = v1; // 0x4044a2
    int32_t v3 = (int32_t)*(char *)v2 | g125 & -256; // 0x4044a0
    g125 = v3;
    int32_t v4 = v2 + 1; // 0x4044a2
    // branch -> 0x4044a0
    while (v3 != 0) {
        // 0x4044a0
        v2 = v4;
        v3 = (int32_t)*(char *)v2 | v3 & -256;
        g125 = v3;
        v4 = v2 + 1;
        // continue -> 0x4044a0
    }
    // 0x4044a9
    g124 = v4 - (v1 + 1);
}

// Address range: 0x4044c0 - 0x40453f
void function_4044c0(void) {
    // 0x4044c0
    int32_t * v1;
    int32_t v2 = (int32_t)v1; // 0x4044c1
    int32_t v3 = g130; // 0x4044c7
    int32_t v4 = v1 > (int32_t *)-1 ? v2 : 0;
    int32_t v5;
    g130 = v5;
    g129 = function_40a780((char *)&v5);
    int32_t v6 = v4; // 0x4044df
    int32_t v7 = function_40a7c0(v6, v2); // 0x4044e0
    char * v8 = (char *)v7; // 0x4044e0_5
    g131 = v7;
    char * v9; // 0x4044ec_4
    int32_t v10; // 0x4044f3
    if (g129 == 0) {
        // 0x4044f3
        v10 = g130;
        // branch -> 0x4044f3
    } else {
        int32_t v11 = function_40a840(g129); // 0x4044ec
        v9 = (char *)v11;
        g130 = v11;
        v10 = v11;
        // branch -> 0x4044f3
    }
    // 0x4044f3
    int32_t v12; // 0x40452c
    if (v10 == 0) {
        // 0x40452c
        v12 = v4;
        function_40a860(v12);
        v8[g131] = 0;
        g131 = v12;
        g130 = v6;
        return;
    }
    // 0x4044f8
    int32_t v13;
    int32_t v14; // 0x40451e
    int32_t v15; // 0x404511
    if (v3 >= 2) {
        int32_t v16 = v10; // 0x404509
        int32_t v17; // 0x404509
        int32_t v18; // 0x404506
        while (true) {
            // 0x404501
            if (*(char *)v16 != 0) {
                // 0x404506
                v18 = v3 - 1;
                v17 = v16 + 1;
                g130 = v17;
                if (v18 <= 1) {
                    // break -> 0x404511
                    break;
                }
                v3 = v18;
                v16 = v17;
                // continue -> 0x404501
                continue;
            }
            // 0x40452c
            v12 = v4;
            function_40a860(v12);
            v8[g131] = 0;
            g131 = v12;
            g130 = v6;
            return;
        }
        // 0x404511
        v15 = (int32_t)*(char *)v17 | v18 & -256;
        v13 = v15;
        if (v15 != 0) {
            // 0x404517
            v14 = v15;
            // branch -> 0x404517
            while (true) {
                // 0x404517
                if (v4 != 0) {
                    goto lab_0x41caf30;
                }
                // 0x40452c
                v12 = v4;
                function_40a860(v12);
                v8[g131] = 0;
                g131 = v12;
                g130 = v6;
                return;
            }
        }
        // 0x40452c
        v12 = v4;
        function_40a860(v12);
        v8[g131] = 0;
        g131 = v12;
        g130 = v6;
        return;
    }
    // 0x404511
    v15 = (int32_t)*(char *)v10 | v3 & -256;
    v13 = v15;
    if (v15 == 0) {
        // 0x40452c
        v12 = v4;
        function_40a860(v12);
        v8[g131] = 0;
        g131 = v12;
        g130 = v6;
        return;
    }
    // 0x404517
    v14 = v15;
    int32_t v19 = v4; // 0x404517
    // branch -> 0x404517
    while (true) {
        // 0x404517
        if (v19 != 0) {
          lab_0x41caf30:
            // 0x40451b
            g130++;
            v8[g131] = v14;
            int32_t v20 = v13 & -256 | (int32_t)v9[2]; // 0x404520
            v13 = v20;
            g131++;
            int32_t v21 = v4 - 1; // 0x404525
            v4 = v21;
            if (v20 == 0) {
                // break -> 0x40452c
                break;
            }
            v14 = v20;
            v19 = v21;
            // continue -> 0x404517
            continue;
        }
        // 0x40452c
        v12 = v4;
        function_40a860(v12);
        v8[g131] = 0;
        g131 = v12;
        g130 = v6;
        return;
    }
    // 0x40452c
    v12 = v4;
    function_40a860(v12);
    v8[g131] = 0;
    g131 = v12;
    g130 = v6;
}

// Address range: 0x404540 - 0x4046b0
void function_404540(void) {
    // 0x404540
    int32_t v1;
    g130 = v1;
    g126 = 0;
    int32_t * v2;
    if (v1 == 0) {
        // 0x4046af
        g130 = (int32_t)v2;
        return;
    }
    int32_t v3 = g125; // 0x404551
    // branch -> 0x404551
    while (true) {
        char * v4 = (char *)v1; // 0x404551_0
        int32_t v5 = v3 & -256; // 0x404551
        int32_t v6 = (int32_t)*v4 | v5; // 0x404551
        int32_t v7; // 0x40455d
        if (v6 != 32) {
            // 0x404558
            if (v6 != 9) {
                int32_t v8 = (int32_t)*v4 | v5; // 0x404562
                int32_t v9; // 0x404571
                if (v8 == 45) {
                    // 0x40456c
                    g131 = 1;
                    v9 = v1 + 1;
                    g130 = v9;
                    // branch -> 0x40457f
                } else {
                    // 0x404575
                    g131 = 0;
                    if (v8 == 43) {
                        int32_t v10 = v1 + 1; // 0x40457c
                        g130 = v10;
                        v9 = v10;
                        // branch -> 0x40457f
                    } else {
                        v9 = v1;
                    }
                }
                int32_t v11 = g127 & -256 | (int32_t)*(char *)v9; // 0x40457f
                int32_t v12 = v11;
                int32_t v13;
                int32_t v14;
                int32_t v15; // 0x4046a1
                int32_t v16; // 0x4046a8
                int32_t v17; // 0x4046a31
                int32_t v18; // 0x4046a43
                int32_t * v19; // 0x4046af_08
                int32_t v20; // 0x4046aa
                int32_t v21; // 0x40458a
                switch (v11) {
                    default: {
                        // 0x404664
                        if (v11 < 48) {
                            // 0x4046a1
                            v15 = g131;
                            g131 = v14;
                            g129 = v13;
                            if (v15 != 0) {
                                // 0x4046a8
                                g126 = -0;
                                // branch -> 0x4046af
                            }
                            // 0x4046af
                            g130 = (int32_t)v2;
                            return;
                        }
                        int32_t v22 = 0; // 0x404679
                        int32_t v23 = 0; // 0x40467a
                        while (true) {
                            char v24 = v11; // 0x404670
                            int32_t v25 = 0x1000000 * v11 - 0x39000000; // 0x404670
                            if (v25 < 0 ^ (56 - v24 & v24) < 0 || v25 == 0) {
                                // 0x404675
                                function_40a8f0();
                                uint32_t v26 = g124; // 0x404680
                                int32_t v27 = v12; // 0x404682
                                int32_t v28 = 0x1000000 * v27; // 0x404682
                                int32_t v29 = g130 + 1; // 0x404685
                                int32_t v30 = (int32_t)*(char *)v29 | v27 & -256; // 0x404685
                                v12 = v30;
                                uint32_t v31 = v28 / 0x1000000 + v26; // 0x40468b
                                int32_t v32 = v31 - 48; // 0x40468f
                                int32_t v33 = (int32_t)(v31 < v26) + g126 + (int32_t)(v31 < 48) + v28 / -0x80000000; // 0x404692
                                g130 = v29;
                                g126 = v33;
                                if (v30 <= 47) {
                                    v18 = v22;
                                    v20 = v33;
                                    v16 = v32;
                                    v17 = v23;
                                    v19 = NULL;
                                    // break (via goto) -> 0x4046a1
                                    goto lab_0x4215ae0;
                                }
                                v11 = v30;
                                v22 = v33;
                                v23 = v32;
                                // continue -> 0x404670
                                continue;
                            }
                        }
                        // 0x4046a1
                        v15 = g131;
                        int32_t v34; // 0x4046a32
                        g131 = v34;
                        int32_t v35; // 0x4046a44
                        g129 = v35;
                        if (v15 != 0) {
                            // 0x4046a8
                            g126 = -(((int32_t)(v23 != 0) + v22));
                            // branch -> 0x4046af
                        }
                        // 0x4046af
                        int32_t * v36; // 0x4046af_07
                        g130 = (int32_t)v36;
                        return;
                    }
                    case 36: {
                        int32_t v37 = 36; // 0x40458a
                        int32_t v38 = v9; // 0x40458d
                        while (true) {
                            int32_t v39 = v38 + 1; // 0x40458a
                            v21 = (int32_t)*(char *)v39 | v37 & -256;
                            v12 = v21;
                            g130 = v39;
                            if (v21 <= 57) {
                                // 0x4045bb
                                int32_t v40; // 0x40458a36
                                if (v21 > 57) {
                                  lab_0x41fda70:
                                    // 0x4045e3
                                    function_40a8f0();
                                    int32_t v41 = v12; // 0x4045ee
                                    uint32_t v42 = g124; // 0x4045f1
                                    int32_t v43 = 0x1000000 * v41; // 0x4045f3
                                    uint32_t v44 = v43 / 0x1000000 + v42; // 0x40460e
                                    int32_t v45 = v43 / -0x80000000 + g126 + (int32_t)(v44 < v42); // 0x404610
                                    if (v41 < 97) {
                                        // 0x40460e
                                        g126 = v45 + (int32_t)(v44 < 55);
                                        v40 = v41;
                                        // branch -> 0x40458a
                                    } else {
                                        // 0x4045fb
                                        g126 = v45 + (int32_t)(v44 < 87);
                                        v40 = v41;
                                        // branch -> 0x40458a
                                    }
                                  lab_0x42018a0:
                                    // 0x40458a
                                    v37 = v40;
                                    v38 = g130;
                                    // branch -> 0x40458a
                                    continue;
                                } else {
                                  lab_0x42023c0:
                                    // 0x4045c0
                                    function_40a8f0();
                                    uint32_t v46 = g124; // 0x4045d1
                                    int32_t v47 = v12; // 0x4045d3
                                    int32_t v48 = 0x1000000 * v47; // 0x4045d3
                                    int32_t v49 = v48 / 0x1000000 + v46; // 0x4045d9
                                    g126 = v48 / -0x80000000 + g126 + (int32_t)(v49 < v46);
                                    v40 = v47;
                                    // branch -> 0x40458a
                                    goto lab_0x42018a0;
                                }
                            }
                        }
                    }
                    case 37: {
                        int32_t v50 = v9 + 1; // 0x404626
                        unsigned char v51 = *(char *)v50; // 0x404626
                        int32_t v52 = v51; // 0x404626
                        v12 = v52;
                        g130 = v50;
                        if (v51 < 48) {
                            // 0x4046a1
                            v15 = g131;
                            g131 = v14;
                            g129 = v13;
                            if (v15 != 0) {
                                // 0x4046a8
                                g126 = -0;
                                // branch -> 0x4046af
                            }
                            // 0x4046af
                            g130 = (int32_t)v2;
                            return;
                        }
                        while (true) {
                            char v53 = v52; // 0x404631
                            int32_t v54 = 0x1000000 * v52 - 0x31000000; // 0x404631
                            if (v54 < 0 ^ (48 - v53 & v53) < 0 || v54 == 0) {
                                // 0x404636
                                function_40a8f0();
                                uint32_t v55 = g124; // 0x404647
                                int32_t v56 = v12; // 0x404649
                                int32_t v57 = 0x1000000 * v56; // 0x404649
                                int32_t v58 = g130 + 1; // 0x40464c
                                int32_t v59 = (int32_t)*(char *)v58 | v56 & -256; // 0x40464c
                                v12 = v59;
                                int32_t v60 = v57 / 0x1000000 + v55; // 0x404652
                                int32_t v61 = (int32_t)(v60 < v55) + g126 + v57 / -0x80000000; // 0x404654
                                g130 = v58;
                                g126 = v61;
                                if (v59 <= 47) {
                                    v18 = v13;
                                    v20 = v61;
                                    v16 = v60;
                                    v17 = v14;
                                    v19 = (int32_t *)0x404647;
                                    // break (via goto) -> 0x4046a1
                                    goto lab_0x4215ae0;
                                }
                                v52 = v59;
                                // continue -> 0x404631
                                continue;
                            }
                        }
                        // 0x4046a1
                        v15 = g131;
                        g131 = v14;
                        g129 = v13;
                        if (v15 != 0) {
                            // 0x4046a8
                            int32_t v62; // 0x404638
                            int32_t v63; // 0x40463d
                            g126 = -(((int32_t)(v62 != 0) + v63));
                            // branch -> 0x4046af
                        }
                        // 0x4046af
                        int32_t * v64; // 0x4046af_09
                        g130 = (int32_t)v64;
                        return;
                    }
                }
                switch (v21) {
                    case 102: {
                        break;
                    }
                    case 101: {
                        break;
                    }
                    case 100: {
                        break;
                    }
                    case 99: {
                        break;
                    }
                    case 98: {
                        break;
                    }
                    case 97: {
                        break;
                    }
                    case 70: {
                        break;
                    }
                    case 69: {
                        break;
                    }
                    case 68: {
                        break;
                    }
                    case 67: {
                        break;
                    }
                    case 66: {
                        break;
                    }
                    case 65: {
                        break;
                    }
                }
              lab_0x4215ae0:
                // 0x4046a1
                v15 = g131;
                g131 = v17;
                g129 = v18;
                if (v15 != 0) {
                    // 0x4046a8
                    g126 = -(((int32_t)(v16 != 0) + v20));
                    // branch -> 0x4046af
                }
                // 0x4046af
                g130 = (int32_t)v19;
                return;
            }
            // 0x40455d
            v7 = v1 + 1;
            g130 = v7;
            v3 = 9;
            v1 = v7;
            // branch -> 0x404551
            continue;
        }
        // 0x40455d
        v7 = v1 + 1;
        g130 = v7;
        v3 = 32;
        v1 = v7;
        // branch -> 0x404551
    }
}

// Address range: 0x4046b3 - 0x404913
void function_4046b3(void) {
    struct struct_3 * v1 = NULL; // bp-204
    struct struct_3 * v2 = NULL; // bp-200
    struct struct_3 * v3 = NULL; // bp+12
    g130 = g20;
    g131 = 0x40c010;
    GetPropA();
    struct struct_3 * v4 = (struct struct_3 *)g124; // bp-8
    GetPropA();
    int32_t * v5;
    int32_t Msg = (int32_t)v5; // 0x4046da
    int32_t v6 = g124; // 0x4046dd
    int32_t v7 = v6 - 1; // 0x4046dd
    int32_t * v8;
    int32_t * hWnd;
    if (v5 != (int32_t *)5) {
        // 0x4046e7
        if (Msg == 43) {
            // 0x404704
            if (v6 != 0) {
                int32_t v9 = function_409bf5(g101, v7); // 0x404714
                struct struct_1 * v10 = (struct struct_1 *)v9; // 0x404714_6
                if (v9 != 0) {
                    int32_t v11 = (int32_t)v8; // 0x404721
                    if (*(int32_t *)(v11 + 20) == v10->e0) {
                        int32_t v12 = 36 * *(int32_t *)(v11 + 8) + v10->e1; // 0x404735
                        int32_t v13 = v11 + 28; // 0x404738
                        g130 = v13;
                        int32_t v14 = v11 + 32; // 0x40473e
                        g130 = v14;
                        int32_t v15 = *(int32_t *)v14; // 0x40473f
                        int32_t v16 = v11 + 36; // 0x40473f
                        g130 = v16;
                        int32_t v17 = v11 + 40; // 0x404740
                        g130 = v17;
                        int32_t v18 = *(int32_t *)v17; // 0x404741
                        g130 = v11 + 44;
                        int32_t v19 = *(int32_t *)v13 + 1; // 0x404745
                        int32_t v20 = *(int32_t *)v12; // 0x404752
                        int32_t v21 = v20 - 1; // 0x404754
                        if (v21 != 0) {
                            // 0x404757
                            if (v20 == 2) {
                                int32_t v22 = *(int32_t *)(v12 + 12); // 0x40475e
                                if (v22 > *(int32_t *)(v12 + 16)) {
                                    // 0x40476a
                                    if (v22 < *(int32_t *)(v12 + 20)) {
                                        // 0x404771
                                        // branch -> 0x404787
                                    }
                                    // 0x404787
                                    FillRect(*(int32_t *)(v11 + 24), (int32_t *)v19, 14);
                                    // branch -> 0x404883
                                }
                                // 0x404883
                                // branch -> 0x40490f
                            } else {
                                // 0x4048fa
                                CallWindowProcA((int32_t *)v4, hWnd, Msg, (int32_t)v3, (int32_t)v8);
                                // branch -> 0x40490f
                            }
                            // 0x40490f
                            g131 = (int32_t)v1;
                            g130 = (int32_t)v2;
                            return;
                        }
                        // 0x40479e
                        GetObjectType();
                        int32_t * pv;
                        int32_t * v23; // 0x404903_06
                        if (v21 == 7) {
                            // 0x4047ac
                            GetObjectA((int32_t *)*(int32_t *)(v12 + 28), 24, pv);
                            v23 = (int32_t *)4;
                            // branch -> 0x4047fb
                        } else {
                            // 0x4047c4
                            GetIconInfo();
                            if (v21 != 0) {
                                // 0x4047dc
                                int32_t * h;
                                GetObjectA(h, 24, pv);
                                g130 = g31;
                                DeleteObject(pv);
                                DeleteObject(pv);
                                v23 = (int32_t *)3;
                                // branch -> 0x4047fb
                            } else {
                                v23 = (int32_t *)3;
                            }
                        }
                        // 0x4047fb
                        g131 = v11;
                        IntersectClipRect();
                        int32_t * v24;
                        int32_t v25 = v15 - (int32_t)v24 + v18; // 0x404819
                        int32_t y = (v25 - v25 / -0x80000000) / 2; // 0x404821
                        g130 = y;
                        int32_t * v26;
                        int32_t v27 = *(int32_t *)v16 - 1 - (int32_t)v26; // 0x404847
                        int32_t x = v27;
                        if (*(int32_t *)(v12 + 8) != 4) {
                            int32_t v28 = v27 + v19; // 0x404833
                            x = (v28 - v28 / -0x80000000) / 2;
                            // branch -> 0x40484f
                        }
                        int32_t v29 = *(int32_t *)(v12 + 32); // 0x40484f
                        g126 = v29;
                        g125 = 0;
                        if (v29 == 0) {
                            int32_t lData = *(int32_t *)(v12 + 28); // 0x404875
                            int32_t hdc = *(int32_t *)(g131 + 24); // 0x40487a
                            DrawStateA(hdc, 0, NULL, lData, 0, x, y, 0, 0, (int32_t)v23);
                            // branch -> 0x404883
                        } else {
                            // 0x404858
                            function_4085dd();
                            // branch -> 0x404883
                        }
                        // 0x404883
                        // branch -> 0x40490f
                        // 0x40490f
                        g131 = (int32_t)NULL;
                        g130 = (int32_t)NULL;
                        return;
                    }
                }
            }
        } else {
            // 0x4046ec
            if (Msg == 130) {
                // 0x4046f5
                RemovePropA();
                // branch -> 0x4048fa
            }
        }
        // 0x4048fa
        CallWindowProcA((int32_t *)v4, hWnd, Msg, (int32_t)v3, (int32_t)v8);
        // branch -> 0x40490f
        // 0x40490f
        g131 = (int32_t)v1;
        g130 = (int32_t)v2;
        return;
    }
    // 0x40488b
    g131 = 0;
    int32_t v30; // 0x4048a4
    int32_t * v31; // 0x4048b5
    int32_t v32;
    int32_t v33;
    int32_t * lpRect;
    uint32_t v34; // 0x4048e4
    int32_t v35; // 0x40489e
    int32_t v36; // 0x4048d6
    int32_t v37; // 0x4048e6
    int32_t v38; // 0x4048c2
    switch ((int32_t)v39) {
        case 2: {
            // 0x404898
            if (v6 != 0) {
                // 0x40489d
                v35 = g101;
                v2 = (struct struct_3 *)v35;
                v1 = (struct struct_3 *)0x4048a9;
                v30 = function_409bf5(v35, v7);
                g130 = v30;
                if (v30 != g131) {
                    // 0x4048af
                    v31 = GetParent((int32_t *)*(int32_t *)v30);
                    GetClientRect((int32_t)v31, lpRect);
                    v38 = g130;
                    if (*(int32_t *)(v38 + 16) == v33) {
                        // 0x4048ca
                        if (*(int32_t *)(v38 + 20) != v32) {
                            // 0x4048d2
                            v36 = *(int32_t *)v38;
                            SendMessageA((int32_t *)v36, 5, g131, (int32_t)lpRect);
                            v1 = (struct struct_3 *)g130;
                            function_404cda((struct struct_6 *)lpRect);
                            v34 = g131;
                            v37 = *(int32_t *)g130;
                            InvalidateRect((int32_t *)v37, (int32_t *)v34, v34 % 2 != 0);
                            *(int32_t *)(g130 + 16) = v33;
                            *(int32_t *)(g130 + 20) = v32;
                            // branch -> 0x4048fa
                        }
                    } else {
                        // 0x4048d2
                        v36 = *(int32_t *)v38;
                        SendMessageA((int32_t *)v36, 5, g131, (int32_t)lpRect);
                        v1 = (struct struct_3 *)g130;
                        function_404cda((struct struct_6 *)lpRect);
                        v34 = g131;
                        v37 = *(int32_t *)g130;
                        InvalidateRect((int32_t *)v37, (int32_t *)v34, v34 % 2 != 0);
                        *(int32_t *)(g130 + 16) = v33;
                        *(int32_t *)(g130 + 20) = v32;
                        // branch -> 0x4048fa
                    }
                    // 0x4048fa
                    CallWindowProcA((int32_t *)v4, hWnd, Msg, (int32_t)v3, (int32_t)v8);
                    // branch -> 0x40490f
                    // 0x40490f
                    g131 = (int32_t)v1;
                    g130 = (int32_t)v2;
                    return;
                }
            }
            break;
        }
        case 0: {
            // 0x404898
            if (v6 != 0) {
                // 0x40489d
                v35 = g101;
                v2 = (struct struct_3 *)v35;
                v1 = (struct struct_3 *)0x4048a9;
                v30 = function_409bf5(v35, v7);
                g130 = v30;
                if (v30 != g131) {
                    // 0x4048af
                    v31 = GetParent((int32_t *)*(int32_t *)v30);
                    GetClientRect((int32_t)v31, lpRect);
                    v38 = g130;
                    if (*(int32_t *)(v38 + 16) == v33) {
                        // 0x4048ca
                        if (*(int32_t *)(v38 + 20) != v32) {
                            // 0x4048d2
                            v36 = *(int32_t *)v38;
                            SendMessageA((int32_t *)v36, 5, g131, (int32_t)lpRect);
                            v1 = (struct struct_3 *)g130;
                            function_404cda((struct struct_6 *)lpRect);
                            v34 = g131;
                            v37 = *(int32_t *)g130;
                            InvalidateRect((int32_t *)v37, (int32_t *)v34, v34 % 2 != 0);
                            *(int32_t *)(g130 + 16) = v33;
                            *(int32_t *)(g130 + 20) = v32;
                            // branch -> 0x4048fa
                        }
                    } else {
                        // 0x4048d2
                        v36 = *(int32_t *)v38;
                        SendMessageA((int32_t *)v36, 5, g131, (int32_t)lpRect);
                        v1 = (struct struct_3 *)g130;
                        function_404cda((struct struct_6 *)lpRect);
                        v34 = g131;
                        v37 = *(int32_t *)g130;
                        InvalidateRect((int32_t *)v37, (int32_t *)v34, v34 % 2 != 0);
                        *(int32_t *)(g130 + 16) = v33;
                        *(int32_t *)(g130 + 20) = v32;
                        // branch -> 0x4048fa
                    }
                    // 0x4048fa
                    CallWindowProcA((int32_t *)v4, hWnd, Msg, (int32_t)v3, (int32_t)v8);
                    // branch -> 0x40490f
                    // 0x40490f
                    g131 = (int32_t)v1;
                    g130 = (int32_t)v2;
                    return;
                }
            }
            break;
        }
    }
    // 0x4048fa
    CallWindowProcA((int32_t *)v4, hWnd, Msg, (int32_t)v3, (int32_t)v8);
    // branch -> 0x40490f
    // 0x40490f
    g131 = (int32_t)v1;
    g130 = (int32_t)v2;
}

// Address range: 0x404916 - 0x4049dc
void function_404916(void) {
    struct struct_3 * v1 = NULL; // bp+16
    g130 = g20;
    g131 = 0x40c010;
    GetPropA();
    int32_t * v2;
    int32_t Msg = (int32_t)v2; // 0x40492e
    int32_t * lpPrevWndFunc = (int32_t *)g124; // 0x404935_0
    char v3;
    char * v4;
    int32_t * hWnd;
    int32_t * v5;
    char * v6;
    if (v2 == (int32_t *)130) {
        int32_t * v7 = GetParent(hWnd); // 0x40494d
        GetPropA();
        int32_t v8 = (int32_t)v7 - 1; // 0x404952
        char * v9 = (char *)v8; // 0x40495a_0
        int32_t v10 = function_409bf5(g101, v8); // 0x40495d
        g130 = v10;
        if (v10 != 0) {
            // 0x404968
            g131 = g21;
            RemovePropA();
            GetParent(hWnd);
            RemovePropA();
            g131 = 0;
            int32_t v11 = 0;
            int32_t v12 = g130; // 0x404985
            if (*(int32_t *)(v12 + 8) > 0) {
                int32_t v13 = 0; // 0x40499b11
                int32_t v14 = 0; // 0x40498d
                int32_t v15 = v12; // 0x40498a
                int32_t * v16 = (int32_t *)0x404981; // 0x4049da_07
                int32_t * v17; // 0x4049da_06
                int32_t v18; // 0x40499f
                while (true) {
                    int32_t v19 = *(int32_t *)(v14 + 32 + *(int32_t *)(v15 + 4)); // 0x40498d
                    v18 = v15;
                    int32_t v20 = v14; // 0x40499c
                    int32_t v21 = v13; // 0x40499b
                    v17 = v16;
                    if (v19 != 0) {
                        // 0x404995
                        function_4085cb();
                        v18 = g130;
                        v20 = g131;
                        v21 = v11;
                        v17 = (int32_t *)v19;
                        // branch -> 0x40499b
                    }
                    int32_t v22 = v21 + 1; // 0x40499b
                    v11 = v22;
                    int32_t v23 = v20 + 36; // 0x40499c
                    g131 = v23;
                    if (v22 >= *(int32_t *)(v18 + 8)) {
                        // break -> 0x4049a4
                        break;
                    }
                    v13 = v22;
                    v14 = v23;
                    v15 = v18;
                    v16 = v17;
                    // continue -> 0x40498a
                }
                // 0x4049a4
                HeapFree((int32_t)*(char *)g34, 0, (char *)*(int32_t *)(v18 + 4));
                function_409c5b(g101);
                // branch -> 0x4049c3
                // 0x4049c3
                // branch -> 0x4049c4
                // 0x4049c4
                v3 = *(char *)(int32_t)*v4;
                CallWindowProcA(lpPrevWndFunc, hWnd, Msg, (int32_t)v3, (int32_t)v1);
                g131 = (int32_t)v9;
                g130 = (int32_t)v17;
                return;
            }
            // 0x4049a4
            HeapFree((int32_t)*(char *)g34, 0, (char *)*(int32_t *)(v12 + 4));
            function_409c5b(g101);
            v5 = (int32_t *)0x404981;
            v6 = v9;
            // branch -> 0x4049c3
        }
        // 0x4049c3
        // branch -> 0x4049c4
    }
    // 0x4049c4
    v3 = *(char *)(int32_t)*v4;
    CallWindowProcA(lpPrevWndFunc, hWnd, Msg, (int32_t)v3, (int32_t)v1);
    g131 = (int32_t)v6;
    g130 = (int32_t)v5;
}

// Address range: 0x4049df - 0x404b23
int32_t function_4049df(struct struct_4 * a1, struct struct_4 * a2) {
    int32_t v1 = g102; // bp-44
    function_409cdf((char *)&v1);
    function_406788();
    int32_t v2 = function_409b6d((struct struct_32 *)g101, (int32_t)a1); // 0x404a08
    struct struct_4 * v3 = (struct struct_4 *)v2; // 0x404a08_6
    g130 = v2;
    if (a1 == (struct struct_4 *)-1) {
        // 0x404a15
        a1 = v3;
        // branch -> 0x404a18
    }
    int32_t v4 = HeapAlloc((int32_t)*(char *)g34, 8, 288); // 0x404a27
    g131 = v4;
    if (v4 == 0) {
        // 0x404b1c
        g131 = (int32_t)NULL;
        int32_t * v5;
        g130 = (int32_t)v5;
        return (int32_t)NULL;
    }
    // 0x404a37
    CreateStatusWindowA();
    int32_t v6 = 0;
    struct struct_4 * v7 = (struct struct_4 *)v4; // bp-8
    v3->e3 = (int32_t *)8;
    *(int32_t *)g130 = v4;
    v3->e1 = (char *)g131;
    v3->e2 = (char *)v6;
    v3->e4 = (char *)v6;
    v3->e5 = (char *)v6;
    GetPropA();
    g131 = g24;
    SetPropA();
    SetWindowLongA((int32_t *)v7, -4, (int32_t)function_404916);
    struct struct_4 * v8 = v7; // bp-112
    SetPropA();
    g131 = g23;
    int32_t wParam = 0;
    int32_t v9 = *(int32_t *)g130; // 0x404ad0
    SendMessageA((int32_t *)v9, (int32_t)*(char *)1032, 18, 0);
    int32_t v10 = *(int32_t *)g130; // 0x404ad8
    char v11 = *(char *)5;
    SendMessageA((int32_t *)v10, (int32_t)v11, wParam, wParam);
    *(int32_t **)g124 = (int32_t *)g130;
    int32_t * lpRect;
    GetClientRect((int32_t)a2, lpRect);
    uint16_t v12;
    uint16_t v13;
    int32_t lParam = 0x10000 * (int32_t)v12 | (int32_t)v13; // 0x404af9
    g124 = lParam;
    char v14 = *(char *)5;
    SendMessageA((int32_t *)a2, (int32_t)v14, wParam, lParam);
    if ((int32_t)a1 == g130) {
        // 0x404b09
        v7 = a1;
        // branch -> 0x404b1c
    }
    // 0x404b1c
    g131 = (int32_t)v8;
    g130 = (int32_t)(int32_t *)"pb_statusbar_callback";
    return (int32_t)v7;
}

// Address range: 0x404b26 - 0x404b41
void function_404b26(void) {
    // 0x404b26
    int32_t v1;
    function_409bf5(g101, v1);
    if (g124 != 0) {
        // 0x404b39
        DestroyWindow((int32_t *)*(int32_t *)g124);
        // branch -> 0x404b41
    }
}

// Address range: 0x404b44 - 0x404b67
int32_t function_404b44(void) {
    // 0x404b44
    function_409c96(24, 16, (int32_t)function_404b26);
    g101 = g124;
    int32_t result = function_409ce6(4, 0); // 0x404b5d
    g102 = result;
    return result;
}

// Address range: 0x404b68 - 0x404cc1
int32_t function_404b68(int32_t a1, struct struct_5 * a2, int32_t a3, int32_t a4) {
    int32_t nCmdShow = 0;
    function_409bf5(g101, a1);
    int32_t v1 = g124; // 0x404b80
    g131 = v1;
    int32_t * v2;
    if (v1 == 0) {
        // 0x404cbe
        g131 = (int32_t)v2;
        struct struct_5 * v3; // 0x404cc1_26
        return (int32_t)v3;
    }
    int32_t v4 = 36 * (int32_t)a2; // 0x404b91
    g130 = v4;
    int32_t v5 = v4 + *(int32_t *)(v1 + 4); // 0x404b94
    int32_t v6 = v4; // 0x404bad
    int32_t v7 = v1; // 0x404baa
    char v8;
    char v9;
    unsigned char v10;
    char v11;
    char v12;
    int32_t * v13; // 0x404bbe_0
    int32_t * v14; // 0x404bc5_0
    int32_t v15; // 0x404bef_1
    char * str2; // 0x404c18_0
    int32_t len; // 0x404bfb
    int32_t v16; // 0x404c0c
    int32_t v17; // 0x404c3a
    bool v18; // 0x404cb7
    struct struct_5 * v19; // 0x404cc1_27
    int32_t lParam;
    char * v20;
    char * str; // bp-56
    int32_t v21; // 0x404c17
    int32_t v22; // 0x404c80
    int32_t v23; // 0x404c7c
    int32_t v24; // 0x404cab
    int32_t v25; // 0x404cb5
    int32_t * v26; // bp+015
    int32_t v27; // 0x404bc5
    int32_t v28; // 0x404bc2
    int32_t v29; // 0x404bde
    int32_t wParam; // 0x404ca0
    int32_t v30; // 0x404c14
    int32_t v31; // 0x404c42
    struct struct_5 * v32; // 0x404c93_0
    if (*(int32_t *)v5 != 2) {
        // 0x404baa
        v27 = v6;
        v28 = v7;
        v26 = v2;
        if (*(int32_t *)(v6 + 32 + *(int32_t *)(v7 + 4)) != 0) {
            // 0x404bb5
            function_4085cb();
            v13 = (int32_t *)(*(int32_t *)(g131 + 4) + 32 + g130);
            *v13 = nCmdShow & *v13;
            v27 = g130;
            v28 = g131;
            v26 = (int32_t *)0x404bbb;
            // branch -> 0x404bc2
        }
        // 0x404bc2
        v14 = (int32_t *)(*(int32_t *)(v28 + 4) + v27);
        *v14 = nCmdShow & *v14;
        *(int32_t *)(*(int32_t *)(g131 + 4) + 8 + g130) = a4;
        g130 = &a3;
        v29 = a4;
        v15 = (int32_t)a2;
        if (v29 == 1) {
            // 0x404bf6
            a2 = (struct struct_5 *)(v15 | 256);
            // branch -> 0x404bfa
        } else {
            // 0x404bf6
            a2 = (struct struct_5 *)(v15 | 512);
            if (v29 == 4) {
                // 0x404c27
                v11 = *(char *)(strlen((char *)&a3) + 7);
                v17 = HeapAlloc((int32_t)*(char *)g34, 0, (int32_t)v11);
                nCmdShow = v17;
                v31 = v17 + 2;
                g124 = v31;
                str = (char *)g130;
                *(char *)v17 = 9;
                *(char *)(nCmdShow + 1) = 9;
                strcpy(&((struct struct_5 *)v31)->e0, str);
                g125 = (int32_t)*str;
                if (g56 != 0) {
                    // 0x404c5e
                    str = "    ";
                    strcat(&((struct struct_5 *)nCmdShow)->e0, "    ");
                    // branch -> 0x404c69
                    // 0x404c69
                    g125 = (int32_t)*str;
                    // branch -> 0x404c6d
                }
                // 0x404c6d
                g130 = g23;
                v23 = *(int32_t *)g131;
                v8 = *(char *)1025;
                v12 = *(char *)nCmdShow;
                SendMessageA((int32_t *)v23, (int32_t)v8, (int32_t)a2, (int32_t)v12);
                v22 = nCmdShow;
                if (v22 != 0) {
                    // 0x404c84
                    HeapFree((int32_t)*(char *)g34, 0, (char *)v22);
                    // branch -> 0x404c93
                }
                // 0x404c93
                v32 = a2;
                if (v32 != (struct struct_5 *)256) {
                    // 0x404c9c
                    wParam = (int32_t)v32 & -257;
                    g124 = wParam;
                    v24 = *(int32_t *)g131;
                    v9 = *(char *)1034;
                    SendMessageA((int32_t *)v24, (int32_t)v9, wParam, lParam);
                    v25 = *(int32_t *)g131;
                    v10 = *(char *)1;
                    v18 = InvalidateRect((int32_t *)v25, &lParam, v10 % 2 != 0);
                    v19 = (struct struct_5 *)(int32_t)v18;
                    // branch -> 0x404cbd
                } else {
                    v19 = (struct struct_5 *)256;
                }
                // 0x404cbd
                g130 = (int32_t)v20;
                // branch -> 0x404cbe
                // 0x404cbe
                g131 = (int32_t)v26;
                return (int32_t)v19;
            }
        }
        // 0x404bfa
        len = strlen((char *)&a3);
        v16 = HeapAlloc((int32_t)*(char *)g34, 0, len + 2);
        nCmdShow = v16;
        v30 = v16 + 1;
        g124 = v30;
        v21 = g130;
        str2 = (char *)v30;
        *(char *)v16 = 9;
        strcpy(str2, (char *)v21);
        // branch -> 0x404c69
        // 0x404c69
        g125 = (int32_t)*(char *)0x404c21;
        // branch -> 0x404c6d
        // 0x404c6d
        g130 = g23;
        v23 = *(int32_t *)g131;
        v8 = *(char *)1025;
        v12 = *(char *)nCmdShow;
        SendMessageA((int32_t *)v23, (int32_t)v8, (int32_t)a2, (int32_t)v12);
        v22 = nCmdShow;
        if (v22 != 0) {
            // 0x404c84
            HeapFree((int32_t)*(char *)g34, 0, (char *)v22);
            // branch -> 0x404c93
        }
        // 0x404c93
        v32 = a2;
        if (v32 != (struct struct_5 *)256) {
            // 0x404c9c
            wParam = (int32_t)v32 & -257;
            g124 = wParam;
            v24 = *(int32_t *)g131;
            v9 = *(char *)1034;
            SendMessageA((int32_t *)v24, (int32_t)v9, wParam, lParam);
            v25 = *(int32_t *)g131;
            v10 = *(char *)1;
            v18 = InvalidateRect((int32_t *)v25, &lParam, v10 % 2 != 0);
            v19 = (struct struct_5 *)(int32_t)v18;
            // branch -> 0x404cbd
        } else {
            v19 = (struct struct_5 *)256;
        }
        // 0x404cbd
        g130 = (int32_t)str2;
        // branch -> 0x404cbe
        // 0x404cbe
        g131 = (int32_t)(int32_t *)v21;
        return (int32_t)v19;
    }
    int32_t v33 = *(int32_t *)(v5 + 24); // 0x404b9b
    int32_t * hWnd; // 0x404ba3_0
    char * v34; // bp+011
    if (v33 != 0) {
        // 0x404ba2
        hWnd = (int32_t *)v33;
        ShowWindow(hWnd, nCmdShow);
        v6 = g130;
        v7 = g131;
        v34 = (char *)0x404baa;
        // branch -> 0x404baa
    } else {
        v6 = v4;
        v7 = v1;
        hWnd = v2;
        v34 = v20;
    }
    // 0x404baa
    v27 = v6;
    v28 = v7;
    v26 = hWnd;
    if (*(int32_t *)(v6 + 32 + *(int32_t *)(v7 + 4)) != 0) {
        // 0x404bb5
        function_4085cb();
        v13 = (int32_t *)(*(int32_t *)(g131 + 4) + 32 + g130);
        *v13 = nCmdShow & *v13;
        v27 = g130;
        v28 = g131;
        v26 = (int32_t *)0x404bbb;
        // branch -> 0x404bc2
    }
    // 0x404bc2
    v14 = (int32_t *)(*(int32_t *)(v28 + 4) + v27);
    *v14 = nCmdShow & *v14;
    *(int32_t *)(*(int32_t *)(g131 + 4) + 8 + g130) = a4;
    g130 = &a3;
    v29 = a4;
    v15 = (int32_t)a2;
    if (v29 == 1) {
        // 0x404bf6
        a2 = (struct struct_5 *)(v15 | 256);
        // branch -> 0x404bfa
    } else {
        // 0x404bf6
        a2 = (struct struct_5 *)(v15 | 512);
        if (v29 == 4) {
            // 0x404c27
            v11 = *(char *)(strlen((char *)&a3) + 7);
            v17 = HeapAlloc((int32_t)*(char *)g34, 0, (int32_t)v11);
            nCmdShow = v17;
            v31 = v17 + 2;
            g124 = v31;
            str = (char *)g130;
            *(char *)v17 = 9;
            *(char *)(nCmdShow + 1) = 9;
            strcpy(&((struct struct_5 *)v31)->e0, str);
            g125 = (int32_t)*str;
            if (g56 != 0) {
                // 0x404c5e
                str = "    ";
                strcat(&((struct struct_5 *)nCmdShow)->e0, "    ");
                // branch -> 0x404c69
                // 0x404c69
                g125 = (int32_t)*str;
                // branch -> 0x404c6d
            }
            // 0x404c6d
            g130 = g23;
            v23 = *(int32_t *)g131;
            v8 = *(char *)1025;
            v12 = *(char *)nCmdShow;
            SendMessageA((int32_t *)v23, (int32_t)v8, (int32_t)a2, (int32_t)v12);
            v22 = nCmdShow;
            if (v22 != 0) {
                // 0x404c84
                HeapFree((int32_t)*(char *)g34, 0, (char *)v22);
                // branch -> 0x404c93
            }
            // 0x404c93
            v32 = a2;
            if (v32 != (struct struct_5 *)256) {
                // 0x404c9c
                wParam = (int32_t)v32 & -257;
                g124 = wParam;
                v24 = *(int32_t *)g131;
                v9 = *(char *)1034;
                SendMessageA((int32_t *)v24, (int32_t)v9, wParam, lParam);
                v25 = *(int32_t *)g131;
                v10 = *(char *)1;
                v18 = InvalidateRect((int32_t *)v25, &lParam, v10 % 2 != 0);
                v19 = (struct struct_5 *)(int32_t)v18;
                // branch -> 0x404cbd
            } else {
                v19 = (struct struct_5 *)256;
            }
            // 0x404cbd
            g130 = (int32_t)v34;
            // branch -> 0x404cbe
            // 0x404cbe
            g131 = (int32_t)v26;
            return (int32_t)v19;
        }
    }
    // 0x404bfa
    len = strlen((char *)&a3);
    v16 = HeapAlloc((int32_t)*(char *)g34, 0, len + 2);
    nCmdShow = v16;
    v30 = v16 + 1;
    g124 = v30;
    v21 = g130;
    str2 = (char *)v30;
    *(char *)v16 = 9;
    strcpy(str2, (char *)v21);
    // branch -> 0x404c69
    // 0x404c69
    g125 = (int32_t)*(char *)0x404c21;
    // branch -> 0x404c6d
    // 0x404c6d
    g130 = g23;
    v23 = *(int32_t *)g131;
    v8 = *(char *)1025;
    v12 = *(char *)nCmdShow;
    SendMessageA((int32_t *)v23, (int32_t)v8, (int32_t)a2, (int32_t)v12);
    v22 = nCmdShow;
    if (v22 != 0) {
        // 0x404c84
        HeapFree((int32_t)*(char *)g34, 0, (char *)v22);
        // branch -> 0x404c93
    }
    // 0x404c93
    v32 = a2;
    if (v32 != (struct struct_5 *)256) {
        // 0x404c9c
        wParam = (int32_t)v32 & -257;
        g124 = wParam;
        v24 = *(int32_t *)g131;
        v9 = *(char *)1034;
        SendMessageA((int32_t *)v24, (int32_t)v9, wParam, lParam);
        v25 = *(int32_t *)g131;
        v10 = *(char *)1;
        v18 = InvalidateRect((int32_t *)v25, &lParam, v10 % 2 != 0);
        v19 = (struct struct_5 *)(int32_t)v18;
        // branch -> 0x404cbd
    } else {
        v19 = (struct struct_5 *)256;
    }
    // 0x404cbd
    g130 = (int32_t)str2;
    // branch -> 0x404cbe
    // 0x404cbe
    g131 = (int32_t)(int32_t *)v21;
    return (int32_t)v19;
}

// Address range: 0x404cc4 - 0x404cd7
void function_404cc4(int32_t a1, struct struct_5 * a2, int32_t a3) {
    // 0x404cc4
    function_404b68(a1, a2, a3, 0);
}

// Address range: 0x404cda - 0x404e65
int32_t function_404cda(struct struct_6 * a1) {
    struct struct_6 * v1 = a1;
    int32_t v2 = (int32_t)a1; // 0x404ce4
    g130 = v2;
    int32_t v3 = a1->e1; // 0x404ce7
    g124 = v3;
    if (v3 > 32) {
        // 0x404cfa
        int32_t dwBytes;
        int32_t v4 = HeapAlloc((int32_t)*(char *)g34, 0, dwBytes); // 0x404d06
        struct struct_6 * v5 = (struct struct_6 *)v4; // 0x404d06_5
        v1 = v5;
        if (v4 == 0) {
            // 0x404e63
            int32_t * v6;
            g130 = (int32_t)v6;
            return (int32_t)v5;
        }
        // 0x404cfa
        v2 = g130;
        // branch -> 0x404d17
    }
    // 0x404d17
    int32_t * lpRect;
    GetClientRect(*(int32_t *)v2, lpRect);
    if (GetParent((int32_t *)*(int32_t *)g130) != NULL) {
        // 0x404d33
        IsZoomed();
        // branch -> 0x404d57
    }
    int32_t v7 = g130; // 0x404d57
    int32_t v8 = *(int32_t *)(v7 + 8); // 0x404d57
    g131 = v8;
    g126 = 0;
    int32_t ** v9;
    int32_t v10; // 0x404dc6
    if (v8 < 1) {
        // 0x404d94
        g124 = 0;
        v10 = v7;
        // branch -> 0x404dc3
    } else {
        int32_t v11 = 0; // 0x404d78
        int32_t v12 = 0; // 0x404d75
        int32_t ** v13 = (int32_t **)v8; // bp+012
        int32_t v14 = *(int32_t *)(v7 + 4) + 4;
        // branch -> 0x404d6b
        int32_t ** v15; // 0x404d7d_3
        int32_t v16; // 0x404d8f
        int32_t v17; // 0x404d8c
        while (true) {
            int32_t v18 = *(int32_t *)v14; // 0x404d6b
            if (v18 == -0xffff) {
                // 0x404d75
                v17 = v11;
                v16 = v12 + 1;
                // branch -> 0x404d7a
            } else {
                // 0x404d78
                v17 = v18 + v11;
                v16 = v12;
                // branch -> 0x404d7a
            }
            int32_t v19 = (int32_t)v13 - 1; // 0x404d7d
            v15 = (int32_t **)v19;
            if (v19 == 0) {
                // break -> 0x404d82
                break;
            }
            v11 = v17;
            v12 = v16;
            v13 = v15;
            v14 = v18 + 36;
            // continue -> 0x404d6b
        }
        int32_t ** v20 = v15; // bp+011
        if (v16 >= 1) {
            int32_t v21 = (int32_t)v9 - (int32_t)lpRect - v17; // 0x404d8c
            int32_t ** v22 = (int32_t **)(int32_t)((0x100000000 * (int64_t)(v21 / -0x80000000) | (int64_t)v21) / (int64_t)v16); // 0x404d91_0
            v20 = v22;
            // branch -> 0x404d9c
        }
        // 0x404d9c
        g124 = 0;
        g131 = 0;
        int32_t v23 = 0;
        int32_t v24 = 0; // 0x404dad
        int32_t v25 = 4; // 0x404da1
        // branch -> 0x404d9e
        while (true) {
            int32_t v26 = *(int32_t *)(v25 + *(int32_t *)(v7 + 4)); // 0x404da1
            int32_t v27 = (v26 == -0xffff ? (int32_t)v20 : v26) + v24;
            g126 = (int32_t)v1;
            v1->e0[v23] = v27;
            int32_t v28 = g124 + 1; // 0x404dba
            g124 = v28;
            int32_t v29 = g131; // 0x404dbb
            g131 = v29 + 36;
            int32_t v30 = g130; // 0x404dbe
            if (v28 < *(int32_t *)(v30 + 8)) {
                // 0x404db4
                v23 = v28;
                v24 = v27;
                v25 = v29 + 40;
                v7 = v30;
                // branch -> 0x404d9e
                continue;
            } else {
                v10 = v30;
            }
        }
    }
    int32_t * hWnd = (int32_t *)*(int32_t *)v10; // 0x404dce_1
    SendMessageA(hWnd, 1028, *(int32_t *)(v10 + 8), (int32_t)v1);
    int32_t v31 = 0;
    bool v32; // 0x404e5d
    struct struct_6 * v33; // 0x404e65_15
    int32_t v34;
    int32_t v35;
    struct struct_6 * v36; // 0x404e4b_0
    if (g56 != 0) {
        int32_t v37 = g130; // 0x404de0
        if (*(int32_t *)(v37 + 8) > 0) {
            // 0x404de5
            g131 = 0;
            int32_t lParam = (int32_t)lpRect; // 0x404e03
            int32_t wParam = 0; // 0x404dfb
            int32_t v38 = 0; // 0x404dea
            int32_t * v39 = hWnd; // 0x404e63_08
            int32_t v40 = v35;
            // branch -> 0x404de7
            int32_t v41;
            int32_t * v42; // 0x404e63_07
            while (true) {
                int32_t v43 = *(int32_t *)(v37 + 4) + v38; // 0x404dea
                g124 = v43;
                v42 = v39;
                v41 = v40;
                if (*(int32_t *)v43 == 2) {
                    // 0x404df1
                    if (*(int32_t *)(v43 + 24) != 0) {
                        int32_t * hWnd2 = (int32_t *)*(int32_t *)v37; // 0x404e01_1
                        if (SendMessageA(hWnd2, 1034, wParam, lParam) != NULL) {
                            // 0x404e0d
                            g126 = -8 - lParam + (int32_t)v9;
                            int32_t v44 = *(int32_t *)(g130 + 4); // 0x404e2b
                            g124 = v44;
                            MoveWindow();
                            int32_t v45;
                            v42 = (int32_t *)(v45 + 3);
                            v41 = *(int32_t *)(v44 + 24 + g131);
                            // branch -> 0x404e3c
                        } else {
                            v42 = hWnd2;
                            v41 = v40;
                        }
                    } else {
                        v42 = v39;
                        v41 = v40;
                    }
                }
                int32_t v46 = v31 + 1; // 0x404e3c
                v31 = v46;
                int32_t v47 = g131 + 36; // 0x404e3d
                g131 = v47;
                int32_t v48 = g130; // 0x404e40
                if (v46 >= *(int32_t *)(v48 + 8)) {
                    // break -> 0x404e45
                    break;
                }
                wParam = v46;
                v38 = v47;
                v37 = v48;
                v39 = v42;
                v40 = v41;
                // continue -> 0x404de7
            }
            // 0x404e45
            v36 = v1;
            g131 = v41;
            if (v36 != (struct struct_6 *)&v34) {
                // 0x404e52
                v32 = HeapFree((int32_t)*(char *)g34, 0, (char *)v36);
                v33 = (struct struct_6 *)(int32_t)v32;
                // branch -> 0x404e63
            } else {
                v33 = (struct struct_6 *)&v34;
            }
            // 0x404e63
            g130 = (int32_t)v42;
            return (int32_t)v33;
        }
    }
    // 0x404e45
    v36 = v1;
    g131 = v35;
    if (v36 != (struct struct_6 *)&v34) {
        // 0x404e52
        v32 = HeapFree((int32_t)*(char *)g34, 0, (char *)v36);
        v33 = (struct struct_6 *)(int32_t)v32;
        // branch -> 0x404e63
    } else {
        v33 = (struct struct_6 *)&v34;
    }
    // 0x404e63
    g130 = (int32_t)hWnd;
    return (int32_t)v33;
}

// Address range: 0x404e68 - 0x404f00
int32_t function_404e68(void) {
    int32_t v1 = g102; // bp-8
    function_409cdf((char *)&v1);
    int32_t v2 = *(int32_t *)g124; // 0x404e74
    g130 = v2;
    int32_t v3 = *(int32_t *)(v2 + 8); // 0x404e76
    int32_t result; // 0x404f00_11
    if (v3 > 255) {
        // 0x404eff
        g130 = (int32_t)(struct struct_6 *)0x404e74;
        return result;
    }
    int32_t v4 = *(int32_t *)(v2 + 12); // 0x404e81
    int32_t * v5; // 0x404ef6_0
    struct struct_6 * v6; // 0x404ef9_0
    int32_t v7;
    int32_t v8; // 0x404eab
    int32_t v9; // 0x404eb8
    int32_t v10; // 0x404ec9
    int32_t v11; // 0x404ed7
    int32_t v12; // 0x404ee8
    int32_t v13; // 0x404eae
    int32_t v14; // 0x404ebb
    int32_t v15; // 0x404ecc
    int32_t v16; // 0x404eda
    int32_t v17; // 0x404eeb
    if (v3 < v4) {
        v8 = v2;
        // 0x404eab
        v13 = *(int32_t *)(v8 + 4);
        *(int32_t *)(36 * *(int32_t *)(v8 + 8) + v13) = 0;
        v9 = g130;
        v14 = *(int32_t *)(v9 + 4);
        g126 = v7;
        *(int32_t *)(36 * *(int32_t *)(v9 + 8) + 4 + v14) = v7;
        v10 = g130;
        v15 = *(int32_t *)(v10 + 4);
        *(int32_t *)(36 * *(int32_t *)(v10 + 8) + 16 + v15) = 0;
        v11 = g130;
        v16 = *(int32_t *)(v11 + 4);
        *(int32_t *)(36 * *(int32_t *)(v11 + 8) + 20 + v16) = 100;
        v12 = g130;
        v17 = *(int32_t *)(v12 + 4);
        *(int32_t *)(36 * *(int32_t *)(v12 + 8) + 24 + v17) = 0;
        v5 = (int32_t *)(g130 + 8);
        *v5 = *v5 + 1;
        v6 = (struct struct_6 *)g130;
        result = function_404cda(v6);
        // branch -> 0x404eff
        // 0x404eff
        g130 = (int32_t)v6;
        return result;
    }
    int32_t dwBytes = 36 * v4 + 288; // 0x404e8b
    g124 = dwBytes;
    struct struct_6 * v18 = (struct struct_6 *)dwBytes; // bp-12
    int32_t v19 = *(int32_t *)(v2 + 4); // 0x404e8f
    char v20 = *(char *)g34;
    int32_t v21 = HeapReAlloc((int32_t)v20, 8, (int32_t *)v19, dwBytes); // 0x404e9a
    if (v21 != 0) {
        int32_t * v22 = (int32_t *)(g130 + 12); // 0x404ea4_0
        *v22 = *v22 + 8;
        *(int32_t *)(g130 + 4) = v21;
        v8 = g130;
        // branch -> 0x404eab
        // 0x404eab
        v13 = *(int32_t *)(v8 + 4);
        *(int32_t *)(36 * *(int32_t *)(v8 + 8) + v13) = 0;
        v9 = g130;
        v14 = *(int32_t *)(v9 + 4);
        g126 = v7;
        *(int32_t *)(36 * *(int32_t *)(v9 + 8) + 4 + v14) = v7;
        v10 = g130;
        v15 = *(int32_t *)(v10 + 4);
        *(int32_t *)(36 * *(int32_t *)(v10 + 8) + 16 + v15) = 0;
        v11 = g130;
        v16 = *(int32_t *)(v11 + 4);
        *(int32_t *)(36 * *(int32_t *)(v11 + 8) + 20 + v16) = 100;
        v12 = g130;
        v17 = *(int32_t *)(v12 + 4);
        *(int32_t *)(36 * *(int32_t *)(v12 + 8) + 24 + v17) = 0;
        v5 = (int32_t *)(g130 + 8);
        *v5 = *v5 + 1;
        v6 = (struct struct_6 *)g130;
        v18 = v6;
        result = function_404cda(v6);
        // branch -> 0x404eff
    } else {
        result = 0;
    }
    // 0x404eff
    g130 = (int32_t)v18;
    return result;
}

// Address range: 0x404f03 - 0x404f39
int32_t function_404f03(void) {
    // 0x404f03
    memset((int32_t *)g125, 0, 8);
    int32_t * v1 = (int32_t *)8; // bp-12
    InitCommonControlsEx();
    CoInitialize();
    return (int32_t)&v1;
}

// Address range: 0x404f3a - 0x404f66
int32_t function_404f3a(char * lpText, int32_t * a2) {
    // 0x404f3a
    function_40573e(1);
    char * lpCaption;
    g130 = MessageBoxA((int32_t *)function_4057e7((int32_t)lpText), lpText, lpCaption, (int32_t)a2);
    function_40573e(0);
    int32_t result = g130; // 0x404f63
    g130 = 0;
    return result;
}

// Address range: 0x404f69 - 0x404f87
void function_404f69(void) {
    // 0x404f69
    if (g48 != 0) {
        // 0x404f72
        EnableWindow(g46, true);
        // branch -> 0x404f80
    }
    // 0x404f80
    function_40573e(0);
}

// Address range: 0x404f88 - 0x405035
void function_404f88(void) {
    int32_t v1;
    int32_t v2 = v1 - 2; // 0x404f8f
    if (v2 == 0) {
        // 0x405016
        UnregisterClassA("InputRequester", (int32_t *)g35);
        g47 = 1;
        // branch -> 0x405032
        // 0x405032
        return;
    }
    // 0x404f96
    char * v3;
    if (v2 == 14) {
        // 0x404fb7
        function_404f69();
        DestroyWindow((int32_t *)(int32_t)*v3);
        // branch -> 0x405032
        // 0x405032
        return;
    }
    // 0x404f9b
    uint16_t v4;
    int32_t v5 = v4; // 0x404fa9
    if (v4 == 1000) {
        // 0x404fc7
        GetWindowLongA();
        g131 = v5 - 1000;
        int32_t v6 = GetWindowTextLengthA((int32_t *)g45) + 1; // 0x404fe4
        g130 = v6;
        char v7 = *(char *)v6;
        int32_t v8 = HeapAlloc((int32_t)*(char *)g34, 0, (int32_t)v7); // 0x404fee
        *(int32_t *)g131 = v8;
        char v9 = *(char *)g130;
        GetWindowTextA((int32_t *)(char *)g45, (char *)v8, (int32_t)v9);
        function_404f69();
        DestroyWindow((int32_t *)(int32_t)*v3);
        g131 = (int32_t)*v3;
        g130 = -21;
        // branch -> 0x405032
    } else {
        // 0x404fb4
        if (v5 == 1001) {
            // 0x404fb7
            function_404f69();
            DestroyWindow((int32_t *)(int32_t)*v3);
            // branch -> 0x405032
        }
    }
}

// Address range: 0x405038 - 0x40506a
void function_405038(void) {
    int32_t v1 = g131; // 0x405038
    int32_t v2 = g130; // 0x40503a
    int32_t v3;
    if (v1 == 0) {
        // 0x405067
        g124 = 0;
        g130 = v3;
        return;
    }
    int32_t len = strlen((char *)v1); // 0x40503e
    g125 = v1;
    int32_t v4 = HeapAlloc((int32_t)*(char *)g34, 0, len + 1); // 0x40504e
    g130 = v4;
    if (v4 == 0) {
        // 0x405067
        g124 = 0;
        g130 = v3;
        return;
    }
    int32_t v5 = g131; // 0x40505a
    strcpy((char *)v4, (char *)v5);
    g125 = v5;
    g124 = g130;
    g130 = v2;
}

// Address range: 0x40506b - 0x405084
void function_40506b(void) {
    // 0x40506b
    char * lpMem;
    if (lpMem != NULL) {
        // 0x405072
        HeapFree((int32_t)*(char *)g34, 0, lpMem);
        // branch -> 0x405084
    }
}

// Address range: 0x405085 - 0x4053a5
void function_405085(void) {
    struct _WNDCLASSEX lpwcx[3];
    struct _MSG * v1 = NULL; // bp-52
    char * v2;
    g131 = (int32_t)*v2;
    g130 = 0;
    function_405038();
    char * v3;
    g131 = (int32_t)*v3;
    char * v4 = (char *)g124;
    function_405038();
    char * v5;
    g131 = (int32_t)*v5;
    char * v6 = (char *)g124;
    function_405038();
    int32_t v7 = g130; // 0x4050b1
    char * v8 = (char *)g124; // bp+12
    int32_t v9 = v7; // 0x4050d3
    if (g50 == v7) {
        // 0x4050bc
        g50 = (int32_t)GetStockObject((int32_t)*(char *)17);
        v9 = g130;
        // branch -> 0x4050c9
    }
    // 0x4050c9
    lpwcx[0].e0 = 48;
    lpwcx[0].e1 = 3;
    lpwcx[0].e2 = (int32_t (*)(int32_t))function_404f88;
    LoadCursorA((int32_t *)v9, (char *)0x7f00);
    g124 = g8;
    RegisterClassExA(lpwcx);
    g131 = 1;
    g47 = g130;
    function_40573e(lpwcx[0].e0);
    int32_t v10 = function_4057e7(lpwcx[0].e0); // 0x40512c
    g46 = v10;
    int32_t * v11 = &g130;
    char v12;
    char v13;
    char v14;
    char v15;
    int32_t * hMenu; // 0x4051eb
    char v16;
    char v17;
    char v18;
    char v19;
    struct _MSG * lpMsg; // 0x405304
    char v20;
    char v21;
    char v22;
    char v23;
    char v24;
    char v25;
    char v26;
    char v27;
    char v28;
    char v29;
    char v30;
    char v31;
    char v32;
    char v33;
    char v34;
    char v35;
    char v36;
    char v37;
    char v38;
    char v39;
    char v40;
    char v41;
    char * v42; // 0x405160_0
    char * v43; // 0x405178_0
    char * lpWindowName; // 0x4051a3_0
    char * lpWindowName2; // 0x4051e2_0
    char * len2; // 0x405272_0
    char * len3; // 0x405358_0
    int32_t v44; // 0x405168
    int32_t v45; // 0x40517f
    int32_t v46; // 0x40518b
    int32_t * windowHandle; // 0x4051ad
    int32_t * windowHandle2; // 0x4051eb
    int32_t * windowHandle3; // 0x40522c
    int32_t * windowHandle4; // 0x4052a7
    bool v47; // 0x405304
    int32_t v48; // 0x405359
    char * v49;
    char * v50; // bp-12
    char * v51; // bp-120
    char * len; // bp-124
    char * v52; // bp-144
    char * v53; // bp-156
    int32_t v54;
    int32_t v55;
    int32_t v56; // 0x4051c9
    int32_t v57; // 0x405205
    int32_t v58; // 0x4052a6
    int32_t v59; // 0x4052fd
    int32_t v60; // 0x4051b1
    int32_t v61; // 0x4053349
    int32_t v62; // 0x40533c
    char * v63; // 0x4053a1_02
    int32_t v64; // 0x40533410
    unsigned char v65; // 0x40524c
    int32_t X; // 0x405198
    int32_t v66; // 0x40524c
    int32_t v67; // 0x405347
    if (v10 == g130) {
        // 0x405160
        g48 = *v11;
        v42 = (char *)g130;
        v51 = v42;
        v44 = function_4057e7((int32_t)*v42);
        v43 = (char *)g131;
        g131 = g26;
        v45 = GetSystemMetrics((int32_t)*v43);
        v52 = (char *)((v45 - v45 / -0x80000000) / 2 - 65);
        v46 = GetSystemMetrics(g130);
        g131 = g27;
        X = (v46 - v46 / -0x80000000) / 2 - 150;
        lpWindowName = (char *)(int32_t)*v4;
        v53 = lpWindowName;
        v16 = *(char *)g130;
        v39 = *v52;
        v13 = *(char *)130;
        windowHandle = CreateWindowExA((int32_t)v16, "InputRequester", lpWindowName, 0x10c00000, X, (int32_t)v39, 300, (int32_t)v13, (int32_t *)(char *)v44, (int32_t *)v42, (int32_t *)(char *)g35, (int32_t *)v51);
        v60 = g130;
        v50 = (char *)windowHandle;
        if ((int32_t)windowHandle == v60) {
            v63 = "InputRequester";
            // 0x405379
            if (v60 != 0) {
                // 0x405386
                function_40506b();
                function_40506b();
                function_40506b();
                g131 = (int32_t)v63;
                g130 = (int32_t)*v53;
                return;
            }
            // 0x40537e
            function_40a880();
            // branch -> 0x405386
            // 0x405386
            function_40506b();
            function_40506b();
            function_40506b();
            g131 = (int32_t)v49;
            g130 = (int32_t)*v53;
            return;
        }
        // 0x4051bc
        v20 = *(char *)-21;
        SetWindowLongA(windowHandle, (int32_t)v20, (int32_t)*v51);
        v56 = g130;
        lpWindowName2 = (char *)(int32_t)*v6;
        v17 = *(char *)v56;
        v40 = *(char *)10;
        v14 = *(char *)22;
        hMenu = (int32_t *)v56;
        windowHandle2 = CreateWindowExA((int32_t)v17, "STATIC", lpWindowName2, 0x5000000b, 10, (int32_t)v40, 280, (int32_t)v14, windowHandle, hMenu, (int32_t *)g35, hMenu);
        g44 = (int32_t)windowHandle2;
        v21 = *(char *)48;
        v27 = *(char *)g50;
        v32 = *(char *)1;
        SendMessageA(windowHandle2, (int32_t)v21, (int32_t)v27, (int32_t)v32);
        v57 = g130;
        v54 = (int32_t)*v50;
        v18 = *(char *)512;
        v41 = *(char *)32;
        v15 = *(char *)21;
        windowHandle3 = CreateWindowExA((int32_t)v18, "EDIT", (char *)v57, 0x50010080, 10, (int32_t)v41, 275, (int32_t)v15, (int32_t *)v54, (int32_t *)10, (int32_t *)g35, (int32_t *)v57);
        g45 = (int32_t)windowHandle3;
        v22 = *(char *)48;
        v28 = *(char *)g50;
        v33 = *(char *)1;
        SendMessageA(windowHandle3, (int32_t)v22, (int32_t)v28, (int32_t)v33);
        SetFocus();
        v65 = *v8;
        v66 = g130;
        v58 = v66;
        if (v65 != (char)v66) {
            // 0x405251
            v23 = *(char *)12;
            v29 = *(char *)v66;
            v34 = *(char *)(int32_t)v65;
            SendMessageA(NULL, (int32_t)v23, (int32_t)v29, (int32_t)v34);
            len = (char *)strlen((char *)(int32_t)*v8);
            len2 = (char *)strlen((char *)(int32_t)*v8);
            v24 = *(char *)177;
            v30 = *len2;
            v35 = *len;
            SendMessageA(NULL, (int32_t)v24, (int32_t)v30, (int32_t)v35);
            v58 = g130;
            // branch -> 0x405280
        }
        // 0x405280
        v55 = (int32_t)*v50;
        v53 = (char *)0x50010001;
        v19 = *(char *)v58;
        v36 = *(char *)0x50010001;
        v12 = *(char *)80;
        windowHandle4 = CreateWindowExA((int32_t)v19, "BUTTON", "OK", (int32_t)v36, 110, 67, (int32_t)v12, 25, (int32_t *)v55, (int32_t *)1000, (int32_t *)g35, (int32_t *)v58);
        g49 = (int32_t)windowHandle4;
        v25 = *(char *)48;
        v31 = *(char *)g50;
        v37 = *(char *)1;
        SendMessageA(windowHandle4, (int32_t)v25, (int32_t)v31, (int32_t)v37);
        CreateAcceleratorTableA();
        SetForegroundWindow((int32_t *)(int32_t)*v50);
        BringWindowToTop();
        v61 = g47;
        v64 = g130;
        v62 = v64;
        if (v61 == v64) {
            v59 = v61;
            while (true) {
                // 0x4052fd
                lpMsg = v1;
                v38 = *(char *)v59;
                v47 = GetMessageA(lpMsg, (int32_t *)v59, (int32_t)lpMsg, (int32_t)v38);
                if (v47 != false) {
                    goto lab_0x43e2880;
                }
                // 0x40533c
                // branch -> 0x40533c
            }
        }
        // 0x40533c
        v67 = v62;
        if (g131 != v62) {
            // 0x405340
            DestroyAcceleratorTable();
            v67 = g130;
            // branch -> 0x405347
        }
        // 0x405347
        if (v67 == 0) {
            // 0x40537e
            function_40a880();
            // branch -> 0x405386
            // 0x405386
            function_40506b();
            function_40506b();
            function_40506b();
            g131 = (int32_t)v49;
            g130 = (int32_t)*v53;
            return;
        }
        // 0x40534c
        len3 = (char *)strlen(NULL);
        v53 = len3;
        v48 = function_40a7c0((int32_t)*len3, (int32_t)v49);
        strcpy((char *)v48, NULL);
        v26 = *(char *)g130;
        HeapFree((int32_t)*(char *)g34, (int32_t)v26, NULL);
        // branch -> 0x405379
        // 0x405379
        if (g130 != 0) {
            // 0x405386
            function_40506b();
            function_40506b();
            function_40506b();
            g131 = (int32_t)NULL;
            g130 = (int32_t)*v53;
            return;
        }
        // 0x40537e
        function_40a880();
        // branch -> 0x405386
        // 0x405386
        function_40506b();
        function_40506b();
        function_40506b();
        g131 = (int32_t)v49;
        g130 = (int32_t)*v53;
        return;
    }
    // 0x40513a
    if (IsWindowEnabled((int32_t *)v10) != false) {
        // 0x405145
        EnableWindow((int32_t)*(char *)g46, *(char *)g130 % 2 != 0);
        v11 = &g131;
        // branch -> 0x405160
    } else {
        v11 = &g130;
    }
    // 0x405160
    g48 = *v11;
    v42 = (char *)g130;
    v51 = v42;
    v44 = function_4057e7((int32_t)*v42);
    v43 = (char *)g131;
    g131 = g26;
    v45 = GetSystemMetrics((int32_t)*v43);
    v52 = (char *)((v45 - v45 / -0x80000000) / 2 - 65);
    v46 = GetSystemMetrics(g130);
    g131 = g27;
    X = (v46 - v46 / -0x80000000) / 2 - 150;
    lpWindowName = (char *)(int32_t)*v4;
    v53 = lpWindowName;
    v16 = *(char *)g130;
    v39 = *v52;
    v13 = *(char *)130;
    windowHandle = CreateWindowExA((int32_t)v16, "InputRequester", lpWindowName, 0x10c00000, X, (int32_t)v39, 300, (int32_t)v13, (int32_t *)(char *)v44, (int32_t *)v42, (int32_t *)(char *)g35, (int32_t *)v51);
    v60 = g130;
    v50 = (char *)windowHandle;
    if ((int32_t)windowHandle == v60) {
        v63 = "InputRequester";
        // 0x405379
        if (v60 != 0) {
            // 0x405386
            function_40506b();
            function_40506b();
            function_40506b();
            g131 = (int32_t)v63;
            g130 = (int32_t)*v53;
            return;
        }
    } else {
        // 0x4051bc
        v20 = *(char *)-21;
        SetWindowLongA(windowHandle, (int32_t)v20, (int32_t)*v51);
        v56 = g130;
        lpWindowName2 = (char *)(int32_t)*v6;
        v17 = *(char *)v56;
        v40 = *(char *)10;
        v14 = *(char *)22;
        hMenu = (int32_t *)v56;
        windowHandle2 = CreateWindowExA((int32_t)v17, "STATIC", lpWindowName2, 0x5000000b, 10, (int32_t)v40, 280, (int32_t)v14, windowHandle, hMenu, (int32_t *)g35, hMenu);
        g44 = (int32_t)windowHandle2;
        v21 = *(char *)48;
        v27 = *(char *)g50;
        v32 = *(char *)1;
        SendMessageA(windowHandle2, (int32_t)v21, (int32_t)v27, (int32_t)v32);
        v57 = g130;
        v54 = (int32_t)*v50;
        v18 = *(char *)512;
        v41 = *(char *)32;
        v15 = *(char *)21;
        windowHandle3 = CreateWindowExA((int32_t)v18, "EDIT", (char *)v57, 0x50010080, 10, (int32_t)v41, 275, (int32_t)v15, (int32_t *)v54, (int32_t *)10, (int32_t *)g35, (int32_t *)v57);
        g45 = (int32_t)windowHandle3;
        v22 = *(char *)48;
        v28 = *(char *)g50;
        v33 = *(char *)1;
        SendMessageA(windowHandle3, (int32_t)v22, (int32_t)v28, (int32_t)v33);
        SetFocus();
        v65 = *v8;
        v66 = g130;
        v58 = v66;
        if (v65 != (char)v66) {
            // 0x405251
            v23 = *(char *)12;
            v29 = *(char *)v66;
            v34 = *(char *)(int32_t)v65;
            SendMessageA(NULL, (int32_t)v23, (int32_t)v29, (int32_t)v34);
            len = (char *)strlen((char *)(int32_t)*v8);
            len2 = (char *)strlen((char *)(int32_t)*v8);
            v24 = *(char *)177;
            v30 = *len2;
            v35 = *len;
            SendMessageA(NULL, (int32_t)v24, (int32_t)v30, (int32_t)v35);
            v58 = g130;
            // branch -> 0x405280
        }
        // 0x405280
        v55 = (int32_t)*v50;
        v53 = (char *)0x50010001;
        v19 = *(char *)v58;
        v36 = *(char *)0x50010001;
        v12 = *(char *)80;
        windowHandle4 = CreateWindowExA((int32_t)v19, "BUTTON", "OK", (int32_t)v36, 110, 67, (int32_t)v12, 25, (int32_t *)v55, (int32_t *)1000, (int32_t *)g35, (int32_t *)v58);
        g49 = (int32_t)windowHandle4;
        v25 = *(char *)48;
        v31 = *(char *)g50;
        v37 = *(char *)1;
        SendMessageA(windowHandle4, (int32_t)v25, (int32_t)v31, (int32_t)v37);
        CreateAcceleratorTableA();
        SetForegroundWindow((int32_t *)(int32_t)*v50);
        BringWindowToTop();
        v61 = g47;
        v64 = g130;
        v62 = v64;
        if (v61 == v64) {
            v59 = v61;
            while (true) {
                // 0x4052fd
                lpMsg = v1;
                v38 = *(char *)v59;
                v47 = GetMessageA(lpMsg, (int32_t *)v59, (int32_t)lpMsg, (int32_t)v38);
                if (v47 == false) {
                    // 0x40533c
                    v62 = g130;
                    // branch -> 0x40533c
                } else {
                  lab_0x43e2880:
                    // 0x40530e
                    TranslateAcceleratorA();
                    if (X == 0) {
                        // 0x405320
                        TranslateMessage((int32_t *)v1);
                        DispatchMessageA((int32_t *)v1);
                        // branch -> 0x405334
                    }
                    int32_t v68 = g130; // 0x405334
                    if (g47 != v68) {
                        v62 = v68;
                        // break -> 0x40533c
                        break;
                    }
                    v59 = g47;
                    // continue -> 0x4052fd
                    continue;
                }
                // 0x40533c
                v67 = v62;
                if (g131 != v62) {
                    // 0x405340
                    DestroyAcceleratorTable();
                    v67 = g130;
                    // branch -> 0x405347
                }
                // 0x405347
                if (v67 != 0) {
                    // 0x40534c
                    len3 = (char *)strlen(NULL);
                    v53 = len3;
                    v48 = function_40a7c0((int32_t)*len3, (int32_t)v49);
                    strcpy((char *)v48, NULL);
                    v26 = *(char *)g130;
                    HeapFree((int32_t)*(char *)g34, (int32_t)v26, NULL);
                    // branch -> 0x405379
                    // 0x405379
                    if (g130 != 0) {
                        // 0x405386
                        function_40506b();
                        function_40506b();
                        function_40506b();
                        g131 = (int32_t)NULL;
                        g130 = (int32_t)*v53;
                        return;
                    }
                }
                // 0x40537e
                function_40a880();
                // branch -> 0x405386
                // 0x405386
                function_40506b();
                function_40506b();
                function_40506b();
                g131 = (int32_t)v49;
                g130 = (int32_t)*v53;
                return;
            }
            // 0x40533c
            v67 = v62;
            if (g131 != v62) {
                // 0x405340
                DestroyAcceleratorTable();
                v67 = g130;
                // branch -> 0x405347
            }
            // 0x405347
            if (v67 != 0) {
                // 0x40534c
                len3 = (char *)strlen(NULL);
                v53 = len3;
                v48 = function_40a7c0((int32_t)*len3, (int32_t)v49);
                strcpy((char *)v48, NULL);
                v26 = *(char *)g130;
                HeapFree((int32_t)*(char *)g34, (int32_t)v26, NULL);
                // branch -> 0x405379
                // 0x405379
                if (g130 != 0) {
                    // 0x405386
                    function_40506b();
                    function_40506b();
                    function_40506b();
                    g131 = (int32_t)NULL;
                    g130 = (int32_t)*v53;
                    return;
                }
            }
            // 0x40537e
            function_40a880();
            // branch -> 0x405386
            // 0x405386
            function_40506b();
            function_40506b();
            function_40506b();
            g131 = (int32_t)v49;
            g130 = (int32_t)*v53;
            return;
        }
        // 0x40533c
        v67 = v62;
        if (g131 != v62) {
            // 0x405340
            DestroyAcceleratorTable();
            v67 = g130;
            // branch -> 0x405347
        }
        // 0x405347
        if (v67 != 0) {
            // 0x40534c
            len3 = (char *)strlen(NULL);
            v53 = len3;
            v48 = function_40a7c0((int32_t)*len3, (int32_t)v49);
            strcpy((char *)v48, NULL);
            v26 = *(char *)g130;
            HeapFree((int32_t)*(char *)g34, (int32_t)v26, NULL);
            // branch -> 0x405379
            // 0x405379
            if (g130 != 0) {
                // 0x405386
                function_40506b();
                function_40506b();
                function_40506b();
                g131 = (int32_t)NULL;
                g130 = (int32_t)*v53;
                return;
            }
        }
    }
    // 0x40537e
    function_40a880();
    // branch -> 0x405386
    // 0x405386
    function_40506b();
    function_40506b();
    function_40506b();
    g131 = (int32_t)v49;
    g130 = (int32_t)*v53;
}

// Address range: 0x4053a8 - 0x405675
int32_t function_4053a8(int32_t a1, char * str3, char * a3, int32_t a4, int32_t a5, char * a6, char * a7) {
    int32_t v1 = g52; // 0x4053ae
    g130 = 0;
    g51 = 0;
    int32_t dwFlags = 0; // 0x4053eb
    if (v1 != 0 && a5 == 0) {
        // 0x4053cd
        HeapFree((int32_t)*(char *)g34, 0, (char *)v1);
        int32_t v2 = g130; // 0x4053db
        g52 = v2;
        dwFlags = v2;
        // branch -> 0x4053e1
    }
    int32_t v3 = g53; // 0x4053e1
    if (v3 != dwFlags) {
        // 0x4053ea
        HeapFree((int32_t)*(char *)g34, dwFlags, (char *)v3);
        g53 = g130;
        // branch -> 0x4053fe
    }
    // 0x4053fe
    g131 = g12;
    int32_t v4;
    int32_t v5; // 0x405434
    if (*a6 == 1) {
        // 0x405426
        v4 = 260;
        v5 = HeapAlloc((int32_t)*(char *)g34, 8, 260);
        g53 = v5;
        // branch -> 0x40543b
    } else {
        // 0x40540f
        v4 = 0x7d000;
        int32_t v6 = HeapAlloc((int32_t)*(char *)g34, 8, 0x7d000); // 0x40541d
        g52 = v6;
        v5 = v6;
        // branch -> 0x40543b
    }
    // 0x40543b
    g130 = v5;
    char * v7; // 0x40566b_0
    int32_t v8; // 0x4055b3
    int32_t result; // 0x40566c
    if (v5 == 0) {
        // 0x4055ab
        v8 = function_40a7c0(260, (int32_t)*(char *)(int32_t)*a7);
        g131 = 0;
        *(char *)v8 = 0;
        v7 = (char *)260;
        result = function_40a860((int32_t)*v7);
        g131 = (int32_t)*v7;
        g130 = 260;
        return result;
    }
    char * str = a3 == NULL ? (char *)0x40c02d : a3; // 0x405474_05
    int32_t len = strlen(str); // 0x405455
    int32_t v9 = HeapAlloc((int32_t)*(char *)g34, 8, len + 3); // 0x405467
    char * str2 = (char *)v9; // 0x40546b_0
    if (v9 == 0) {
        // 0x4055ab
        v8 = function_40a7c0(260, (int32_t)*(char *)(int32_t)*a7);
        g131 = 0;
        *(char *)v8 = 0;
        v7 = (char *)260;
        result = function_40a860((int32_t)*v7);
        g131 = (int32_t)*v7;
        g130 = 260;
        return result;
    }
    // 0x405474
    strcpy(str2, str);
    int32_t v10 = (int32_t)*str2; // 0x40547d_0
    g124 = v10;
    g125 = (int32_t)str;
    char v11 = str2[v10]; // 0x40548d13
    char * v12; // 0x40552a_33
    int32_t v13; // 0x4054c2
    char * str4; // 0x4054b9_0
    char * v14; // bp+034
    char * str5; // 0x4054dd_0
    char * v15; // 0x405502_0
    int32_t len2; // 0x40549b
    int32_t v16; // 0x4054ac
    int32_t len3; // 0x4054ba
    int32_t * v17;
    int32_t v18; // 0x405502
    int32_t v19; // 0x40559c
    uint32_t v20; // 0x4054c2
    int32_t v21; // 0x4054ca
    if (v11 == 0) {
        // 0x405492
        if (str3 == NULL) {
            // 0x405510
            g131 = 0;
            v12 = (char *)0x405469;
            // branch -> 0x405513
        } else {
            // 0x405498
            len2 = strlen(str3);
            g125 = (int32_t)str3;
            v16 = HeapAlloc((int32_t)*(char *)g34, 8, len2 + 2);
            g131 = v16;
            strcpy((char *)v16, str3);
            str4 = (char *)g131;
            len3 = strlen(str4);
            v20 = g131;
            v13 = v20 + len3;
            v14 = (char *)v13;
            if (*v14 == 92) {
                // 0x4054d0
                if (v13 > v20) {
                    // 0x4054d4
                    g125 = v4 - 1;
                    *v14 = 0;
                    str5 = (char *)g130;
                    strncpy(str5, (char *)(v13 + 1), g125);
                    *(char *)(g130 - 1 + v4) = 0;
                    // branch -> 0x4054ff
                    // 0x4054ff
                    v18 = g130;
                    if (function_409778(v18, (int32_t)*str5) == 0) {
                        // 0x40550c
                        *(char *)g130 = 0;
                        // branch -> 0x405513
                    }
                    // 0x405513
                    memset(v17, 0, 76);
                    function_4057e7((int32_t)(char *)v18);
                    function_40573e(1);
                    if (a5 == 1) {
                        // 0x405573
                        GetSaveFileNameA();
                        // branch -> 0x405581
                    } else {
                        // 0x40557b
                        GetOpenFileNameA();
                        // branch -> 0x405581
                    }
                    // 0x405581
                    function_40573e(76);
                    HeapFree((int32_t)*(char *)g34, 0, (char *)g127);
                    v19 = g131;
                    if (v19 != 0) {
                        // 0x4055a0
                        HeapFree((int32_t)*(char *)g34, 0, (char *)v19);
                        // branch -> 0x4055ab
                    }
                    // 0x4055ab
                    v8 = function_40a7c0(260, (int32_t)*(char *)(int32_t)*a7);
                    g131 = 0;
                    *(char *)v8 = 0;
                    v7 = (char *)260;
                    result = function_40a860((int32_t)*v7);
                    g131 = (int32_t)*v7;
                    g130 = 260;
                    return result;
                }
            } else {
                while (true) {
                    // 0x4054c6
                    v21 = v13 - 1;
                    if (v13 > v20) {
                        goto lab_0x4481a20;
                    }
                    // 0x4054ea
                    strncpy((char *)g130, str3, v4 - 1);
                    *(char *)(g130 - 1 + v4) = 0;
                    *(char *)g131 = 0;
                    // branch -> 0x4054ff
                    // 0x4054ff
                    v18 = g130;
                    if (function_409778(v18, (int32_t)*str4) == 0) {
                        // 0x40550c
                        *(char *)g130 = 0;
                        // branch -> 0x405513
                    }
                    // 0x405513
                    memset(v17, 0, 76);
                    function_4057e7((int32_t)(char *)v18);
                    function_40573e(1);
                    if (a5 == 1) {
                        // 0x405573
                        GetSaveFileNameA();
                        // branch -> 0x405581
                    } else {
                        // 0x40557b
                        GetOpenFileNameA();
                        // branch -> 0x405581
                    }
                    // 0x405581
                    function_40573e(76);
                    HeapFree((int32_t)*(char *)g34, 0, (char *)g127);
                    v19 = g131;
                    if (v19 != 0) {
                        // 0x4055a0
                        HeapFree((int32_t)*(char *)g34, 0, (char *)v19);
                        // branch -> 0x4055ab
                    }
                    // 0x4055ab
                    v8 = function_40a7c0(260, (int32_t)*(char *)(int32_t)*a7);
                    g131 = 0;
                    *(char *)v8 = 0;
                    v7 = (char *)260;
                    result = function_40a860((int32_t)*v7);
                    g131 = (int32_t)*v7;
                    g130 = 260;
                    return result;
                }
            }
            // 0x4054ea
            strncpy((char *)g130, str3, v4 - 1);
            *(char *)(g130 - 1 + v4) = 0;
            *(char *)g131 = 0;
            // branch -> 0x4054ff
            // 0x4054ff
            v18 = g130;
            v15 = (char *)v18;
            if (function_409778(v18, (int32_t)*str4) == 0) {
                // 0x40550c
                *(char *)g130 = 0;
                v12 = v15;
                // branch -> 0x405513
            } else {
                v12 = v15;
            }
        }
        // 0x405513
        memset(v17, 0, 76);
        function_4057e7((int32_t)v12);
        function_40573e(1);
        if (a5 == 1) {
            // 0x405573
            GetSaveFileNameA();
            // branch -> 0x405581
        } else {
            // 0x40557b
            GetOpenFileNameA();
            // branch -> 0x405581
        }
        // 0x405581
        function_40573e(76);
        HeapFree((int32_t)*(char *)g34, 0, (char *)g127);
        v19 = g131;
        if (v19 != 0) {
            // 0x4055a0
            HeapFree((int32_t)*(char *)g34, 0, (char *)v19);
            // branch -> 0x4055ab
        }
        // 0x4055ab
        v8 = function_40a7c0(260, (int32_t)*(char *)(int32_t)*a7);
        g131 = 0;
        *(char *)v8 = 0;
        v7 = (char *)260;
        result = function_40a860((int32_t)*v7);
        g131 = (int32_t)*v7;
        g130 = 260;
        return result;
    }
    char * v22 = str2;
    while (true) {
        char * v23 = v22;
        int32_t v24 = v10; // 0x40548c
        if (v11 == 124) {
            // 0x405489
            v22[v10] = 0;
            v23 = str2;
            v24 = g124;
            // branch -> 0x40548c
        }
        int32_t v25 = v24 + 1; // 0x40548c
        g124 = v25;
        char v26 = v23[v25]; // 0x40548d
        if (v26 == 0) {
            // break -> 0x405492
            break;
        }
        v11 = v26;
        v10 = v25;
        v22 = v23;
        // continue -> 0x405484
    }
    // 0x405492
    if (str3 == NULL) {
        // 0x405510
        g131 = 0;
        v12 = (char *)0x405469;
        // branch -> 0x405513
    } else {
        // 0x405498
        len2 = strlen(str3);
        g125 = (int32_t)str3;
        v16 = HeapAlloc((int32_t)*(char *)g34, 8, len2 + 2);
        g131 = v16;
        strcpy((char *)v16, str3);
        str4 = (char *)g131;
        len3 = strlen(str4);
        v20 = g131;
        v13 = v20 + len3;
        v14 = (char *)v13;
        if (*v14 == 92) {
            // 0x4054d0
            if (v13 > v20) {
                // 0x4054d4
                g125 = v4 - 1;
                *v14 = 0;
                str5 = (char *)g130;
                strncpy(str5, (char *)(v13 + 1), g125);
                *(char *)(g130 - 1 + v4) = 0;
                // branch -> 0x4054ff
                // 0x4054ff
                v18 = g130;
                if (function_409778(v18, (int32_t)*str5) == 0) {
                    // 0x40550c
                    *(char *)g130 = 0;
                    // branch -> 0x405513
                }
                // 0x405513
                memset(v17, 0, 76);
                function_4057e7((int32_t)(char *)v18);
                function_40573e(1);
                if (a5 == 1) {
                    // 0x405573
                    GetSaveFileNameA();
                    // branch -> 0x405581
                } else {
                    // 0x40557b
                    GetOpenFileNameA();
                    // branch -> 0x405581
                }
                // 0x405581
                function_40573e(76);
                HeapFree((int32_t)*(char *)g34, 0, (char *)g127);
                v19 = g131;
                if (v19 != 0) {
                    // 0x4055a0
                    HeapFree((int32_t)*(char *)g34, 0, (char *)v19);
                    // branch -> 0x4055ab
                }
                // 0x4055ab
                v8 = function_40a7c0(260, (int32_t)*(char *)(int32_t)*a7);
                g131 = 0;
                *(char *)v8 = 0;
                v7 = (char *)260;
                result = function_40a860((int32_t)*v7);
                g131 = (int32_t)*v7;
                g130 = 260;
                return result;
            }
        } else {
            bool v27 = v13 > v20; // 0x4054d239
            int32_t v28 = v13; // 0x4054ca38
            char * v29; // 0x4054cb_0
            int32_t v30;
            while (true) {
                // 0x4054c6
                v21 = v28 - 1;
                if (v27) {
                  lab_0x4481a20:
                    // 0x4054cb
                    v30 = v21;
                    v29 = (char *)v21;
                    if (*v29 == 92) {
                        // break -> 0x4054d0
                        break;
                    }
                    v27 = v21 > v20;
                    v28 = v21;
                    // continue -> 0x4054c6
                    continue;
                }
            }
            // 0x4054d0
            if (v21 > v20) {
                // 0x4054d4
                g125 = v4 - 1;
                *v29 = 0;
                str5 = (char *)g130;
                strncpy(str5, (char *)(v30 + 1), g125);
                *(char *)(g130 - 1 + v4) = 0;
                // branch -> 0x4054ff
                // 0x4054ff
                v18 = g130;
                if (function_409778(v18, (int32_t)*str5) == 0) {
                    // 0x40550c
                    *(char *)g130 = 0;
                    // branch -> 0x405513
                }
                // 0x405513
                memset(v17, 0, 76);
                function_4057e7((int32_t)(char *)v18);
                function_40573e(1);
                if (a5 == 1) {
                    // 0x405573
                    GetSaveFileNameA();
                    // branch -> 0x405581
                } else {
                    // 0x40557b
                    GetOpenFileNameA();
                    // branch -> 0x405581
                }
                // 0x405581
                function_40573e(76);
                HeapFree((int32_t)*(char *)g34, 0, (char *)g127);
                v19 = g131;
                if (v19 != 0) {
                    // 0x4055a0
                    HeapFree((int32_t)*(char *)g34, 0, (char *)v19);
                    // branch -> 0x4055ab
                }
                // 0x4055ab
                v8 = function_40a7c0(260, (int32_t)*(char *)(int32_t)*a7);
                g131 = 0;
                *(char *)v8 = 0;
                v7 = (char *)260;
                result = function_40a860((int32_t)*v7);
                g131 = (int32_t)*v7;
                g130 = 260;
                return result;
            }
        }
        // 0x4054ea
        strncpy((char *)g130, str3, v4 - 1);
        *(char *)(g130 - 1 + v4) = 0;
        *(char *)g131 = 0;
        // branch -> 0x4054ff
        // 0x4054ff
        v18 = g130;
        v15 = (char *)v18;
        if (function_409778(v18, (int32_t)*str4) == 0) {
            // 0x40550c
            *(char *)g130 = 0;
            v12 = v15;
            // branch -> 0x405513
        } else {
            v12 = v15;
        }
    }
    // 0x405513
    memset(v17, 0, 76);
    function_4057e7((int32_t)v12);
    function_40573e(1);
    if (a5 == 1) {
        // 0x405573
        GetSaveFileNameA();
        // branch -> 0x405581
    } else {
        // 0x40557b
        GetOpenFileNameA();
        // branch -> 0x405581
    }
    // 0x405581
    function_40573e(76);
    HeapFree((int32_t)*(char *)g34, 0, (char *)g127);
    v19 = g131;
    if (v19 != 0) {
        // 0x4055a0
        HeapFree((int32_t)*(char *)g34, 0, (char *)v19);
        // branch -> 0x4055ab
    }
    // 0x4055ab
    v8 = function_40a7c0(260, (int32_t)*(char *)(int32_t)*a7);
    g131 = 0;
    *(char *)v8 = 0;
    v7 = (char *)260;
    result = function_40a860((int32_t)*v7);
    g131 = (int32_t)*v7;
    g130 = 260;
    return result;
}

// Address range: 0x405676 - 0x405695
void function_405676(int32_t a1, char * a2, char * a3, int32_t a4, char * a5) {
    int32_t v1 = g129; // bp-4
    char * v2 = (char *)(int32_t)*a5; // 0x405679_0
    function_4053a8((int32_t)&a1, a2, a3, a4, 0, NULL, v2);
    g129 = &v1;
}

// Address range: 0x405698 - 0x4056b7
int32_t function_405698(int32_t a1, char * a2, char * a3, int32_t a4, char * a5) {
    // 0x405698
    function_4053a8(a1, a2, a3, a4, 1, NULL, (char *)(int32_t)*a5);
    return g124;
}

// Address range: 0x4056ba - 0x40573b
void function_4056ba(void) {
    // 0x4056ba
    int32_t * hWnd;
    g131 = (int32_t)hWnd;
    GetWindowThreadProcessId(hWnd, NULL);
    g130 = g124;
    if (g130 != GetCurrentThreadId()) {
        // 0x405735
        g131 = (int32_t)hWnd;
        g130 = (int32_t)(int32_t *)0x4056d4;
        return;
    }
    int32_t * hWnd2 = (int32_t *)g131; // 0x4056d8_0
    if (IsWindowVisible(hWnd2) == false) {
        // 0x405735
        g131 = (int32_t)(int32_t *)0x4056df;
        g130 = (int32_t)hWnd2;
        return;
    }
    int32_t v1 = function_40a31c((struct struct_18 *)&g54, 20); // 0x4056ea
    struct struct_7 * v2 = (struct struct_7 *)v1; // 0x4056ea_5
    g130 = v1;
    v2->e1 = g131;
    int32_t threadId = GetCurrentThreadId(); // 0x4056f6
    int32_t * v3 = (int32_t *)g131; // 0x4056fa_0
    *(int32_t *)g130 = threadId;
    v2->e2 = 0;
    GetWindowLongA();
    if (threadId != 8) {
        // 0x40570f
        v2->e2 = 1;
        // branch -> 0x405713
    }
    int32_t v4 = g131; // 0x405719
    if (v4 == (int32_t)GetForegroundWindow()) {
        // 0x405735
        g131 = (int32_t)v3;
        g130 = (int32_t)(int32_t *)-20;
        return;
    }
    // 0x40571d
    if (IsWindowEnabled((int32_t *)v4) != false) {
        // 0x405728
        v2->e2 = 1;
        EnableWindow(g131, false);
        // branch -> 0x405735
    }
    // 0x405735
    g131 = (int32_t)v3;
    g130 = (int32_t)(int32_t *)-20;
}

// Address range: 0x40573e - 0x4057e4
int32_t function_40573e(int32_t a1) {
    int32_t X = 0;
    int32_t v1 = g131; // 0x405746
    int32_t result; // 0x4057e4_12
    if (a1 != 0) {
        // 0x405749
        EnumWindows();
        int32_t v2 = g54; // 0x405758
        g130 = v2;
        if (v2 == X) {
            // 0x4057e1
            g131 = (int32_t)function_4056ba;
            g130 = a1;
            g127 = v1;
            return result;
        }
        int32_t result2; // 0x4057e4_13
        while (true) {
            // 0x405762
            g131 = *(int32_t *)v2;
            int32_t threadId = GetCurrentThreadId(); // 0x405764
            int32_t v3 = g130; // 0x40576a
            result2 = threadId;
            if (*(int32_t *)(v3 + 8) == threadId) {
                // 0x40576f
                if ((int32_t)*(char *)(v3 + 16) != X) {
                    int32_t v4 = *(int32_t *)(v3 + 12); // 0x40577c
                    int32_t v5 = SetWindowPos((int32_t *)v4, (int32_t *)-2, X, X, X, X, 3); // 0x40577f_12
                    result2 = v5;
                    // branch -> 0x405785
                } else {
                    result2 = threadId;
                }
            }
            int32_t v6 = g131; // 0x405785
            g130 = v6;
            if (v6 == X) {
                // break -> 0x4057e1
                break;
            }
            v2 = v6;
            // continue -> 0x405762
        }
        // 0x4057e1
        g131 = (int32_t)function_4056ba;
        g130 = a1;
        g127 = v1;
        return result2;
    }
    int32_t v7 = g54; // 0x40578d
    g130 = v7;
    if (v7 != 0) {
        // branch -> 0x405798
        while (true) {
            // 0x405798
            g131 = v7 + 8;
            int32_t threadId2 = GetCurrentThreadId(); // 0x40579d
            result = threadId2;
            if (*(int32_t *)g131 == threadId2) {
                int32_t v8 = g130; // 0x4057a7
                int32_t v9 = (int32_t)*(char *)(v8 + 17); // 0x4057a7
                int32_t X2 = v9; // 0x4057be
                int32_t v10 = v8; // 0x4057c4
                if (v9 != X) {
                    // 0x4057ac
                    EnableWindow(*(int32_t *)(v8 + 12), true);
                    X2 = X;
                    v10 = g130;
                    // branch -> 0x4057b7
                }
                // 0x4057b7
                if ((int32_t)*(char *)(v10 + 16) != X2) {
                    int32_t v11 = *(int32_t *)(v10 + 12); // 0x4057c4
                    SetWindowPos((int32_t *)v11, (int32_t *)-1, X2, X2, X2, X2, 3);
                    // branch -> 0x4057cd
                }
                int32_t v12 = g131; // 0x4057cd
                int32_t v13 = function_40a2dc(&g54, v12); // 0x4057d3_5
                g125 = v12;
                result = v13;
                // branch -> 0x4057da
            }
            int32_t v14 = *(int32_t *)v7; // 0x4057da
            g130 = v14;
            if (v14 == X) {
                // break -> 0x4057e0
                break;
            }
            v7 = v14;
            // continue -> 0x405798
        }
        // 0x4057e0
        // branch -> 0x4057e1
    }
    // 0x4057e1
    void (*v15)();
    g131 = (int32_t)v15;
    int32_t v16;
    g130 = v16;
    g127 = v1;
    return result;
}

// Address range: 0x4057e7 - 0x405814
int32_t function_4057e7(int32_t a1) {
    int32_t v1 = g130; // 0x4057eb
    GetForegroundWindow();
    g130 = g124;
    if (g124 == 0) {
        // 0x405810
        g130 = v1;
        return 0;
    }
    // 0x4057f8
    GetWindowThreadProcessId((int32_t *)g124, (int32_t *)g125);
    int32_t result; // 0x405810
    if (g125 == GetCurrentProcessId()) {
        // 0x4057f8
        result = g130;
        // branch -> 0x405810
    } else {
        // 0x40580e
        g130 = 0;
        result = 0;
        // branch -> 0x405810
    }
    // 0x405810
    g130 = v1;
    return result;
}

// Address range: 0x405815 - 0x40583f
void function_405815(void) {
    // 0x405815
    int32_t * v1;
    function_409bf5(g103, (int32_t)v1);
    int32_t v2 = g124; // 0x405824
    if (v2 != 0) {
        // 0x405828
        CloseHandle(*(int32_t *)v2);
        function_409c5b(g103);
        // branch -> 0x40583f
    }
}

// Address range: 0x405842 - 0x405870
int32_t function_405842(void) {
    // 0x405842
    function_409ce6(16, 0);
    g104 = g124;
    int32_t result = function_409c96(4, 4, (int32_t)function_405815); // 0x40585b
    g103 = result;
    InitializeCriticalSection(g105);
    return result;
}

// Address range: 0x405871 - 0x4058a7
int32_t function_405871(char * a1, char * a2, int32_t a3) {
    int32_t * lpTargetHandle = (int32_t *)g125; // 0x405874_0
    int32_t v1 = g130; // bp-12
    g130 = g14;
    GetCurrentProcess();
    int32_t v2 = *(int32_t *)g131; // 0x405889
    bool v3 = DuplicateHandle((int32_t *)GetCurrentProcess(), (int32_t *)v2, (int32_t *)g124, lpTargetHandle, 0, false, 2); // 0x40588e
    g130 = &v1;
    if (v3 != false) {
        int32_t hObject = *(int32_t *)g131; // 0x405899
        v1 = hObject;
        CloseHandle(hObject);
        *(int32_t *)g131 = g125;
        // branch -> 0x4058a6
    } else {
        lpTargetHandle = (int32_t *)(int32_t)v3;
    }
    // 0x4058a6
    return (int32_t)lpTargetHandle;
}

// Address range: 0x4058a8 - 0x405cb8
int32_t function_4058a8(int32_t a1, char * a2, char * a3, unsigned char a4, char * a5) {
    int32_t v1 = g129; // bp-4
    int32_t dwFlags = 0;
    g130 = 68;
    g131 = 1;
    int32_t v2 = 0; // bp-32
    int32_t v3 = 0; // bp-20
    int32_t * v4;
    memset(v4, 0, 68);
    int32_t v5 = a4; // 0x4058f5
    int32_t v6 = g125 & -256 | v5; // 0x4058f5
    g125 = v6;
    int32_t hHandle = g130; // 0x4058fe
    int32_t * lpStartupInfo = (int32_t *)hHandle; // 0x4058fe_0
    int32_t v7 = g131; // 0x405901
    int32_t * v8 = v6 == 2 ? (int32_t *)32 : (int32_t *)40;
    g130 = 256;
    int32_t v9;
    int32_t * lpCriticalSection; // 0x405c5a
    char v10;
    int32_t hObject;
    int32_t hHandle2; // 0x405c49
    int32_t * v11; // bp+312
    char * v12; // bp+017
    char * v13; // bp+019
    char * v14; // 0x01940
    char * v15; // bp+020
    char * v16; // bp+021
    char * str3; // 0x405a63_0
    char * str2; // 0x405a66_0
    int32_t * lpProcessAttributes; // 0x405ad7_0
    struct struct_8 * v17; // 0x405b3d_6
    int32_t * v18; // 0x405c20_0
    struct struct_9 * v19; // 0x405c67_6
    int32_t len; // 0x405a4a
    int32_t v20; // 0x405a5d
    bool v21; // 0x405add
    int32_t v22; // 0x405b3d
    int32_t len2; // 0x405bc5
    int32_t v23; // 0x405c67
    char * v24;
    int32_t * v25;
    int32_t v26;
    int32_t v27;
    int32_t v28;
    int32_t * lpProcessInformation;
    char * v29;
    char * v30;
    char * v31;
    char * v32;
    char * v33;
    char * v34;
    int32_t v35; // 0x405bee
    int32_t v36; // 0x405a63
    int32_t v37; // 0x405bc4
    int32_t v38; // 0x405bd8
    uint32_t v39; // 0x405bdd
    int32_t v40; // 0x405a2a
    int32_t v41; // 0x405a4f
    int32_t v42; // 0x40597e
    uint32_t v43; // 0x405bca
    int32_t v44; // 0x4059dc
    int32_t v45; // 0x4059f813
    int32_t v46; // 0x4059f814
    int32_t v47; // 0x4059f81441
    int32_t v48; // 0x4059f815
    int32_t v49; // 0x405ab7
    int32_t v50; // 0x405ac2
    int32_t * v51; // 0x405ad126
    int32_t * v52; // 0x405ad127
    int32_t * v53; // 0x405ad12738
    int32_t * v54; // 0x405ad128
    int32_t v55; // 0x405b64
    int32_t hObject2; // 0x405ba1
    int32_t hObject3; // 0x405bab
    char * lpCurrentDirectory; // bp+032
    char * str; // bp+030
    int32_t hObject4; // 0x405c20
    char * v56; // bp+022
    int32_t v57; // 0x4059fd
    int32_t v58; // 0x405a0f
    int32_t v59; // 0x405a1b
    int32_t v60; // 0x405b05
    int32_t v61; // 0x405b79
    int32_t v62; // 0x405ba1
    int32_t v63; // 0x405bab
    int32_t v64; // 0x405bca
    if (v6 == 64) {
        // 0x405948
        CreatePipe();
        if (g124 != 0) {
            // 0x40595f
            g124 = 0;
            function_405871(NULL, NULL, 12);
            v54 = (int32_t *)32;
            v34 = (char *)1;
            v12 = NULL;
            v48 = g130 | v7;
            // branch -> 0x40597b
        } else {
            v54 = v8;
            v34 = NULL;
            v12 = v31;
            v48 = v7;
        }
        // 0x40597b
        v42 = v5 & 4;
        g124 = v42;
        switch (a4) {
            default: {
                // 0x40598c
                CreatePipe();
                v52 = v54;
                v33 = v34;
                v13 = v30;
                v46 = v48;
                if (g124 != 0) {
                    // 0x4059a3
                    g124 = 0;
                    function_405871(NULL, NULL, 12);
                    v52 = (int32_t *)((int32_t)v54 & -9);
                    v33 = (char *)1;
                    v13 = NULL;
                    v46 = g130 | v48;
                    // branch -> 0x4059bf
                }
                // 0x4059bf
                v51 = v52;
                v32 = v33;
                v16 = v29;
                v15 = v13;
                v45 = v46;
                if (a4 != 32) {
                    v47 = v46;
                    v14 = v13;
                    v53 = v52;
                    // 0x4059c5
                    CreatePipe();
                    if (g124 != 0) {
                        // 0x4059dc
                        v44 = v3;
                        g124 = v44;
                        function_405871((char *)&v2, (char *)&v3, 12);
                        v51 = (int32_t *)((int32_t)v53 & -9);
                        v32 = (char *)1;
                        v16 = (char *)v44;
                        v15 = v14;
                        v45 = g130 | v47;
                        // branch -> 0x4059f8
                    } else {
                        v51 = v53;
                        v32 = v33;
                        v16 = v29;
                        v15 = v14;
                        v45 = v47;
                    }
                }
                // 0x4059f8
                if (g130 == v45) {
                    // 0x405a27
                    v40 = dwFlags;
                    v9 = v40 == a1 ? 0x40c02d : a1;
                    g131 = v9;
                    str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                    g130 = strlen((char *)v9);
                    len = strlen(str);
                    v41 = (int32_t)str;
                    g125 = v9;
                    v10 = *(char *)g34;
                    v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                    v36 = g131;
                    str3 = (char *)v36;
                    str2 = (char *)v20;
                    if (*str3 == 34) {
                        // 0x405a8e
                        strcpy(str2, str3);
                        g125 = v36;
                        // branch -> 0x405a97
                    } else {
                        // 0x405a6b
                        g130 = 0x40c060;
                        strcpy(str2, "\"");
                        strcat(str2, (char *)g131);
                        strcat(str2, "\"");
                        // branch -> 0x405a97
                    }
                    // 0x405a97
                    g130 = v41;
                    v50 = 0x49000000;
                    if (dwFlags != 0x49000000) {
                        // 0x405a9e
                        strcat(str2, " ");
                        strcat(str2, (char *)g130);
                        v50 = dwFlags;
                        // branch -> 0x405ab7
                    }
                    // 0x405ab7
                    v49 = (int32_t)a3;
                    g124 = v49;
                    lpCurrentDirectory = a3;
                    if (v49 != v50) {
                        // 0x405abe
                        if ((int32_t)*a3 == v50) {
                            // 0x405ac2
                            lpCurrentDirectory = (char *)v50;
                            // branch -> 0x405ac5
                        } else {
                            lpCurrentDirectory = a3;
                        }
                    }
                    // 0x405ac5
                    lpProcessAttributes = (int32_t *)v50;
                    v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                    g130 = g11;
                    v61 = dwFlags;
                    if (v21 != false) {
                        // 0x405af1
                        hObject = (int32_t)lpProcessInformation;
                        v60 = 0;
                        if (v61 != 0) {
                            // 0x405af6
                            CloseHandle(hObject);
                            if (dwFlags != 0) {
                                // 0x405b00
                                CloseHandle(hObject);
                                v60 = dwFlags;
                                // branch -> 0x405b05
                            } else {
                                v60 = 0;
                            }
                        }
                        // 0x405b05
                        if (v3 != v60) {
                            // 0x405b0a
                            CloseHandle(hObject);
                            // branch -> 0x405b0f
                        }
                        // 0x405b0f
                        CloseHandle(hObject);
                        if (a4 != 1) {
                            // 0x405b1a
                            WaitForSingleObject(hHandle, hObject);
                            // branch -> 0x405b25
                        }
                        // 0x405b25
                        if (v42 == dwFlags) {
                            // 0x405b6f
                            CloseHandle(hObject);
                            v56 = (char *)1;
                            // branch -> 0x405c9e
                        } else {
                            // 0x405b2a
                            g131 = 0x40f594;
                            EnterCriticalSection(lpProcessInformation);
                            v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                            v17 = (struct struct_8 *)v22;
                            g125 = 40;
                            g130 = v22;
                            LeaveCriticalSection(g105);
                            *(int32_t *)g130 = hObject;
                            v17->e1 = v28;
                            v17->e3 = NULL;
                            v17->e2 = NULL;
                            v55 = v2;
                            g124 = v55;
                            v17->e4 = (char *)v55;
                            // branch -> 0x405c89
                            // 0x405c89
                            v56 = (char *)g130;
                            // branch -> 0x405c9e
                        }
                        // 0x405c9e
                        HeapFree((int32_t)v25, dwFlags, str2);
                        g131 = v27;
                        g130 = &v26;
                        g129 = &v1;
                        return (int32_t)v56;
                    }
                    // 0x405b79
                    v62 = 0;
                    if (v61 != 0) {
                        // 0x405b7e
                        CloseHandle(0);
                        if (dwFlags != 0) {
                            // 0x405b88
                            CloseHandle(0);
                            if (dwFlags != 0) {
                                // 0x405b92
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b9c
                                    CloseHandle(0);
                                    v62 = dwFlags;
                                    // branch -> 0x405ba1
                                } else {
                                    v62 = 0;
                                }
                            } else {
                                v62 = 0;
                            }
                        } else {
                            v62 = 0;
                        }
                    }
                    // 0x405ba1
                    hObject2 = v3;
                    v63 = v62;
                    if (hObject2 != v62) {
                        // 0x405ba6
                        CloseHandle(hObject2);
                        v63 = dwFlags;
                        // branch -> 0x405bab
                    }
                    // 0x405bab
                    hObject3 = v2;
                    if (hObject3 != v63) {
                        // 0x405bb0
                        CloseHandle(hObject3);
                        // branch -> 0x405bb5
                    }
                    // 0x405bb5
                    if (a4 == 120) {
                        // 0x405bbf
                        if ((int32_t)lpCurrentDirectory == dwFlags) {
                            // 0x405bc4
                            v37 = g131;
                            len2 = strlen((char *)v37);
                            v43 = g131;
                            v64 = len2 - 1 + v43;
                            g130 = v64;
                            g125 = v37;
                            if (v64 > v43) {
                                v38 = v64;
                                while (true) {
                                    // 0x405bd3
                                    v39 = v38;
                                    if (*(char *)v38 != 92) {
                                      lab_0xbff59a0:;
                                        int32_t v65 = v38 - 1; // 0x405bd8
                                        g130 = v65;
                                        if (v65 <= v43) {
                                            v39 = v65;
                                            // break (via goto) -> 0x405bdd
                                            goto lab_0x4846c30;
                                        }
                                        v38 = v65;
                                        // continue -> 0x405bd3
                                        continue;
                                    }
                                    // 0x405bdd
                                    if (v39 > v43) {
                                        // 0x405be1
                                        strcpy(str2, (char *)v43);
                                        v35 = g130 - g131;
                                        g130 = v35;
                                        g125 = v43;
                                        *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                        // branch -> 0x405bf8
                                    }
                                }
                                // 0x405bdd
                                if (v39 > v43) {
                                    // 0x405be1
                                    strcpy(str2, (char *)v43);
                                    v35 = g130 - g131;
                                    g130 = v35;
                                    g125 = v43;
                                    *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                    // branch -> 0x405bf8
                                }
                            }
                        }
                        // 0x405bf8
                        g130 = 60;
                        memset(v25, dwFlags, 60);
                        g124 = v41;
                        hObject4 = g130;
                        v18 = (int32_t *)hObject4;
                        if (ShellExecuteExA(v18) != false) {
                            // 0x405c4f
                            hHandle2 = (int32_t)v24;
                            WaitForSingleObject(hHandle2, -1);
                            if (v42 == dwFlags) {
                                // 0x405c8e
                                CloseHandle(hObject4);
                                v56 = (char *)1;
                                // branch -> 0x405c9e
                            } else {
                                // 0x405c54
                                g131 = 0x40f594;
                                lpCriticalSection = g105;
                                EnterCriticalSection(lpCriticalSection);
                                v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                v19 = (struct struct_9 *)v23;
                                g125 = 40;
                                g130 = v23;
                                LeaveCriticalSection(lpCriticalSection);
                                g124 = hHandle2;
                                v19->e1 = -1;
                                *(int32_t *)g130 = g124;
                                v19->e3 = dwFlags;
                                v19->e2 = dwFlags;
                                v19->e4 = dwFlags;
                                // branch -> 0x405c89
                                // 0x405c89
                                v56 = (char *)g130;
                                // branch -> 0x405c9e
                            }
                            // 0x405c9e
                            HeapFree((int32_t)v18, dwFlags, str2);
                            g131 = v27;
                            g130 = &v26;
                            g129 = &v1;
                            return (int32_t)v56;
                        }
                        v11 = v18;
                    } else {
                        v11 = v25;
                    }
                    // 0x405c9e
                    HeapFree((int32_t)v11, dwFlags, str2);
                    g131 = v27;
                    g130 = &v26;
                    g129 = &v1;
                    return (int32_t)NULL;
                }
                break;
            }
            case 4: {
                v51 = v54;
                v32 = v34;
                v16 = v29;
                v15 = v30;
                // 0x4059f8
                if (g130 == v48) {
                    // 0x405a27
                    v40 = dwFlags;
                    v9 = v40 == a1 ? 0x40c02d : a1;
                    g131 = v9;
                    str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                    g130 = strlen((char *)v9);
                    len = strlen(str);
                    v41 = (int32_t)str;
                    g125 = v9;
                    v10 = *(char *)g34;
                    v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                    v36 = g131;
                    str3 = (char *)v36;
                    str2 = (char *)v20;
                    if (*str3 == 34) {
                        // 0x405a8e
                        strcpy(str2, str3);
                        g125 = v36;
                        // branch -> 0x405a97
                    } else {
                        // 0x405a6b
                        g130 = 0x40c060;
                        strcpy(str2, "\"");
                        strcat(str2, (char *)g131);
                        strcat(str2, "\"");
                        // branch -> 0x405a97
                    }
                    // 0x405a97
                    g130 = v41;
                    v50 = 0x49000000;
                    if (dwFlags != 0x49000000) {
                        // 0x405a9e
                        strcat(str2, " ");
                        strcat(str2, (char *)g130);
                        v50 = dwFlags;
                        // branch -> 0x405ab7
                    }
                    // 0x405ab7
                    v49 = (int32_t)a3;
                    g124 = v49;
                    lpCurrentDirectory = a3;
                    if (v49 != v50) {
                        // 0x405abe
                        if ((int32_t)*a3 == v50) {
                            // 0x405ac2
                            lpCurrentDirectory = (char *)v50;
                            // branch -> 0x405ac5
                        } else {
                            lpCurrentDirectory = a3;
                        }
                    }
                    // 0x405ac5
                    lpProcessAttributes = (int32_t *)v50;
                    v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                    g130 = g11;
                    v61 = dwFlags;
                    if (v21 != false) {
                        // 0x405af1
                        hObject = (int32_t)lpProcessInformation;
                        v60 = 0;
                        if (v61 != 0) {
                            // 0x405af6
                            CloseHandle(hObject);
                            if (dwFlags != 0) {
                                // 0x405b00
                                CloseHandle(hObject);
                                v60 = dwFlags;
                                // branch -> 0x405b05
                            } else {
                                v60 = 0;
                            }
                        }
                        // 0x405b05
                        if (v3 != v60) {
                            // 0x405b0a
                            CloseHandle(hObject);
                            // branch -> 0x405b0f
                        }
                        // 0x405b0f
                        CloseHandle(hObject);
                        if (a4 != 1) {
                            // 0x405b1a
                            WaitForSingleObject(hHandle, hObject);
                            // branch -> 0x405b25
                        }
                        // 0x405b25
                        if (v42 == dwFlags) {
                            // 0x405b6f
                            CloseHandle(hObject);
                            v56 = (char *)1;
                            // branch -> 0x405c9e
                        } else {
                            // 0x405b2a
                            g131 = 0x40f594;
                            EnterCriticalSection(lpProcessInformation);
                            v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                            v17 = (struct struct_8 *)v22;
                            g125 = 40;
                            g130 = v22;
                            LeaveCriticalSection(g105);
                            *(int32_t *)g130 = hObject;
                            v17->e1 = v28;
                            v17->e3 = NULL;
                            v17->e2 = NULL;
                            v55 = v2;
                            g124 = v55;
                            v17->e4 = (char *)v55;
                            // branch -> 0x405c89
                            // 0x405c89
                            v56 = (char *)g130;
                            // branch -> 0x405c9e
                        }
                        // 0x405c9e
                        HeapFree((int32_t)v25, dwFlags, str2);
                        g131 = v27;
                        g130 = &v26;
                        g129 = &v1;
                        return (int32_t)v56;
                    }
                    // 0x405b79
                    v62 = 0;
                    if (v61 != 0) {
                        // 0x405b7e
                        CloseHandle(0);
                        if (dwFlags != 0) {
                            // 0x405b88
                            CloseHandle(0);
                            if (dwFlags != 0) {
                                // 0x405b92
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b9c
                                    CloseHandle(0);
                                    v62 = dwFlags;
                                    // branch -> 0x405ba1
                                } else {
                                    v62 = 0;
                                }
                            } else {
                                v62 = 0;
                            }
                        } else {
                            v62 = 0;
                        }
                    }
                    // 0x405ba1
                    hObject2 = v3;
                    v63 = v62;
                    if (hObject2 != v62) {
                        // 0x405ba6
                        CloseHandle(hObject2);
                        v63 = dwFlags;
                        // branch -> 0x405bab
                    }
                    // 0x405bab
                    hObject3 = v2;
                    if (hObject3 != v63) {
                        // 0x405bb0
                        CloseHandle(hObject3);
                        // branch -> 0x405bb5
                    }
                    // 0x405bb5
                    if (a4 == 120) {
                        // 0x405bbf
                        if ((int32_t)lpCurrentDirectory == dwFlags) {
                            // 0x405bc4
                            v37 = g131;
                            len2 = strlen((char *)v37);
                            v43 = g131;
                            v64 = len2 - 1 + v43;
                            g130 = v64;
                            g125 = v37;
                            if (v64 > v43) {
                                v38 = v64;
                                while (true) {
                                    // 0x405bd3
                                    if (*(char *)v38 != 92) {
                                        goto lab_0xbff59a0;
                                    }
                                    // 0x405bdd
                                    if (v38 > v43) {
                                        // 0x405be1
                                        strcpy(str2, (char *)v43);
                                        v35 = g130 - g131;
                                        g130 = v35;
                                        g125 = v43;
                                        *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                        // branch -> 0x405bf8
                                    }
                                }
                            }
                        }
                        // 0x405bf8
                        g130 = 60;
                        memset(v25, dwFlags, 60);
                        g124 = v41;
                        hObject4 = g130;
                        v18 = (int32_t *)hObject4;
                        if (ShellExecuteExA(v18) != false) {
                            // 0x405c4f
                            hHandle2 = (int32_t)v24;
                            WaitForSingleObject(hHandle2, -1);
                            if (v42 == dwFlags) {
                                // 0x405c8e
                                CloseHandle(hObject4);
                                v56 = (char *)1;
                                // branch -> 0x405c9e
                            } else {
                                // 0x405c54
                                g131 = 0x40f594;
                                lpCriticalSection = g105;
                                EnterCriticalSection(lpCriticalSection);
                                v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                v19 = (struct struct_9 *)v23;
                                g125 = 40;
                                g130 = v23;
                                LeaveCriticalSection(lpCriticalSection);
                                g124 = hHandle2;
                                v19->e1 = -1;
                                *(int32_t *)g130 = g124;
                                v19->e3 = dwFlags;
                                v19->e2 = dwFlags;
                                v19->e4 = dwFlags;
                                // branch -> 0x405c89
                                // 0x405c89
                                v56 = (char *)g130;
                                // branch -> 0x405c9e
                            }
                            // 0x405c9e
                            HeapFree((int32_t)v18, dwFlags, str2);
                            g131 = v27;
                            g130 = &v26;
                            g129 = &v1;
                            return (int32_t)v56;
                        }
                        v11 = v18;
                    } else {
                        v11 = v25;
                    }
                    // 0x405c9e
                    HeapFree((int32_t)v11, dwFlags, str2);
                    g131 = v27;
                    g130 = &v26;
                    g129 = &v1;
                    return (int32_t)NULL;
                }
                break;
            }
            case 8: {
                v47 = v48;
                v14 = v30;
                v53 = v54;
                // 0x4059c5
                CreatePipe();
                v51 = v53;
                v32 = v34;
                v16 = v29;
                v15 = v14;
                v45 = v47;
                if (g124 != 0) {
                    // 0x4059dc
                    v44 = v3;
                    g124 = v44;
                    function_405871((char *)&v2, (char *)&v3, 12);
                    v51 = (int32_t *)((int32_t)v53 & -9);
                    v32 = (char *)1;
                    v16 = (char *)v44;
                    v15 = v14;
                    v45 = g130 | v47;
                    // branch -> 0x4059f8
                }
                // 0x4059f8
                if (g130 == v45) {
                    // 0x405a27
                    v40 = dwFlags;
                    v9 = v40 == a1 ? 0x40c02d : a1;
                    g131 = v9;
                    str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                    g130 = strlen((char *)v9);
                    len = strlen(str);
                    v41 = (int32_t)str;
                    g125 = v9;
                    v10 = *(char *)g34;
                    v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                    v36 = g131;
                    str3 = (char *)v36;
                    str2 = (char *)v20;
                    if (*str3 == 34) {
                        // 0x405a8e
                        strcpy(str2, str3);
                        g125 = v36;
                        // branch -> 0x405a97
                    } else {
                        // 0x405a6b
                        g130 = 0x40c060;
                        strcpy(str2, "\"");
                        strcat(str2, (char *)g131);
                        strcat(str2, "\"");
                        // branch -> 0x405a97
                    }
                    // 0x405a97
                    g130 = v41;
                    v50 = 0x49000000;
                    if (dwFlags != 0x49000000) {
                        // 0x405a9e
                        strcat(str2, " ");
                        strcat(str2, (char *)g130);
                        v50 = dwFlags;
                        // branch -> 0x405ab7
                    }
                    // 0x405ab7
                    v49 = (int32_t)a3;
                    g124 = v49;
                    lpCurrentDirectory = a3;
                    if (v49 != v50) {
                        // 0x405abe
                        if ((int32_t)*a3 == v50) {
                            // 0x405ac2
                            lpCurrentDirectory = (char *)v50;
                            // branch -> 0x405ac5
                        } else {
                            lpCurrentDirectory = a3;
                        }
                    }
                    // 0x405ac5
                    lpProcessAttributes = (int32_t *)v50;
                    v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                    g130 = g11;
                    v61 = dwFlags;
                    if (v21 != false) {
                        // 0x405af1
                        hObject = (int32_t)lpProcessInformation;
                        v60 = 0;
                        if (v61 != 0) {
                            // 0x405af6
                            CloseHandle(hObject);
                            if (dwFlags != 0) {
                                // 0x405b00
                                CloseHandle(hObject);
                                v60 = dwFlags;
                                // branch -> 0x405b05
                            } else {
                                v60 = 0;
                            }
                        }
                        // 0x405b05
                        if (v3 != v60) {
                            // 0x405b0a
                            CloseHandle(hObject);
                            // branch -> 0x405b0f
                        }
                        // 0x405b0f
                        CloseHandle(hObject);
                        if (a4 != 1) {
                            // 0x405b1a
                            WaitForSingleObject(hHandle, hObject);
                            // branch -> 0x405b25
                        }
                        // 0x405b25
                        if (v42 == dwFlags) {
                            // 0x405b6f
                            CloseHandle(hObject);
                            v56 = (char *)1;
                            // branch -> 0x405c9e
                        } else {
                            // 0x405b2a
                            g131 = 0x40f594;
                            EnterCriticalSection(lpProcessInformation);
                            v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                            v17 = (struct struct_8 *)v22;
                            g125 = 40;
                            g130 = v22;
                            LeaveCriticalSection(g105);
                            *(int32_t *)g130 = hObject;
                            v17->e1 = v28;
                            v17->e3 = NULL;
                            v17->e2 = NULL;
                            v55 = v2;
                            g124 = v55;
                            v17->e4 = (char *)v55;
                            // branch -> 0x405c89
                            // 0x405c89
                            v56 = (char *)g130;
                            // branch -> 0x405c9e
                        }
                        // 0x405c9e
                        HeapFree((int32_t)v25, dwFlags, str2);
                        g131 = v27;
                        g130 = &v26;
                        g129 = &v1;
                        return (int32_t)v56;
                    }
                    // 0x405b79
                    v62 = 0;
                    if (v61 != 0) {
                        // 0x405b7e
                        CloseHandle(0);
                        if (dwFlags != 0) {
                            // 0x405b88
                            CloseHandle(0);
                            if (dwFlags != 0) {
                                // 0x405b92
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b9c
                                    CloseHandle(0);
                                    v62 = dwFlags;
                                    // branch -> 0x405ba1
                                } else {
                                    v62 = 0;
                                }
                            } else {
                                v62 = 0;
                            }
                        } else {
                            v62 = 0;
                        }
                    }
                    // 0x405ba1
                    hObject2 = v3;
                    v63 = v62;
                    if (hObject2 != v62) {
                        // 0x405ba6
                        CloseHandle(hObject2);
                        v63 = dwFlags;
                        // branch -> 0x405bab
                    }
                    // 0x405bab
                    hObject3 = v2;
                    if (hObject3 != v63) {
                        // 0x405bb0
                        CloseHandle(hObject3);
                        // branch -> 0x405bb5
                    }
                    // 0x405bb5
                    if (a4 == 120) {
                        // 0x405bbf
                        if ((int32_t)lpCurrentDirectory == dwFlags) {
                            // 0x405bc4
                            v37 = g131;
                            len2 = strlen((char *)v37);
                            v43 = g131;
                            v64 = len2 - 1 + v43;
                            g130 = v64;
                            g125 = v37;
                            if (v64 > v43) {
                                v38 = v64;
                                while (true) {
                                    // 0x405bd3
                                    if (*(char *)v38 != 92) {
                                        goto lab_0xbff59a0;
                                    }
                                    // 0x405bdd
                                    if (v38 > v43) {
                                        // 0x405be1
                                        strcpy(str2, (char *)v43);
                                        v35 = g130 - g131;
                                        g130 = v35;
                                        g125 = v43;
                                        *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                        // branch -> 0x405bf8
                                    }
                                }
                            }
                        }
                        // 0x405bf8
                        g130 = 60;
                        memset(v25, dwFlags, 60);
                        g124 = v41;
                        hObject4 = g130;
                        v18 = (int32_t *)hObject4;
                        if (ShellExecuteExA(v18) != false) {
                            // 0x405c4f
                            hHandle2 = (int32_t)v24;
                            WaitForSingleObject(hHandle2, -1);
                            if (v42 == dwFlags) {
                                // 0x405c8e
                                CloseHandle(hObject4);
                                v56 = (char *)1;
                                // branch -> 0x405c9e
                            } else {
                                // 0x405c54
                                g131 = 0x40f594;
                                lpCriticalSection = g105;
                                EnterCriticalSection(lpCriticalSection);
                                v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                v19 = (struct struct_9 *)v23;
                                g125 = 40;
                                g130 = v23;
                                LeaveCriticalSection(lpCriticalSection);
                                g124 = hHandle2;
                                v19->e1 = -1;
                                *(int32_t *)g130 = g124;
                                v19->e3 = dwFlags;
                                v19->e2 = dwFlags;
                                v19->e4 = dwFlags;
                                // branch -> 0x405c89
                                // 0x405c89
                                v56 = (char *)g130;
                                // branch -> 0x405c9e
                            }
                            // 0x405c9e
                            HeapFree((int32_t)v18, dwFlags, str2);
                            g131 = v27;
                            g130 = &v26;
                            g129 = &v1;
                            return (int32_t)v56;
                        }
                        v11 = v18;
                    } else {
                        v11 = v25;
                    }
                    // 0x405c9e
                    HeapFree((int32_t)v11, dwFlags, str2);
                    g131 = v27;
                    g130 = &v26;
                    g129 = &v1;
                    return (int32_t)NULL;
                }
                break;
            }
        }
        // 0x4059fd
        v57 = dwFlags;
        g130 = g15;
        v58 = v57;
        if ((int32_t)v12 == v57) {
            // 0x405a08
            GetStdHandle(-10);
            v58 = dwFlags;
            // branch -> 0x405a0f
        }
        // 0x405a0f
        v59 = v58;
        if ((int32_t)v15 == v58) {
            // 0x405a14
            GetStdHandle(-11);
            v59 = dwFlags;
            // branch -> 0x405a1b
        }
        // 0x405a1b
        if ((int32_t)v16 == v59) {
            // 0x405a20
            GetStdHandle(-12);
            // branch -> 0x405a27
        }
        // 0x405a27
        v40 = dwFlags;
        v9 = v40 == a1 ? 0x40c02d : a1;
        g131 = v9;
        str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
        g130 = strlen((char *)v9);
        len = strlen(str);
        v41 = (int32_t)str;
        g125 = v9;
        v20 = HeapAlloc((int32_t)*(char *)g34, dwFlags, len + 4 + g130);
        v36 = g131;
        str3 = (char *)v36;
        str2 = (char *)v20;
        if (*str3 == 34) {
            // 0x405a8e
            strcpy(str2, str3);
            g125 = v36;
            // branch -> 0x405a97
        } else {
            // 0x405a6b
            g130 = 0x40c060;
            strcpy(str2, "\"");
            strcat(str2, (char *)g131);
            strcat(str2, "\"");
            // branch -> 0x405a97
        }
        // 0x405a97
        g130 = v41;
        v50 = 0x49000000;
        if (dwFlags != 0x49000000) {
            // 0x405a9e
            strcat(str2, " ");
            strcat(str2, (char *)g130);
            v50 = dwFlags;
            // branch -> 0x405ab7
        }
        // 0x405ab7
        v49 = (int32_t)a3;
        g124 = v49;
        lpCurrentDirectory = a3;
        if (v49 != v50) {
            // 0x405abe
            if ((int32_t)*a3 == v50) {
                // 0x405ac2
                lpCurrentDirectory = (char *)v50;
                // branch -> 0x405ac5
            } else {
                lpCurrentDirectory = a3;
            }
        }
        // 0x405ac5
        lpProcessAttributes = (int32_t *)v50;
        v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
        g130 = g11;
        v61 = dwFlags;
        if (v21 != false) {
            // 0x405af1
            hObject = (int32_t)lpProcessInformation;
            v60 = 0;
            if (v61 != 0) {
                // 0x405af6
                CloseHandle(hObject);
                if (dwFlags != 0) {
                    // 0x405b00
                    CloseHandle(hObject);
                    v60 = dwFlags;
                    // branch -> 0x405b05
                } else {
                    v60 = 0;
                }
            }
            // 0x405b05
            if (v3 != v60) {
                // 0x405b0a
                CloseHandle(hObject);
                // branch -> 0x405b0f
            }
            // 0x405b0f
            CloseHandle(hObject);
            if (a4 != 1) {
                // 0x405b1a
                WaitForSingleObject(hHandle, hObject);
                // branch -> 0x405b25
            }
            // 0x405b25
            if (v42 == dwFlags) {
                // 0x405b6f
                CloseHandle(hObject);
                v56 = (char *)1;
                // branch -> 0x405c9e
            } else {
                // 0x405b2a
                g131 = 0x40f594;
                EnterCriticalSection(lpProcessInformation);
                v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                v17 = (struct struct_8 *)v22;
                g125 = 40;
                g130 = v22;
                LeaveCriticalSection(g105);
                *(int32_t *)g130 = hObject;
                v17->e1 = v28;
                v17->e3 = NULL;
                v17->e2 = NULL;
                v55 = v2;
                g124 = v55;
                v17->e4 = (char *)v55;
                // branch -> 0x405c89
                // 0x405c89
                v56 = (char *)g130;
                // branch -> 0x405c9e
            }
            // 0x405c9e
            HeapFree((int32_t)v25, dwFlags, str2);
            g131 = v27;
            g130 = &v26;
            g129 = &v1;
            return (int32_t)v56;
        }
        // 0x405b79
        v62 = 0;
        if (v61 != 0) {
            // 0x405b7e
            CloseHandle(0);
            if (dwFlags != 0) {
                // 0x405b88
                CloseHandle(0);
                if (dwFlags != 0) {
                    // 0x405b92
                    CloseHandle(0);
                    if (dwFlags != 0) {
                        // 0x405b9c
                        CloseHandle(0);
                        v62 = dwFlags;
                        // branch -> 0x405ba1
                    } else {
                        v62 = 0;
                    }
                } else {
                    v62 = 0;
                }
            } else {
                v62 = 0;
            }
        }
        // 0x405ba1
        hObject2 = v3;
        v63 = v62;
        if (hObject2 != v62) {
            // 0x405ba6
            CloseHandle(hObject2);
            v63 = dwFlags;
            // branch -> 0x405bab
        }
        // 0x405bab
        hObject3 = v2;
        if (hObject3 != v63) {
            // 0x405bb0
            CloseHandle(hObject3);
            // branch -> 0x405bb5
        }
        // 0x405bb5
        if (a4 == 120) {
            // 0x405bbf
            if ((int32_t)lpCurrentDirectory == dwFlags) {
                // 0x405bc4
                v37 = g131;
                len2 = strlen((char *)v37);
                v43 = g131;
                v64 = len2 - 1 + v43;
                g130 = v64;
                g125 = v37;
                if (v64 > v43) {
                    v38 = v64;
                    while (true) {
                        // 0x405bd3
                        if (*(char *)v38 != 92) {
                            goto lab_0xbff59a0;
                        }
                        // 0x405bdd
                        if (v38 > v43) {
                            // 0x405be1
                            strcpy(str2, (char *)v43);
                            v35 = g130 - g131;
                            g130 = v35;
                            g125 = v43;
                            *(char *)(v20 + 1 + v35) = (char)dwFlags;
                            // branch -> 0x405bf8
                        }
                    }
                }
            }
            // 0x405bf8
            g130 = 60;
            memset(v25, dwFlags, 60);
            g124 = v41;
            hObject4 = g130;
            v18 = (int32_t *)hObject4;
            if (ShellExecuteExA(v18) != false) {
                // 0x405c4f
                hHandle2 = (int32_t)v24;
                WaitForSingleObject(hHandle2, -1);
                if (v42 == dwFlags) {
                    // 0x405c8e
                    CloseHandle(hObject4);
                    v56 = (char *)1;
                    // branch -> 0x405c9e
                } else {
                    // 0x405c54
                    g131 = 0x40f594;
                    lpCriticalSection = g105;
                    EnterCriticalSection(lpCriticalSection);
                    v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                    v19 = (struct struct_9 *)v23;
                    g125 = 40;
                    g130 = v23;
                    LeaveCriticalSection(lpCriticalSection);
                    g124 = hHandle2;
                    v19->e1 = -1;
                    *(int32_t *)g130 = g124;
                    v19->e3 = dwFlags;
                    v19->e2 = dwFlags;
                    v19->e4 = dwFlags;
                    // branch -> 0x405c89
                    // 0x405c89
                    v56 = (char *)g130;
                    // branch -> 0x405c9e
                }
                // 0x405c9e
                HeapFree((int32_t)v18, dwFlags, str2);
                g131 = v27;
                g130 = &v26;
                g129 = &v1;
                return (int32_t)v56;
            }
            v11 = v18;
        } else {
            v11 = v25;
        }
        // 0x405c9e
        HeapFree((int32_t)v11, dwFlags, str2);
        g131 = v27;
        g130 = &v26;
        g129 = &v1;
        return (int32_t)NULL;
    }
    int32_t v66 = (int32_t)a5; // 0x405921
    g124 = v66;
    if (v66 != dwFlags) {
        int32_t v67 = *(int32_t *)(v66 + 12); // 0x405928
        g124 = v67;
        if (v67 != dwFlags) {
            // 0x40592f
            v54 = (int32_t *)32;
            v34 = (char *)v7;
            v48 = 257;
            // branch -> 0x40597b
            // 0x40597b
            v42 = v5 & 4;
            g124 = v42;
            switch (a4) {
                default: {
                    // 0x40598c
                    CreatePipe();
                    v52 = v54;
                    v33 = v34;
                    v13 = v30;
                    v46 = v48;
                    if (g124 != 0) {
                        // 0x4059a3
                        g124 = 0;
                        function_405871(NULL, NULL, 12);
                        v52 = (int32_t *)((int32_t)v54 & -9);
                        v33 = (char *)1;
                        v13 = NULL;
                        v46 = g130 | v48;
                        // branch -> 0x4059bf
                    }
                    // 0x4059bf
                    v51 = v52;
                    v32 = v33;
                    v16 = v29;
                    v15 = v13;
                    v45 = v46;
                    if (a4 != 32) {
                        v47 = v46;
                        v14 = v13;
                        v53 = v52;
                        // 0x4059c5
                        CreatePipe();
                        if (g124 != 0) {
                            // 0x4059dc
                            v44 = v3;
                            g124 = v44;
                            function_405871((char *)&v2, (char *)&v3, 12);
                            v51 = (int32_t *)((int32_t)v53 & -9);
                            v32 = (char *)1;
                            v16 = (char *)v44;
                            v15 = v14;
                            v45 = g130 | v47;
                            // branch -> 0x4059f8
                        } else {
                            v51 = v53;
                            v32 = v33;
                            v16 = v29;
                            v15 = v14;
                            v45 = v47;
                        }
                    }
                    // 0x4059f8
                    if (g130 == v45) {
                        // 0x405a27
                        v40 = dwFlags;
                        v9 = v40 == a1 ? 0x40c02d : a1;
                        g131 = v9;
                        str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                        g130 = strlen((char *)v9);
                        len = strlen(str);
                        v41 = (int32_t)str;
                        g125 = v9;
                        v10 = *(char *)g34;
                        v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                        v36 = g131;
                        str3 = (char *)v36;
                        str2 = (char *)v20;
                        if (*str3 == 34) {
                            // 0x405a8e
                            strcpy(str2, str3);
                            g125 = v36;
                            // branch -> 0x405a97
                        } else {
                            // 0x405a6b
                            g130 = 0x40c060;
                            strcpy(str2, "\"");
                            strcat(str2, (char *)g131);
                            strcat(str2, "\"");
                            // branch -> 0x405a97
                        }
                        // 0x405a97
                        g130 = v41;
                        v50 = 0x49000000;
                        if (dwFlags != 0x49000000) {
                            // 0x405a9e
                            strcat(str2, " ");
                            strcat(str2, (char *)g130);
                            v50 = dwFlags;
                            // branch -> 0x405ab7
                        }
                        // 0x405ab7
                        v49 = (int32_t)a3;
                        g124 = v49;
                        lpCurrentDirectory = a3;
                        if (v49 != v50) {
                            // 0x405abe
                            if ((int32_t)*a3 == v50) {
                                // 0x405ac2
                                lpCurrentDirectory = (char *)v50;
                                // branch -> 0x405ac5
                            } else {
                                lpCurrentDirectory = a3;
                            }
                        }
                        // 0x405ac5
                        lpProcessAttributes = (int32_t *)v50;
                        v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                        g130 = g11;
                        v61 = dwFlags;
                        if (v21 != false) {
                            // 0x405af1
                            hObject = (int32_t)lpProcessInformation;
                            v60 = 0;
                            if (v61 != 0) {
                                // 0x405af6
                                CloseHandle(hObject);
                                if (dwFlags != 0) {
                                    // 0x405b00
                                    CloseHandle(hObject);
                                    v60 = dwFlags;
                                    // branch -> 0x405b05
                                } else {
                                    v60 = 0;
                                }
                            }
                            // 0x405b05
                            if (v3 != v60) {
                                // 0x405b0a
                                CloseHandle(hObject);
                                // branch -> 0x405b0f
                            }
                            // 0x405b0f
                            CloseHandle(hObject);
                            if (a4 != 1) {
                                // 0x405b1a
                                WaitForSingleObject(hHandle, hObject);
                                // branch -> 0x405b25
                            }
                            // 0x405b25
                            if (v42 == dwFlags) {
                                // 0x405b6f
                                CloseHandle(hObject);
                                v56 = (char *)1;
                                // branch -> 0x405c9e
                            } else {
                                // 0x405b2a
                                g131 = 0x40f594;
                                EnterCriticalSection(lpProcessInformation);
                                v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                                v17 = (struct struct_8 *)v22;
                                g125 = 40;
                                g130 = v22;
                                LeaveCriticalSection(g105);
                                *(int32_t *)g130 = hObject;
                                v17->e1 = v28;
                                v17->e3 = NULL;
                                v17->e2 = NULL;
                                v55 = v2;
                                g124 = v55;
                                v17->e4 = (char *)v55;
                                // branch -> 0x405c89
                                // 0x405c89
                                v56 = (char *)g130;
                                // branch -> 0x405c9e
                            }
                            // 0x405c9e
                            HeapFree((int32_t)v25, dwFlags, str2);
                            g131 = v27;
                            g130 = &v26;
                            g129 = &v1;
                            return (int32_t)v56;
                        }
                        // 0x405b79
                        v62 = 0;
                        if (v61 != 0) {
                            // 0x405b7e
                            CloseHandle(0);
                            if (dwFlags != 0) {
                                // 0x405b88
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b92
                                    CloseHandle(0);
                                    if (dwFlags != 0) {
                                        // 0x405b9c
                                        CloseHandle(0);
                                        v62 = dwFlags;
                                        // branch -> 0x405ba1
                                    } else {
                                        v62 = 0;
                                    }
                                } else {
                                    v62 = 0;
                                }
                            } else {
                                v62 = 0;
                            }
                        }
                        // 0x405ba1
                        hObject2 = v3;
                        v63 = v62;
                        if (hObject2 != v62) {
                            // 0x405ba6
                            CloseHandle(hObject2);
                            v63 = dwFlags;
                            // branch -> 0x405bab
                        }
                        // 0x405bab
                        hObject3 = v2;
                        if (hObject3 != v63) {
                            // 0x405bb0
                            CloseHandle(hObject3);
                            // branch -> 0x405bb5
                        }
                        // 0x405bb5
                        if (a4 == 120) {
                            // 0x405bbf
                            if ((int32_t)lpCurrentDirectory == dwFlags) {
                                // 0x405bc4
                                v37 = g131;
                                len2 = strlen((char *)v37);
                                v43 = g131;
                                v64 = len2 - 1 + v43;
                                g130 = v64;
                                g125 = v37;
                                if (v64 > v43) {
                                    v38 = v64;
                                    while (true) {
                                        // 0x405bd3
                                        if (*(char *)v38 != 92) {
                                            goto lab_0xbff59a0;
                                        }
                                        // 0x405bdd
                                        if (v38 > v43) {
                                            // 0x405be1
                                            strcpy(str2, (char *)v43);
                                            v35 = g130 - g131;
                                            g130 = v35;
                                            g125 = v43;
                                            *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                            // branch -> 0x405bf8
                                        }
                                    }
                                }
                            }
                            // 0x405bf8
                            g130 = 60;
                            memset(v25, dwFlags, 60);
                            g124 = v41;
                            hObject4 = g130;
                            v18 = (int32_t *)hObject4;
                            if (ShellExecuteExA(v18) != false) {
                                // 0x405c4f
                                hHandle2 = (int32_t)v24;
                                WaitForSingleObject(hHandle2, -1);
                                if (v42 == dwFlags) {
                                    // 0x405c8e
                                    CloseHandle(hObject4);
                                    v56 = (char *)1;
                                    // branch -> 0x405c9e
                                } else {
                                    // 0x405c54
                                    g131 = 0x40f594;
                                    lpCriticalSection = g105;
                                    EnterCriticalSection(lpCriticalSection);
                                    v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                    v19 = (struct struct_9 *)v23;
                                    g125 = 40;
                                    g130 = v23;
                                    LeaveCriticalSection(lpCriticalSection);
                                    g124 = hHandle2;
                                    v19->e1 = -1;
                                    *(int32_t *)g130 = g124;
                                    v19->e3 = dwFlags;
                                    v19->e2 = dwFlags;
                                    v19->e4 = dwFlags;
                                    // branch -> 0x405c89
                                    // 0x405c89
                                    v56 = (char *)g130;
                                    // branch -> 0x405c9e
                                }
                                // 0x405c9e
                                HeapFree((int32_t)v18, dwFlags, str2);
                                g131 = v27;
                                g130 = &v26;
                                g129 = &v1;
                                return (int32_t)v56;
                            }
                            v11 = v18;
                        } else {
                            v11 = v25;
                        }
                        // 0x405c9e
                        HeapFree((int32_t)v11, dwFlags, str2);
                        g131 = v27;
                        g130 = &v26;
                        g129 = &v1;
                        return (int32_t)NULL;
                    }
                    break;
                }
                case 4: {
                    v51 = v54;
                    v32 = v34;
                    v16 = v29;
                    v15 = v30;
                    // 0x4059f8
                    if (g130 == v48) {
                        // 0x405a27
                        v40 = dwFlags;
                        v9 = v40 == a1 ? 0x40c02d : a1;
                        g131 = v9;
                        str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                        g130 = strlen((char *)v9);
                        len = strlen(str);
                        v41 = (int32_t)str;
                        g125 = v9;
                        v10 = *(char *)g34;
                        v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                        v36 = g131;
                        str3 = (char *)v36;
                        str2 = (char *)v20;
                        if (*str3 == 34) {
                            // 0x405a8e
                            strcpy(str2, str3);
                            g125 = v36;
                            // branch -> 0x405a97
                        } else {
                            // 0x405a6b
                            g130 = 0x40c060;
                            strcpy(str2, "\"");
                            strcat(str2, (char *)g131);
                            strcat(str2, "\"");
                            // branch -> 0x405a97
                        }
                        // 0x405a97
                        g130 = v41;
                        v50 = 0x49000000;
                        if (dwFlags != 0x49000000) {
                            // 0x405a9e
                            strcat(str2, " ");
                            strcat(str2, (char *)g130);
                            v50 = dwFlags;
                            // branch -> 0x405ab7
                        }
                        // 0x405ab7
                        v49 = (int32_t)a3;
                        g124 = v49;
                        lpCurrentDirectory = a3;
                        if (v49 != v50) {
                            // 0x405abe
                            if ((int32_t)*a3 == v50) {
                                // 0x405ac2
                                lpCurrentDirectory = (char *)v50;
                                // branch -> 0x405ac5
                            } else {
                                lpCurrentDirectory = a3;
                            }
                        }
                        // 0x405ac5
                        lpProcessAttributes = (int32_t *)v50;
                        v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                        g130 = g11;
                        v61 = dwFlags;
                        if (v21 != false) {
                            // 0x405af1
                            hObject = (int32_t)lpProcessInformation;
                            v60 = 0;
                            if (v61 != 0) {
                                // 0x405af6
                                CloseHandle(hObject);
                                if (dwFlags != 0) {
                                    // 0x405b00
                                    CloseHandle(hObject);
                                    v60 = dwFlags;
                                    // branch -> 0x405b05
                                } else {
                                    v60 = 0;
                                }
                            }
                            // 0x405b05
                            if (v3 != v60) {
                                // 0x405b0a
                                CloseHandle(hObject);
                                // branch -> 0x405b0f
                            }
                            // 0x405b0f
                            CloseHandle(hObject);
                            if (a4 != 1) {
                                // 0x405b1a
                                WaitForSingleObject(hHandle, hObject);
                                // branch -> 0x405b25
                            }
                            // 0x405b25
                            if (v42 == dwFlags) {
                                // 0x405b6f
                                CloseHandle(hObject);
                                v56 = (char *)1;
                                // branch -> 0x405c9e
                            } else {
                                // 0x405b2a
                                g131 = 0x40f594;
                                EnterCriticalSection(lpProcessInformation);
                                v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                                v17 = (struct struct_8 *)v22;
                                g125 = 40;
                                g130 = v22;
                                LeaveCriticalSection(g105);
                                *(int32_t *)g130 = hObject;
                                v17->e1 = v28;
                                v17->e3 = NULL;
                                v17->e2 = NULL;
                                v55 = v2;
                                g124 = v55;
                                v17->e4 = (char *)v55;
                                // branch -> 0x405c89
                                // 0x405c89
                                v56 = (char *)g130;
                                // branch -> 0x405c9e
                            }
                            // 0x405c9e
                            HeapFree((int32_t)v25, dwFlags, str2);
                            g131 = v27;
                            g130 = &v26;
                            g129 = &v1;
                            return (int32_t)v56;
                        }
                        // 0x405b79
                        v62 = 0;
                        if (v61 != 0) {
                            // 0x405b7e
                            CloseHandle(0);
                            if (dwFlags != 0) {
                                // 0x405b88
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b92
                                    CloseHandle(0);
                                    if (dwFlags != 0) {
                                        // 0x405b9c
                                        CloseHandle(0);
                                        v62 = dwFlags;
                                        // branch -> 0x405ba1
                                    } else {
                                        v62 = 0;
                                    }
                                } else {
                                    v62 = 0;
                                }
                            } else {
                                v62 = 0;
                            }
                        }
                        // 0x405ba1
                        hObject2 = v3;
                        v63 = v62;
                        if (hObject2 != v62) {
                            // 0x405ba6
                            CloseHandle(hObject2);
                            v63 = dwFlags;
                            // branch -> 0x405bab
                        }
                        // 0x405bab
                        hObject3 = v2;
                        if (hObject3 != v63) {
                            // 0x405bb0
                            CloseHandle(hObject3);
                            // branch -> 0x405bb5
                        }
                        // 0x405bb5
                        if (a4 == 120) {
                            // 0x405bbf
                            if ((int32_t)lpCurrentDirectory == dwFlags) {
                                // 0x405bc4
                                v37 = g131;
                                len2 = strlen((char *)v37);
                                v43 = g131;
                                v64 = len2 - 1 + v43;
                                g130 = v64;
                                g125 = v37;
                                if (v64 > v43) {
                                    v38 = v64;
                                    while (true) {
                                        // 0x405bd3
                                        if (*(char *)v38 != 92) {
                                            goto lab_0xbff59a0;
                                        }
                                        // 0x405bdd
                                        if (v38 > v43) {
                                            // 0x405be1
                                            strcpy(str2, (char *)v43);
                                            v35 = g130 - g131;
                                            g130 = v35;
                                            g125 = v43;
                                            *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                            // branch -> 0x405bf8
                                        }
                                    }
                                }
                            }
                            // 0x405bf8
                            g130 = 60;
                            memset(v25, dwFlags, 60);
                            g124 = v41;
                            hObject4 = g130;
                            v18 = (int32_t *)hObject4;
                            if (ShellExecuteExA(v18) != false) {
                                // 0x405c4f
                                hHandle2 = (int32_t)v24;
                                WaitForSingleObject(hHandle2, -1);
                                if (v42 == dwFlags) {
                                    // 0x405c8e
                                    CloseHandle(hObject4);
                                    v56 = (char *)1;
                                    // branch -> 0x405c9e
                                } else {
                                    // 0x405c54
                                    g131 = 0x40f594;
                                    lpCriticalSection = g105;
                                    EnterCriticalSection(lpCriticalSection);
                                    v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                    v19 = (struct struct_9 *)v23;
                                    g125 = 40;
                                    g130 = v23;
                                    LeaveCriticalSection(lpCriticalSection);
                                    g124 = hHandle2;
                                    v19->e1 = -1;
                                    *(int32_t *)g130 = g124;
                                    v19->e3 = dwFlags;
                                    v19->e2 = dwFlags;
                                    v19->e4 = dwFlags;
                                    // branch -> 0x405c89
                                    // 0x405c89
                                    v56 = (char *)g130;
                                    // branch -> 0x405c9e
                                }
                                // 0x405c9e
                                HeapFree((int32_t)v18, dwFlags, str2);
                                g131 = v27;
                                g130 = &v26;
                                g129 = &v1;
                                return (int32_t)v56;
                            }
                            v11 = v18;
                        } else {
                            v11 = v25;
                        }
                        // 0x405c9e
                        HeapFree((int32_t)v11, dwFlags, str2);
                        g131 = v27;
                        g130 = &v26;
                        g129 = &v1;
                        return (int32_t)NULL;
                    }
                    break;
                }
                case 8: {
                    v47 = v48;
                    v14 = v30;
                    v53 = v54;
                    // 0x4059c5
                    CreatePipe();
                    v51 = v53;
                    v32 = v34;
                    v16 = v29;
                    v15 = v14;
                    v45 = v47;
                    if (g124 != 0) {
                        // 0x4059dc
                        v44 = v3;
                        g124 = v44;
                        function_405871((char *)&v2, (char *)&v3, 12);
                        v51 = (int32_t *)((int32_t)v53 & -9);
                        v32 = (char *)1;
                        v16 = (char *)v44;
                        v15 = v14;
                        v45 = g130 | v47;
                        // branch -> 0x4059f8
                    }
                    // 0x4059f8
                    if (g130 == v45) {
                        // 0x405a27
                        v40 = dwFlags;
                        v9 = v40 == a1 ? 0x40c02d : a1;
                        g131 = v9;
                        str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                        g130 = strlen((char *)v9);
                        len = strlen(str);
                        v41 = (int32_t)str;
                        g125 = v9;
                        v10 = *(char *)g34;
                        v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                        v36 = g131;
                        str3 = (char *)v36;
                        str2 = (char *)v20;
                        if (*str3 == 34) {
                            // 0x405a8e
                            strcpy(str2, str3);
                            g125 = v36;
                            // branch -> 0x405a97
                        } else {
                            // 0x405a6b
                            g130 = 0x40c060;
                            strcpy(str2, "\"");
                            strcat(str2, (char *)g131);
                            strcat(str2, "\"");
                            // branch -> 0x405a97
                        }
                        // 0x405a97
                        g130 = v41;
                        v50 = 0x49000000;
                        if (dwFlags != 0x49000000) {
                            // 0x405a9e
                            strcat(str2, " ");
                            strcat(str2, (char *)g130);
                            v50 = dwFlags;
                            // branch -> 0x405ab7
                        }
                        // 0x405ab7
                        v49 = (int32_t)a3;
                        g124 = v49;
                        lpCurrentDirectory = a3;
                        if (v49 != v50) {
                            // 0x405abe
                            if ((int32_t)*a3 == v50) {
                                // 0x405ac2
                                lpCurrentDirectory = (char *)v50;
                                // branch -> 0x405ac5
                            } else {
                                lpCurrentDirectory = a3;
                            }
                        }
                        // 0x405ac5
                        lpProcessAttributes = (int32_t *)v50;
                        v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                        g130 = g11;
                        v61 = dwFlags;
                        if (v21 != false) {
                            // 0x405af1
                            hObject = (int32_t)lpProcessInformation;
                            v60 = 0;
                            if (v61 != 0) {
                                // 0x405af6
                                CloseHandle(hObject);
                                if (dwFlags != 0) {
                                    // 0x405b00
                                    CloseHandle(hObject);
                                    v60 = dwFlags;
                                    // branch -> 0x405b05
                                } else {
                                    v60 = 0;
                                }
                            }
                            // 0x405b05
                            if (v3 != v60) {
                                // 0x405b0a
                                CloseHandle(hObject);
                                // branch -> 0x405b0f
                            }
                            // 0x405b0f
                            CloseHandle(hObject);
                            if (a4 != 1) {
                                // 0x405b1a
                                WaitForSingleObject(hHandle, hObject);
                                // branch -> 0x405b25
                            }
                            // 0x405b25
                            if (v42 == dwFlags) {
                                // 0x405b6f
                                CloseHandle(hObject);
                                v56 = (char *)1;
                                // branch -> 0x405c9e
                            } else {
                                // 0x405b2a
                                g131 = 0x40f594;
                                EnterCriticalSection(lpProcessInformation);
                                v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                                v17 = (struct struct_8 *)v22;
                                g125 = 40;
                                g130 = v22;
                                LeaveCriticalSection(g105);
                                *(int32_t *)g130 = hObject;
                                v17->e1 = v28;
                                v17->e3 = NULL;
                                v17->e2 = NULL;
                                v55 = v2;
                                g124 = v55;
                                v17->e4 = (char *)v55;
                                // branch -> 0x405c89
                                // 0x405c89
                                v56 = (char *)g130;
                                // branch -> 0x405c9e
                            }
                            // 0x405c9e
                            HeapFree((int32_t)v25, dwFlags, str2);
                            g131 = v27;
                            g130 = &v26;
                            g129 = &v1;
                            return (int32_t)v56;
                        }
                        // 0x405b79
                        v62 = 0;
                        if (v61 != 0) {
                            // 0x405b7e
                            CloseHandle(0);
                            if (dwFlags != 0) {
                                // 0x405b88
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b92
                                    CloseHandle(0);
                                    if (dwFlags != 0) {
                                        // 0x405b9c
                                        CloseHandle(0);
                                        v62 = dwFlags;
                                        // branch -> 0x405ba1
                                    } else {
                                        v62 = 0;
                                    }
                                } else {
                                    v62 = 0;
                                }
                            } else {
                                v62 = 0;
                            }
                        }
                        // 0x405ba1
                        hObject2 = v3;
                        v63 = v62;
                        if (hObject2 != v62) {
                            // 0x405ba6
                            CloseHandle(hObject2);
                            v63 = dwFlags;
                            // branch -> 0x405bab
                        }
                        // 0x405bab
                        hObject3 = v2;
                        if (hObject3 != v63) {
                            // 0x405bb0
                            CloseHandle(hObject3);
                            // branch -> 0x405bb5
                        }
                        // 0x405bb5
                        if (a4 == 120) {
                            // 0x405bbf
                            if ((int32_t)lpCurrentDirectory == dwFlags) {
                                // 0x405bc4
                                v37 = g131;
                                len2 = strlen((char *)v37);
                                v43 = g131;
                                v64 = len2 - 1 + v43;
                                g130 = v64;
                                g125 = v37;
                                if (v64 > v43) {
                                    v38 = v64;
                                    while (true) {
                                        // 0x405bd3
                                        if (*(char *)v38 != 92) {
                                            goto lab_0xbff59a0;
                                        }
                                        // 0x405bdd
                                        if (v38 > v43) {
                                            // 0x405be1
                                            strcpy(str2, (char *)v43);
                                            v35 = g130 - g131;
                                            g130 = v35;
                                            g125 = v43;
                                            *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                            // branch -> 0x405bf8
                                        }
                                    }
                                }
                            }
                            // 0x405bf8
                            g130 = 60;
                            memset(v25, dwFlags, 60);
                            g124 = v41;
                            hObject4 = g130;
                            v18 = (int32_t *)hObject4;
                            if (ShellExecuteExA(v18) != false) {
                                // 0x405c4f
                                hHandle2 = (int32_t)v24;
                                WaitForSingleObject(hHandle2, -1);
                                if (v42 == dwFlags) {
                                    // 0x405c8e
                                    CloseHandle(hObject4);
                                    v56 = (char *)1;
                                    // branch -> 0x405c9e
                                } else {
                                    // 0x405c54
                                    g131 = 0x40f594;
                                    lpCriticalSection = g105;
                                    EnterCriticalSection(lpCriticalSection);
                                    v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                    v19 = (struct struct_9 *)v23;
                                    g125 = 40;
                                    g130 = v23;
                                    LeaveCriticalSection(lpCriticalSection);
                                    g124 = hHandle2;
                                    v19->e1 = -1;
                                    *(int32_t *)g130 = g124;
                                    v19->e3 = dwFlags;
                                    v19->e2 = dwFlags;
                                    v19->e4 = dwFlags;
                                    // branch -> 0x405c89
                                    // 0x405c89
                                    v56 = (char *)g130;
                                    // branch -> 0x405c9e
                                }
                                // 0x405c9e
                                HeapFree((int32_t)v18, dwFlags, str2);
                                g131 = v27;
                                g130 = &v26;
                                g129 = &v1;
                                return (int32_t)v56;
                            }
                            v11 = v18;
                        } else {
                            v11 = v25;
                        }
                        // 0x405c9e
                        HeapFree((int32_t)v11, dwFlags, str2);
                        g131 = v27;
                        g130 = &v26;
                        g129 = &v1;
                        return (int32_t)NULL;
                    }
                    break;
                }
            }
            // 0x4059fd
            v57 = dwFlags;
            g130 = g15;
            v58 = v57;
            if ((int32_t)(char *)v67 == v57) {
                // 0x405a08
                GetStdHandle(-10);
                v58 = dwFlags;
                // branch -> 0x405a0f
            }
            // 0x405a0f
            v59 = v58;
            if ((int32_t)v15 == v58) {
                // 0x405a14
                GetStdHandle(-11);
                v59 = dwFlags;
                // branch -> 0x405a1b
            }
            // 0x405a1b
            if ((int32_t)v16 == v59) {
                // 0x405a20
                GetStdHandle(-12);
                // branch -> 0x405a27
            }
            // 0x405a27
            v40 = dwFlags;
            v9 = v40 == a1 ? 0x40c02d : a1;
            g131 = v9;
            str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
            g130 = strlen((char *)v9);
            len = strlen(str);
            v41 = (int32_t)str;
            g125 = v9;
            v10 = *(char *)g34;
            v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
            v36 = g131;
            str3 = (char *)v36;
            str2 = (char *)v20;
            if (*str3 == 34) {
                // 0x405a8e
                strcpy(str2, str3);
                g125 = v36;
                // branch -> 0x405a97
            } else {
                // 0x405a6b
                g130 = 0x40c060;
                strcpy(str2, "\"");
                strcat(str2, (char *)g131);
                strcat(str2, "\"");
                // branch -> 0x405a97
            }
            // 0x405a97
            g130 = v41;
            v50 = 0x49000000;
            if (dwFlags != 0x49000000) {
                // 0x405a9e
                strcat(str2, " ");
                strcat(str2, (char *)g130);
                v50 = dwFlags;
                // branch -> 0x405ab7
            }
            // 0x405ab7
            v49 = (int32_t)a3;
            g124 = v49;
            lpCurrentDirectory = a3;
            if (v49 != v50) {
                // 0x405abe
                if ((int32_t)*a3 == v50) {
                    // 0x405ac2
                    lpCurrentDirectory = (char *)v50;
                    // branch -> 0x405ac5
                } else {
                    lpCurrentDirectory = a3;
                }
            }
            // 0x405ac5
            lpProcessAttributes = (int32_t *)v50;
            v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
            g130 = g11;
            v61 = dwFlags;
            if (v21 != false) {
                // 0x405af1
                hObject = (int32_t)lpProcessInformation;
                v60 = 0;
                if (v61 != 0) {
                    // 0x405af6
                    CloseHandle(hObject);
                    if (dwFlags != 0) {
                        // 0x405b00
                        CloseHandle(hObject);
                        v60 = dwFlags;
                        // branch -> 0x405b05
                    } else {
                        v60 = 0;
                    }
                }
                // 0x405b05
                if (v3 != v60) {
                    // 0x405b0a
                    CloseHandle(hObject);
                    // branch -> 0x405b0f
                }
                // 0x405b0f
                CloseHandle(hObject);
                if (a4 != 1) {
                    // 0x405b1a
                    WaitForSingleObject(hHandle, hObject);
                    // branch -> 0x405b25
                }
                // 0x405b25
                if (v42 == dwFlags) {
                    // 0x405b6f
                    CloseHandle(hObject);
                    v56 = (char *)1;
                    // branch -> 0x405c9e
                } else {
                    // 0x405b2a
                    g131 = 0x40f594;
                    EnterCriticalSection(lpProcessInformation);
                    v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                    v17 = (struct struct_8 *)v22;
                    g125 = 40;
                    g130 = v22;
                    LeaveCriticalSection(g105);
                    *(int32_t *)g130 = hObject;
                    v17->e1 = v28;
                    v17->e3 = NULL;
                    v17->e2 = NULL;
                    v55 = v2;
                    g124 = v55;
                    v17->e4 = (char *)v55;
                    // branch -> 0x405c89
                    // 0x405c89
                    v56 = (char *)g130;
                    // branch -> 0x405c9e
                }
                // 0x405c9e
                HeapFree((int32_t)v25, dwFlags, str2);
                g131 = v27;
                g130 = &v26;
                g129 = &v1;
                return (int32_t)v56;
            }
            // 0x405b79
            v62 = 0;
            if (v61 != 0) {
                // 0x405b7e
                CloseHandle(0);
                if (dwFlags != 0) {
                    // 0x405b88
                    CloseHandle(0);
                    if (dwFlags != 0) {
                        // 0x405b92
                        CloseHandle(0);
                        if (dwFlags != 0) {
                            // 0x405b9c
                            CloseHandle(0);
                            v62 = dwFlags;
                            // branch -> 0x405ba1
                        } else {
                            v62 = 0;
                        }
                    } else {
                        v62 = 0;
                    }
                } else {
                    v62 = 0;
                }
            }
            // 0x405ba1
            hObject2 = v3;
            v63 = v62;
            if (hObject2 != v62) {
                // 0x405ba6
                CloseHandle(hObject2);
                v63 = dwFlags;
                // branch -> 0x405bab
            }
            // 0x405bab
            hObject3 = v2;
            if (hObject3 != v63) {
                // 0x405bb0
                CloseHandle(hObject3);
                // branch -> 0x405bb5
            }
            // 0x405bb5
            if (a4 == 120) {
                // 0x405bbf
                if ((int32_t)lpCurrentDirectory == dwFlags) {
                    // 0x405bc4
                    v37 = g131;
                    len2 = strlen((char *)v37);
                    v43 = g131;
                    v64 = len2 - 1 + v43;
                    g130 = v64;
                    g125 = v37;
                    if (v64 > v43) {
                        v38 = v64;
                        while (true) {
                            // 0x405bd3
                            if (*(char *)v38 != 92) {
                                goto lab_0xbff59a0;
                            }
                            // 0x405bdd
                            if (v38 > v43) {
                                // 0x405be1
                                strcpy(str2, (char *)v43);
                                v35 = g130 - g131;
                                g130 = v35;
                                g125 = v43;
                                *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                // branch -> 0x405bf8
                            }
                        }
                    }
                }
                // 0x405bf8
                g130 = 60;
                memset(v25, dwFlags, 60);
                g124 = v41;
                hObject4 = g130;
                v18 = (int32_t *)hObject4;
                if (ShellExecuteExA(v18) != false) {
                    // 0x405c4f
                    hHandle2 = (int32_t)v24;
                    WaitForSingleObject(hHandle2, -1);
                    if (v42 == dwFlags) {
                        // 0x405c8e
                        CloseHandle(hObject4);
                        v56 = (char *)1;
                        // branch -> 0x405c9e
                    } else {
                        // 0x405c54
                        g131 = 0x40f594;
                        lpCriticalSection = g105;
                        EnterCriticalSection(lpCriticalSection);
                        v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                        v19 = (struct struct_9 *)v23;
                        g125 = 40;
                        g130 = v23;
                        LeaveCriticalSection(lpCriticalSection);
                        g124 = hHandle2;
                        v19->e1 = -1;
                        *(int32_t *)g130 = g124;
                        v19->e3 = dwFlags;
                        v19->e2 = dwFlags;
                        v19->e4 = dwFlags;
                        // branch -> 0x405c89
                        // 0x405c89
                        v56 = (char *)g130;
                        // branch -> 0x405c9e
                    }
                    // 0x405c9e
                    HeapFree((int32_t)v18, dwFlags, str2);
                    g131 = v27;
                    g130 = &v26;
                    g129 = &v1;
                    return (int32_t)v56;
                }
                v11 = v18;
            } else {
                v11 = v25;
            }
            // 0x405c9e
            HeapFree((int32_t)v11, dwFlags, str2);
            g131 = v27;
            g130 = &v26;
            g129 = &v1;
            return (int32_t)NULL;
        }
    }
    // 0x40593e
    char * v68;
    switch (v6) {
        case 4: {
            v54 = v8;
            v34 = NULL;
            v48 = v7;
            // 0x40597b
            v42 = v5 & 4;
            g124 = v42;
            switch (a4) {
                default: {
                    // 0x40598c
                    CreatePipe();
                    v52 = v54;
                    v33 = v34;
                    v13 = v30;
                    v46 = v48;
                    if (g124 != 0) {
                        // 0x4059a3
                        g124 = 0;
                        function_405871(NULL, NULL, 12);
                        v52 = (int32_t *)((int32_t)v54 & -9);
                        v33 = (char *)1;
                        v13 = NULL;
                        v46 = g130 | v48;
                        // branch -> 0x4059bf
                    }
                    // 0x4059bf
                    v51 = v52;
                    v32 = v33;
                    v16 = v29;
                    v15 = v13;
                    v45 = v46;
                    if (a4 != 32) {
                        v47 = v46;
                        v14 = v13;
                        v68 = v33;
                        v53 = v52;
                        // 0x4059c5
                        CreatePipe();
                        if (g124 != 0) {
                            // 0x4059dc
                            v44 = v3;
                            g124 = v44;
                            function_405871((char *)&v2, (char *)&v3, 12);
                            v51 = (int32_t *)((int32_t)v53 & -9);
                            v32 = (char *)1;
                            v16 = (char *)v44;
                            v15 = v14;
                            v45 = g130 | v47;
                            // branch -> 0x4059f8
                        } else {
                            v51 = v53;
                            v32 = v68;
                            v16 = v29;
                            v15 = v14;
                            v45 = v47;
                        }
                    }
                    // 0x4059f8
                    if (g130 == v45) {
                        // 0x405a27
                        v40 = dwFlags;
                        v9 = v40 == a1 ? 0x40c02d : a1;
                        g131 = v9;
                        str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                        g130 = strlen((char *)v9);
                        len = strlen(str);
                        v41 = (int32_t)str;
                        g125 = v9;
                        v10 = *(char *)g34;
                        v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                        v36 = g131;
                        str3 = (char *)v36;
                        str2 = (char *)v20;
                        if (*str3 == 34) {
                            // 0x405a8e
                            strcpy(str2, str3);
                            g125 = v36;
                            // branch -> 0x405a97
                        } else {
                            // 0x405a6b
                            g130 = 0x40c060;
                            strcpy(str2, "\"");
                            strcat(str2, (char *)g131);
                            strcat(str2, "\"");
                            // branch -> 0x405a97
                        }
                        // 0x405a97
                        g130 = v41;
                        v50 = 0x49000000;
                        if (dwFlags != 0x49000000) {
                            // 0x405a9e
                            strcat(str2, " ");
                            strcat(str2, (char *)g130);
                            v50 = dwFlags;
                            // branch -> 0x405ab7
                        }
                        // 0x405ab7
                        v49 = (int32_t)a3;
                        g124 = v49;
                        lpCurrentDirectory = a3;
                        if (v49 != v50) {
                            // 0x405abe
                            if ((int32_t)*a3 == v50) {
                                // 0x405ac2
                                lpCurrentDirectory = (char *)v50;
                                // branch -> 0x405ac5
                            } else {
                                lpCurrentDirectory = a3;
                            }
                        }
                        // 0x405ac5
                        lpProcessAttributes = (int32_t *)v50;
                        v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                        g130 = g11;
                        v61 = dwFlags;
                        if (v21 == false) {
                            // 0x405b79
                            v62 = 0;
                            if (v61 != 0) {
                                // 0x405b7e
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b88
                                    CloseHandle(0);
                                    if (dwFlags != 0) {
                                        // 0x405b92
                                        CloseHandle(0);
                                        if (dwFlags != 0) {
                                            // 0x405b9c
                                            CloseHandle(0);
                                            v62 = dwFlags;
                                            // branch -> 0x405ba1
                                        } else {
                                            v62 = 0;
                                        }
                                    } else {
                                        v62 = 0;
                                    }
                                } else {
                                    v62 = 0;
                                }
                            }
                            // 0x405ba1
                            hObject2 = v3;
                            v63 = v62;
                            if (hObject2 != v62) {
                                // 0x405ba6
                                CloseHandle(hObject2);
                                v63 = dwFlags;
                                // branch -> 0x405bab
                            }
                            // 0x405bab
                            hObject3 = v2;
                            if (hObject3 != v63) {
                                // 0x405bb0
                                CloseHandle(hObject3);
                                // branch -> 0x405bb5
                            }
                            // 0x405bb5
                            if (a4 == 120) {
                                // 0x405bbf
                                if ((int32_t)lpCurrentDirectory == dwFlags) {
                                    // 0x405bc4
                                    v37 = g131;
                                    len2 = strlen((char *)v37);
                                    v43 = g131;
                                    v64 = len2 - 1 + v43;
                                    g130 = v64;
                                    g125 = v37;
                                    if (v64 > v43) {
                                        v38 = v64;
                                        while (true) {
                                            // 0x405bd3
                                            if (*(char *)v38 != 92) {
                                                goto lab_0xbff59a0;
                                            }
                                            // 0x405bdd
                                            if (v38 > v43) {
                                                // 0x405be1
                                                strcpy(str2, (char *)v43);
                                                v35 = g130 - g131;
                                                g130 = v35;
                                                g125 = v43;
                                                *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                                // branch -> 0x405bf8
                                            }
                                        }
                                    }
                                }
                                // 0x405bf8
                                g130 = 60;
                                memset(v25, dwFlags, 60);
                                g124 = v41;
                                hObject4 = g130;
                                v18 = (int32_t *)hObject4;
                                if (ShellExecuteExA(v18) != false) {
                                    // 0x405c4f
                                    hHandle2 = (int32_t)v24;
                                    WaitForSingleObject(hHandle2, -1);
                                    if (v42 == dwFlags) {
                                        // 0x405c8e
                                        CloseHandle(hObject4);
                                        v56 = (char *)1;
                                        // branch -> 0x405c9e
                                    } else {
                                        // 0x405c54
                                        g131 = 0x40f594;
                                        lpCriticalSection = g105;
                                        EnterCriticalSection(lpCriticalSection);
                                        v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                        v19 = (struct struct_9 *)v23;
                                        g125 = 40;
                                        g130 = v23;
                                        LeaveCriticalSection(lpCriticalSection);
                                        g124 = hHandle2;
                                        v19->e1 = -1;
                                        *(int32_t *)g130 = g124;
                                        v19->e3 = dwFlags;
                                        v19->e2 = dwFlags;
                                        v19->e4 = dwFlags;
                                        // branch -> 0x405c89
                                        // 0x405c89
                                        v56 = (char *)g130;
                                        // branch -> 0x405c9e
                                    }
                                    // 0x405c9e
                                    HeapFree((int32_t)v18, dwFlags, str2);
                                    g131 = v27;
                                    g130 = &v26;
                                    g129 = &v1;
                                    return (int32_t)v56;
                                }
                            }
                        } else {
                            // 0x405af1
                            hObject = (int32_t)lpProcessInformation;
                            v60 = 0;
                            if (v61 != 0) {
                                // 0x405af6
                                CloseHandle(hObject);
                                if (dwFlags != 0) {
                                    // 0x405b00
                                    CloseHandle(hObject);
                                    v60 = dwFlags;
                                    // branch -> 0x405b05
                                } else {
                                    v60 = 0;
                                }
                            }
                            // 0x405b05
                            if (v3 != v60) {
                                // 0x405b0a
                                CloseHandle(hObject);
                                // branch -> 0x405b0f
                            }
                            // 0x405b0f
                            CloseHandle(hObject);
                            if (a4 != 1) {
                                // 0x405b1a
                                WaitForSingleObject(hHandle, hObject);
                                // branch -> 0x405b25
                            }
                            // 0x405b25
                            if (v42 == dwFlags) {
                                // 0x405b6f
                                CloseHandle(hObject);
                                // branch -> 0x405c9e
                            } else {
                                // 0x405b2a
                                g131 = 0x40f594;
                                EnterCriticalSection(lpProcessInformation);
                                v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                                v17 = (struct struct_8 *)v22;
                                g125 = 40;
                                g130 = v22;
                                LeaveCriticalSection(g105);
                                *(int32_t *)g130 = hObject;
                                v17->e1 = v28;
                                v17->e3 = NULL;
                                v17->e2 = NULL;
                                v55 = v2;
                                g124 = v55;
                                v17->e4 = (char *)v55;
                                // branch -> 0x405c89
                                // 0x405c89
                                // branch -> 0x405c9e
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    break;
                }
                case 4: {
                    v51 = v54;
                    v32 = v34;
                    v16 = v29;
                    v15 = v30;
                    // 0x4059f8
                    if (g130 == v48) {
                        // 0x405a27
                        v40 = dwFlags;
                        v9 = v40 == a1 ? 0x40c02d : a1;
                        g131 = v9;
                        str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                        g130 = strlen((char *)v9);
                        len = strlen(str);
                        v41 = (int32_t)str;
                        g125 = v9;
                        v10 = *(char *)g34;
                        v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                        v36 = g131;
                        str3 = (char *)v36;
                        str2 = (char *)v20;
                        if (*str3 == 34) {
                            // 0x405a8e
                            strcpy(str2, str3);
                            g125 = v36;
                            // branch -> 0x405a97
                        } else {
                            // 0x405a6b
                            g130 = 0x40c060;
                            strcpy(str2, "\"");
                            strcat(str2, (char *)g131);
                            strcat(str2, "\"");
                            // branch -> 0x405a97
                        }
                        // 0x405a97
                        g130 = v41;
                        v50 = 0x49000000;
                        if (dwFlags != 0x49000000) {
                            // 0x405a9e
                            strcat(str2, " ");
                            strcat(str2, (char *)g130);
                            v50 = dwFlags;
                            // branch -> 0x405ab7
                        }
                        // 0x405ab7
                        v49 = (int32_t)a3;
                        g124 = v49;
                        lpCurrentDirectory = a3;
                        if (v49 != v50) {
                            // 0x405abe
                            if ((int32_t)*a3 == v50) {
                                // 0x405ac2
                                lpCurrentDirectory = (char *)v50;
                                // branch -> 0x405ac5
                            } else {
                                lpCurrentDirectory = a3;
                            }
                        }
                        // 0x405ac5
                        lpProcessAttributes = (int32_t *)v50;
                        v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                        g130 = g11;
                        v61 = dwFlags;
                        if (v21 == false) {
                            // 0x405b79
                            v62 = 0;
                            if (v61 != 0) {
                                // 0x405b7e
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b88
                                    CloseHandle(0);
                                    if (dwFlags != 0) {
                                        // 0x405b92
                                        CloseHandle(0);
                                        if (dwFlags != 0) {
                                            // 0x405b9c
                                            CloseHandle(0);
                                            v62 = dwFlags;
                                            // branch -> 0x405ba1
                                        } else {
                                            v62 = 0;
                                        }
                                    } else {
                                        v62 = 0;
                                    }
                                } else {
                                    v62 = 0;
                                }
                            }
                            // 0x405ba1
                            hObject2 = v3;
                            v63 = v62;
                            if (hObject2 != v62) {
                                // 0x405ba6
                                CloseHandle(hObject2);
                                v63 = dwFlags;
                                // branch -> 0x405bab
                            }
                            // 0x405bab
                            hObject3 = v2;
                            if (hObject3 != v63) {
                                // 0x405bb0
                                CloseHandle(hObject3);
                                // branch -> 0x405bb5
                            }
                            // 0x405bb5
                            if (a4 == 120) {
                                // 0x405bbf
                                if ((int32_t)lpCurrentDirectory == dwFlags) {
                                    // 0x405bc4
                                    v37 = g131;
                                    len2 = strlen((char *)v37);
                                    v43 = g131;
                                    v64 = len2 - 1 + v43;
                                    g130 = v64;
                                    g125 = v37;
                                    if (v64 > v43) {
                                        v38 = v64;
                                        while (true) {
                                            // 0x405bd3
                                            if (*(char *)v38 != 92) {
                                                goto lab_0xbff59a0;
                                            }
                                            // 0x405bdd
                                            if (v38 > v43) {
                                                // 0x405be1
                                                strcpy(str2, (char *)v43);
                                                v35 = g130 - g131;
                                                g130 = v35;
                                                g125 = v43;
                                                *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                                // branch -> 0x405bf8
                                            }
                                        }
                                    }
                                }
                                // 0x405bf8
                                g130 = 60;
                                memset(v25, dwFlags, 60);
                                g124 = v41;
                                hObject4 = g130;
                                if (ShellExecuteExA((int32_t *)hObject4) != false) {
                                    // 0x405c4f
                                    hHandle2 = (int32_t)v24;
                                    WaitForSingleObject(hHandle2, -1);
                                    if (v42 == dwFlags) {
                                        // 0x405c8e
                                        CloseHandle(hObject4);
                                        // branch -> 0x405c9e
                                    } else {
                                        // 0x405c54
                                        g131 = 0x40f594;
                                        lpCriticalSection = g105;
                                        EnterCriticalSection(lpCriticalSection);
                                        v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                        v19 = (struct struct_9 *)v23;
                                        g125 = 40;
                                        g130 = v23;
                                        LeaveCriticalSection(lpCriticalSection);
                                        g124 = hHandle2;
                                        v19->e1 = -1;
                                        *(int32_t *)g130 = g124;
                                        v19->e3 = dwFlags;
                                        v19->e2 = dwFlags;
                                        v19->e4 = dwFlags;
                                        // branch -> 0x405c89
                                        // 0x405c89
                                        // branch -> 0x405c9e
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                            }
                        } else {
                            // 0x405af1
                            hObject = (int32_t)lpProcessInformation;
                            v60 = 0;
                            if (v61 != 0) {
                                // 0x405af6
                                CloseHandle(hObject);
                                if (dwFlags != 0) {
                                    // 0x405b00
                                    CloseHandle(hObject);
                                    v60 = dwFlags;
                                    // branch -> 0x405b05
                                } else {
                                    v60 = 0;
                                }
                            }
                            // 0x405b05
                            if (v3 != v60) {
                                // 0x405b0a
                                CloseHandle(hObject);
                                // branch -> 0x405b0f
                            }
                            // 0x405b0f
                            CloseHandle(hObject);
                            if (a4 != 1) {
                                // 0x405b1a
                                WaitForSingleObject(hHandle, hObject);
                                // branch -> 0x405b25
                            }
                            // 0x405b25
                            if (v42 == dwFlags) {
                                // 0x405b6f
                                CloseHandle(hObject);
                                // branch -> 0x405c9e
                            } else {
                                // 0x405b2a
                                g131 = 0x40f594;
                                EnterCriticalSection(lpProcessInformation);
                                v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                                v17 = (struct struct_8 *)v22;
                                g125 = 40;
                                g130 = v22;
                                LeaveCriticalSection(g105);
                                *(int32_t *)g130 = hObject;
                                v17->e1 = v28;
                                v17->e3 = NULL;
                                v17->e2 = NULL;
                                v55 = v2;
                                g124 = v55;
                                v17->e4 = (char *)v55;
                                // branch -> 0x405c89
                                // 0x405c89
                                // branch -> 0x405c9e
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    break;
                }
                case 8: {
                    v47 = v48;
                    v14 = v30;
                    v53 = v54;
                    // 0x4059c5
                    CreatePipe();
                    v51 = v53;
                    v32 = v34;
                    v16 = v29;
                    v15 = v14;
                    v45 = v47;
                    if (g124 != 0) {
                        // 0x4059dc
                        v44 = v3;
                        g124 = v44;
                        function_405871((char *)&v2, (char *)&v3, 12);
                        v51 = (int32_t *)((int32_t)v53 & -9);
                        v32 = (char *)1;
                        v16 = (char *)v44;
                        v15 = v14;
                        v45 = g130 | v47;
                        // branch -> 0x4059f8
                    }
                    // 0x4059f8
                    if (g130 == v45) {
                        // 0x405a27
                        v40 = dwFlags;
                        v9 = v40 == a1 ? 0x40c02d : a1;
                        g131 = v9;
                        str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                        g130 = strlen((char *)v9);
                        len = strlen(str);
                        v41 = (int32_t)str;
                        g125 = v9;
                        v20 = HeapAlloc((int32_t)*(char *)g34, dwFlags, len + 4 + g130);
                        v36 = g131;
                        str3 = (char *)v36;
                        str2 = (char *)v20;
                        if (*str3 == 34) {
                            // 0x405a8e
                            strcpy(str2, str3);
                            g125 = v36;
                            // branch -> 0x405a97
                        } else {
                            // 0x405a6b
                            g130 = 0x40c060;
                            strcpy(str2, "\"");
                            strcat(str2, (char *)g131);
                            strcat(str2, "\"");
                            // branch -> 0x405a97
                        }
                        // 0x405a97
                        g130 = v41;
                        v50 = 0x49000000;
                        if (dwFlags != 0x49000000) {
                            // 0x405a9e
                            strcat(str2, " ");
                            strcat(str2, (char *)g130);
                            v50 = dwFlags;
                            // branch -> 0x405ab7
                        }
                        // 0x405ab7
                        v49 = (int32_t)a3;
                        g124 = v49;
                        lpCurrentDirectory = a3;
                        if (v49 != v50) {
                            // 0x405abe
                            if ((int32_t)*a3 == v50) {
                                // 0x405ac2
                                lpCurrentDirectory = (char *)v50;
                                // branch -> 0x405ac5
                            } else {
                                lpCurrentDirectory = a3;
                            }
                        }
                        // 0x405ac5
                        lpProcessAttributes = (int32_t *)v50;
                        v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                        g130 = g11;
                        v61 = dwFlags;
                        if (v21 == false) {
                            // 0x405b79
                            v62 = 0;
                            if (v61 != 0) {
                                // 0x405b7e
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b88
                                    CloseHandle(0);
                                    if (dwFlags != 0) {
                                        // 0x405b92
                                        CloseHandle(0);
                                        if (dwFlags != 0) {
                                            // 0x405b9c
                                            CloseHandle(0);
                                            v62 = dwFlags;
                                            // branch -> 0x405ba1
                                        } else {
                                            v62 = 0;
                                        }
                                    } else {
                                        v62 = 0;
                                    }
                                } else {
                                    v62 = 0;
                                }
                            }
                            // 0x405ba1
                            hObject2 = v3;
                            v63 = v62;
                            if (hObject2 != v62) {
                                // 0x405ba6
                                CloseHandle(hObject2);
                                v63 = dwFlags;
                                // branch -> 0x405bab
                            }
                            // 0x405bab
                            hObject3 = v2;
                            if (hObject3 != v63) {
                                // 0x405bb0
                                CloseHandle(hObject3);
                                // branch -> 0x405bb5
                            }
                            // 0x405bb5
                            if (a4 == 120) {
                                // 0x405bbf
                                if ((int32_t)lpCurrentDirectory == dwFlags) {
                                    // 0x405bc4
                                    v37 = g131;
                                    len2 = strlen((char *)v37);
                                    v43 = g131;
                                    v64 = len2 - 1 + v43;
                                    g130 = v64;
                                    g125 = v37;
                                    if (v64 > v43) {
                                        v38 = v64;
                                        while (true) {
                                            // 0x405bd3
                                            if (*(char *)v38 != 92) {
                                                goto lab_0xbff59a0;
                                            }
                                            // 0x405bdd
                                            if (v38 > v43) {
                                                // 0x405be1
                                                strcpy(str2, (char *)v43);
                                                v35 = g130 - g131;
                                                g130 = v35;
                                                g125 = v43;
                                                *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                                // branch -> 0x405bf8
                                            }
                                        }
                                    }
                                }
                                // 0x405bf8
                                g130 = 60;
                                memset(v25, dwFlags, 60);
                                g124 = v41;
                                hObject4 = g130;
                                if (ShellExecuteExA((int32_t *)hObject4) != false) {
                                    // 0x405c4f
                                    hHandle2 = (int32_t)v24;
                                    WaitForSingleObject(hHandle2, -1);
                                    if (v42 == dwFlags) {
                                        // 0x405c8e
                                        CloseHandle(hObject4);
                                        // branch -> 0x405c9e
                                    } else {
                                        // 0x405c54
                                        g131 = 0x40f594;
                                        lpCriticalSection = g105;
                                        EnterCriticalSection(lpCriticalSection);
                                        v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                        v19 = (struct struct_9 *)v23;
                                        g125 = 40;
                                        g130 = v23;
                                        LeaveCriticalSection(lpCriticalSection);
                                        g124 = hHandle2;
                                        v19->e1 = -1;
                                        *(int32_t *)g130 = g124;
                                        v19->e3 = dwFlags;
                                        v19->e2 = dwFlags;
                                        v19->e4 = dwFlags;
                                        // branch -> 0x405c89
                                        // 0x405c89
                                        // branch -> 0x405c9e
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                            }
                        } else {
                            // 0x405af1
                            hObject = (int32_t)lpProcessInformation;
                            v60 = 0;
                            if (v61 != 0) {
                                // 0x405af6
                                CloseHandle(hObject);
                                if (dwFlags != 0) {
                                    // 0x405b00
                                    CloseHandle(hObject);
                                    v60 = dwFlags;
                                    // branch -> 0x405b05
                                } else {
                                    v60 = 0;
                                }
                            }
                            // 0x405b05
                            if (v3 != v60) {
                                // 0x405b0a
                                CloseHandle(hObject);
                                // branch -> 0x405b0f
                            }
                            // 0x405b0f
                            CloseHandle(hObject);
                            if (a4 != 1) {
                                // 0x405b1a
                                WaitForSingleObject(hHandle, hObject);
                                // branch -> 0x405b25
                            }
                            // 0x405b25
                            if (v42 == dwFlags) {
                                // 0x405b6f
                                CloseHandle(hObject);
                                // branch -> 0x405c9e
                            } else {
                                // 0x405b2a
                                g131 = 0x40f594;
                                EnterCriticalSection(lpProcessInformation);
                                v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                                v17 = (struct struct_8 *)v22;
                                g125 = 40;
                                g130 = v22;
                                LeaveCriticalSection(g105);
                                *(int32_t *)g130 = hObject;
                                v17->e1 = v28;
                                v17->e3 = NULL;
                                v17->e2 = NULL;
                                v55 = v2;
                                g124 = v55;
                                v17->e4 = (char *)v55;
                                // branch -> 0x405c89
                                // 0x405c89
                                // branch -> 0x405c9e
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    break;
                }
            }
            // 0x4059fd
            v57 = dwFlags;
            g130 = g15;
            v58 = v57;
            if ((int32_t)v31 == v57) {
                // 0x405a08
                GetStdHandle(-10);
                v58 = dwFlags;
                // branch -> 0x405a0f
            }
            // 0x405a0f
            v59 = v58;
            if ((int32_t)v15 == v58) {
                // 0x405a14
                GetStdHandle(-11);
                v59 = dwFlags;
                // branch -> 0x405a1b
            }
            // 0x405a1b
            if ((int32_t)v16 == v59) {
                // 0x405a20
                GetStdHandle(-12);
                // branch -> 0x405a27
            }
            // 0x405a27
            v40 = dwFlags;
            v9 = v40 == a1 ? 0x40c02d : a1;
            g131 = v9;
            str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
            g130 = strlen((char *)v9);
            len = strlen(str);
            v41 = (int32_t)str;
            g125 = v9;
            v10 = *(char *)g34;
            v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
            v36 = g131;
            str3 = (char *)v36;
            str2 = (char *)v20;
            if (*str3 == 34) {
                // 0x405a8e
                strcpy(str2, str3);
                g125 = v36;
                // branch -> 0x405a97
            } else {
                // 0x405a6b
                g130 = 0x40c060;
                strcpy(str2, "\"");
                strcat(str2, (char *)g131);
                strcat(str2, "\"");
                // branch -> 0x405a97
            }
            // 0x405a97
            g130 = v41;
            v50 = 0x49000000;
            if (dwFlags != 0x49000000) {
                // 0x405a9e
                strcat(str2, " ");
                strcat(str2, (char *)g130);
                v50 = dwFlags;
                // branch -> 0x405ab7
            }
            // 0x405ab7
            v49 = (int32_t)a3;
            g124 = v49;
            lpCurrentDirectory = a3;
            if (v49 != v50) {
                // 0x405abe
                if ((int32_t)*a3 == v50) {
                    // 0x405ac2
                    lpCurrentDirectory = (char *)v50;
                    // branch -> 0x405ac5
                } else {
                    lpCurrentDirectory = a3;
                }
            }
            // 0x405ac5
            lpProcessAttributes = (int32_t *)v50;
            v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
            g130 = g11;
            v61 = dwFlags;
            if (v21 == false) {
                // 0x405b79
                v62 = 0;
                if (v61 != 0) {
                    // 0x405b7e
                    CloseHandle(0);
                    if (dwFlags != 0) {
                        // 0x405b88
                        CloseHandle(0);
                        if (dwFlags != 0) {
                            // 0x405b92
                            CloseHandle(0);
                            if (dwFlags != 0) {
                                // 0x405b9c
                                CloseHandle(0);
                                v62 = dwFlags;
                                // branch -> 0x405ba1
                            } else {
                                v62 = 0;
                            }
                        } else {
                            v62 = 0;
                        }
                    } else {
                        v62 = 0;
                    }
                }
                // 0x405ba1
                hObject2 = v3;
                v63 = v62;
                if (hObject2 != v62) {
                    // 0x405ba6
                    CloseHandle(hObject2);
                    v63 = dwFlags;
                    // branch -> 0x405bab
                }
                // 0x405bab
                hObject3 = v2;
                if (hObject3 != v63) {
                    // 0x405bb0
                    CloseHandle(hObject3);
                    // branch -> 0x405bb5
                }
                // 0x405bb5
                if (a4 == 120) {
                    // 0x405bbf
                    if ((int32_t)lpCurrentDirectory == dwFlags) {
                        // 0x405bc4
                        v37 = g131;
                        len2 = strlen((char *)v37);
                        v43 = g131;
                        v64 = len2 - 1 + v43;
                        g130 = v64;
                        g125 = v37;
                        if (v64 > v43) {
                            v38 = v64;
                            while (true) {
                                // 0x405bd3
                                if (*(char *)v38 != 92) {
                                    goto lab_0xbff59a0;
                                }
                                // 0x405bdd
                                if (v38 > v43) {
                                    // 0x405be1
                                    strcpy(str2, (char *)v43);
                                    v35 = g130 - g131;
                                    g130 = v35;
                                    g125 = v43;
                                    *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                    // branch -> 0x405bf8
                                }
                            }
                        }
                    }
                    // 0x405bf8
                    g130 = 60;
                    memset(v25, dwFlags, 60);
                    g124 = v41;
                    hObject4 = g130;
                    if (ShellExecuteExA((int32_t *)hObject4) != false) {
                        // 0x405c4f
                        hHandle2 = (int32_t)v24;
                        WaitForSingleObject(hHandle2, -1);
                        if (v42 == dwFlags) {
                            // 0x405c8e
                            CloseHandle(hObject4);
                            // branch -> 0x405c9e
                        } else {
                            // 0x405c54
                            g131 = 0x40f594;
                            lpCriticalSection = g105;
                            EnterCriticalSection(lpCriticalSection);
                            v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                            v19 = (struct struct_9 *)v23;
                            g125 = 40;
                            g130 = v23;
                            LeaveCriticalSection(lpCriticalSection);
                            g124 = hHandle2;
                            v19->e1 = -1;
                            *(int32_t *)g130 = g124;
                            v19->e3 = dwFlags;
                            v19->e2 = dwFlags;
                            v19->e4 = dwFlags;
                            // branch -> 0x405c89
                            // 0x405c89
                            // branch -> 0x405c9e
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                }
            } else {
                // 0x405af1
                hObject = (int32_t)lpProcessInformation;
                v60 = 0;
                if (v61 != 0) {
                    // 0x405af6
                    CloseHandle(hObject);
                    if (dwFlags != 0) {
                        // 0x405b00
                        CloseHandle(hObject);
                        v60 = dwFlags;
                        // branch -> 0x405b05
                    } else {
                        v60 = 0;
                    }
                }
                // 0x405b05
                if (v3 != v60) {
                    // 0x405b0a
                    CloseHandle(hObject);
                    // branch -> 0x405b0f
                }
                // 0x405b0f
                CloseHandle(hObject);
                if (a4 != 1) {
                    // 0x405b1a
                    WaitForSingleObject(hHandle, hObject);
                    // branch -> 0x405b25
                }
                // 0x405b25
                if (v42 == dwFlags) {
                    // 0x405b6f
                    CloseHandle(hObject);
                    // branch -> 0x405c9e
                } else {
                    // 0x405b2a
                    g131 = 0x40f594;
                    EnterCriticalSection(lpProcessInformation);
                    v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                    v17 = (struct struct_8 *)v22;
                    g125 = 40;
                    g130 = v22;
                    LeaveCriticalSection(g105);
                    *(int32_t *)g130 = hObject;
                    v17->e1 = v28;
                    v17->e3 = NULL;
                    v17->e2 = NULL;
                    v55 = v2;
                    g124 = v55;
                    v17->e4 = (char *)v55;
                    // branch -> 0x405c89
                    // 0x405c89
                    // branch -> 0x405c9e
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            }
            // Detected a possible infinite recursion (goto support failed); quitting...
            break;
        }
        case 16: {
            v54 = v8;
            v34 = NULL;
            v48 = v7;
            // 0x40597b
            v42 = v5 & 4;
            g124 = v42;
            switch (a4) {
                default: {
                    // 0x40598c
                    CreatePipe();
                    v52 = v54;
                    v33 = v34;
                    v13 = v30;
                    v46 = v48;
                    if (g124 != 0) {
                        // 0x4059a3
                        g124 = 0;
                        function_405871(NULL, NULL, 12);
                        v52 = (int32_t *)((int32_t)v54 & -9);
                        v33 = (char *)1;
                        v13 = NULL;
                        v46 = g130 | v48;
                        // branch -> 0x4059bf
                    }
                    // 0x4059bf
                    v51 = v52;
                    v32 = v33;
                    v16 = v29;
                    v15 = v13;
                    v45 = v46;
                    if (a4 != 32) {
                        v47 = v46;
                        v14 = v13;
                        v68 = v33;
                        v53 = v52;
                        // 0x4059c5
                        CreatePipe();
                        if (g124 != 0) {
                            // 0x4059dc
                            v44 = v3;
                            g124 = v44;
                            function_405871((char *)&v2, (char *)&v3, 12);
                            v51 = (int32_t *)((int32_t)v53 & -9);
                            v32 = (char *)1;
                            v16 = (char *)v44;
                            v15 = v14;
                            v45 = g130 | v47;
                            // branch -> 0x4059f8
                        } else {
                            v51 = v53;
                            v32 = v68;
                            v16 = v29;
                            v15 = v14;
                            v45 = v47;
                        }
                    }
                    // 0x4059f8
                    if (g130 == v45) {
                        // 0x405a27
                        v40 = dwFlags;
                        v9 = v40 == a1 ? 0x40c02d : a1;
                        g131 = v9;
                        str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                        g130 = strlen((char *)v9);
                        len = strlen(str);
                        v41 = (int32_t)str;
                        g125 = v9;
                        v10 = *(char *)g34;
                        v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                        v36 = g131;
                        str3 = (char *)v36;
                        str2 = (char *)v20;
                        if (*str3 == 34) {
                            // 0x405a8e
                            strcpy(str2, str3);
                            g125 = v36;
                            // branch -> 0x405a97
                        } else {
                            // 0x405a6b
                            g130 = 0x40c060;
                            strcpy(str2, "\"");
                            strcat(str2, (char *)g131);
                            strcat(str2, "\"");
                            // branch -> 0x405a97
                        }
                        // 0x405a97
                        g130 = v41;
                        v50 = 0x49000000;
                        if (dwFlags != 0x49000000) {
                            // 0x405a9e
                            strcat(str2, " ");
                            strcat(str2, (char *)g130);
                            v50 = dwFlags;
                            // branch -> 0x405ab7
                        }
                        // 0x405ab7
                        v49 = (int32_t)a3;
                        g124 = v49;
                        lpCurrentDirectory = a3;
                        if (v49 != v50) {
                            // 0x405abe
                            if ((int32_t)*a3 == v50) {
                                // 0x405ac2
                                lpCurrentDirectory = (char *)v50;
                                // branch -> 0x405ac5
                            } else {
                                lpCurrentDirectory = a3;
                            }
                        }
                        // 0x405ac5
                        lpProcessAttributes = (int32_t *)v50;
                        v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                        g130 = g11;
                        v61 = dwFlags;
                        if (v21 == false) {
                            // 0x405b79
                            v62 = 0;
                            if (v61 != 0) {
                                // 0x405b7e
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b88
                                    CloseHandle(0);
                                    if (dwFlags != 0) {
                                        // 0x405b92
                                        CloseHandle(0);
                                        if (dwFlags != 0) {
                                            // 0x405b9c
                                            CloseHandle(0);
                                            v62 = dwFlags;
                                            // branch -> 0x405ba1
                                        } else {
                                            v62 = 0;
                                        }
                                    } else {
                                        v62 = 0;
                                    }
                                } else {
                                    v62 = 0;
                                }
                            }
                            // 0x405ba1
                            hObject2 = v3;
                            v63 = v62;
                            if (hObject2 != v62) {
                                // 0x405ba6
                                CloseHandle(hObject2);
                                v63 = dwFlags;
                                // branch -> 0x405bab
                            }
                            // 0x405bab
                            hObject3 = v2;
                            if (hObject3 != v63) {
                                // 0x405bb0
                                CloseHandle(hObject3);
                                // branch -> 0x405bb5
                            }
                            // 0x405bb5
                            if (a4 == 120) {
                                // 0x405bbf
                                if ((int32_t)lpCurrentDirectory == dwFlags) {
                                    // 0x405bc4
                                    v37 = g131;
                                    len2 = strlen((char *)v37);
                                    v43 = g131;
                                    v64 = len2 - 1 + v43;
                                    g130 = v64;
                                    g125 = v37;
                                    if (v64 > v43) {
                                        v38 = v64;
                                        while (true) {
                                            // 0x405bd3
                                            if (*(char *)v38 != 92) {
                                                goto lab_0xbff59a0;
                                            }
                                            // 0x405bdd
                                            if (v38 > v43) {
                                                // 0x405be1
                                                strcpy(str2, (char *)v43);
                                                v35 = g130 - g131;
                                                g130 = v35;
                                                g125 = v43;
                                                *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                                // branch -> 0x405bf8
                                            }
                                        }
                                    }
                                }
                                // 0x405bf8
                                g130 = 60;
                                memset(v25, dwFlags, 60);
                                g124 = v41;
                                hObject4 = g130;
                                if (ShellExecuteExA((int32_t *)hObject4) != false) {
                                    // 0x405c4f
                                    hHandle2 = (int32_t)v24;
                                    WaitForSingleObject(hHandle2, -1);
                                    if (v42 == dwFlags) {
                                        // 0x405c8e
                                        CloseHandle(hObject4);
                                        // branch -> 0x405c9e
                                    } else {
                                        // 0x405c54
                                        g131 = 0x40f594;
                                        lpCriticalSection = g105;
                                        EnterCriticalSection(lpCriticalSection);
                                        v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                        v19 = (struct struct_9 *)v23;
                                        g125 = 40;
                                        g130 = v23;
                                        LeaveCriticalSection(lpCriticalSection);
                                        g124 = hHandle2;
                                        v19->e1 = -1;
                                        *(int32_t *)g130 = g124;
                                        v19->e3 = dwFlags;
                                        v19->e2 = dwFlags;
                                        v19->e4 = dwFlags;
                                        // branch -> 0x405c89
                                        // 0x405c89
                                        // branch -> 0x405c9e
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                            }
                        } else {
                            // 0x405af1
                            hObject = (int32_t)lpProcessInformation;
                            v60 = 0;
                            if (v61 != 0) {
                                // 0x405af6
                                CloseHandle(hObject);
                                if (dwFlags != 0) {
                                    // 0x405b00
                                    CloseHandle(hObject);
                                    v60 = dwFlags;
                                    // branch -> 0x405b05
                                } else {
                                    v60 = 0;
                                }
                            }
                            // 0x405b05
                            if (v3 != v60) {
                                // 0x405b0a
                                CloseHandle(hObject);
                                // branch -> 0x405b0f
                            }
                            // 0x405b0f
                            CloseHandle(hObject);
                            if (a4 != 1) {
                                // 0x405b1a
                                WaitForSingleObject(hHandle, hObject);
                                // branch -> 0x405b25
                            }
                            // 0x405b25
                            if (v42 == dwFlags) {
                                // 0x405b6f
                                CloseHandle(hObject);
                                // branch -> 0x405c9e
                            } else {
                                // 0x405b2a
                                g131 = 0x40f594;
                                EnterCriticalSection(lpProcessInformation);
                                v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                                v17 = (struct struct_8 *)v22;
                                g125 = 40;
                                g130 = v22;
                                LeaveCriticalSection(g105);
                                *(int32_t *)g130 = hObject;
                                v17->e1 = v28;
                                v17->e3 = NULL;
                                v17->e2 = NULL;
                                v55 = v2;
                                g124 = v55;
                                v17->e4 = (char *)v55;
                                // branch -> 0x405c89
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    break;
                }
                case 4: {
                    v51 = v54;
                    v32 = v34;
                    v16 = v29;
                    v15 = v30;
                    // 0x4059f8
                    if (g130 == v48) {
                        // 0x405a27
                        v40 = dwFlags;
                        v9 = v40 == a1 ? 0x40c02d : a1;
                        g131 = v9;
                        str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                        g130 = strlen((char *)v9);
                        len = strlen(str);
                        v41 = (int32_t)str;
                        g125 = v9;
                        v10 = *(char *)g34;
                        v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                        v36 = g131;
                        str3 = (char *)v36;
                        str2 = (char *)v20;
                        if (*str3 == 34) {
                            // 0x405a8e
                            strcpy(str2, str3);
                            g125 = v36;
                            // branch -> 0x405a97
                        } else {
                            // 0x405a6b
                            g130 = 0x40c060;
                            strcpy(str2, "\"");
                            strcat(str2, (char *)g131);
                            strcat(str2, "\"");
                            // branch -> 0x405a97
                        }
                        // 0x405a97
                        g130 = v41;
                        v50 = 0x49000000;
                        if (dwFlags != 0x49000000) {
                            // 0x405a9e
                            strcat(str2, " ");
                            strcat(str2, (char *)g130);
                            v50 = dwFlags;
                            // branch -> 0x405ab7
                        }
                        // 0x405ab7
                        v49 = (int32_t)a3;
                        g124 = v49;
                        lpCurrentDirectory = a3;
                        if (v49 != v50) {
                            // 0x405abe
                            if ((int32_t)*a3 == v50) {
                                // 0x405ac2
                                lpCurrentDirectory = (char *)v50;
                                // branch -> 0x405ac5
                            } else {
                                lpCurrentDirectory = a3;
                            }
                        }
                        // 0x405ac5
                        lpProcessAttributes = (int32_t *)v50;
                        v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                        g130 = g11;
                        v61 = dwFlags;
                        if (v21 == false) {
                            // 0x405b79
                            v62 = 0;
                            if (v61 != 0) {
                                // 0x405b7e
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b88
                                    CloseHandle(0);
                                    if (dwFlags != 0) {
                                        // 0x405b92
                                        CloseHandle(0);
                                        if (dwFlags != 0) {
                                            // 0x405b9c
                                            CloseHandle(0);
                                            v62 = dwFlags;
                                            // branch -> 0x405ba1
                                        } else {
                                            v62 = 0;
                                        }
                                    } else {
                                        v62 = 0;
                                    }
                                } else {
                                    v62 = 0;
                                }
                            }
                            // 0x405ba1
                            hObject2 = v3;
                            v63 = v62;
                            if (hObject2 != v62) {
                                // 0x405ba6
                                CloseHandle(hObject2);
                                v63 = dwFlags;
                                // branch -> 0x405bab
                            }
                            // 0x405bab
                            hObject3 = v2;
                            if (hObject3 != v63) {
                                // 0x405bb0
                                CloseHandle(hObject3);
                                // branch -> 0x405bb5
                            }
                            // 0x405bb5
                            if (a4 == 120) {
                                // 0x405bbf
                                if ((int32_t)lpCurrentDirectory == dwFlags) {
                                    // 0x405bc4
                                    v37 = g131;
                                    len2 = strlen((char *)v37);
                                    v43 = g131;
                                    v64 = len2 - 1 + v43;
                                    g130 = v64;
                                    g125 = v37;
                                    if (v64 > v43) {
                                        v38 = v64;
                                        while (true) {
                                            // 0x405bd3
                                            if (*(char *)v38 != 92) {
                                                goto lab_0xbff59a0;
                                            }
                                            // 0x405bdd
                                            if (v38 > v43) {
                                                // 0x405be1
                                                strcpy(str2, (char *)v43);
                                                v35 = g130 - g131;
                                                g130 = v35;
                                                g125 = v43;
                                                *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                                // branch -> 0x405bf8
                                            }
                                        }
                                    }
                                }
                                // 0x405bf8
                                g130 = 60;
                                memset(v25, dwFlags, 60);
                                g124 = v41;
                                hObject4 = g130;
                                if (ShellExecuteExA((int32_t *)hObject4) != false) {
                                    // 0x405c4f
                                    hHandle2 = (int32_t)v24;
                                    WaitForSingleObject(hHandle2, -1);
                                    if (v42 == dwFlags) {
                                        // 0x405c8e
                                        CloseHandle(hObject4);
                                        // branch -> 0x405c9e
                                    } else {
                                        // 0x405c54
                                        g131 = 0x40f594;
                                        lpCriticalSection = g105;
                                        EnterCriticalSection(lpCriticalSection);
                                        v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                        v19 = (struct struct_9 *)v23;
                                        g125 = 40;
                                        g130 = v23;
                                        LeaveCriticalSection(lpCriticalSection);
                                        g124 = hHandle2;
                                        v19->e1 = -1;
                                        *(int32_t *)g130 = g124;
                                        v19->e3 = dwFlags;
                                        v19->e2 = dwFlags;
                                        v19->e4 = dwFlags;
                                        // branch -> 0x405c89
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                            }
                        } else {
                            // 0x405af1
                            hObject = (int32_t)lpProcessInformation;
                            v60 = 0;
                            if (v61 != 0) {
                                // 0x405af6
                                CloseHandle(hObject);
                                if (dwFlags != 0) {
                                    // 0x405b00
                                    CloseHandle(hObject);
                                    v60 = dwFlags;
                                    // branch -> 0x405b05
                                } else {
                                    v60 = 0;
                                }
                            }
                            // 0x405b05
                            if (v3 != v60) {
                                // 0x405b0a
                                CloseHandle(hObject);
                                // branch -> 0x405b0f
                            }
                            // 0x405b0f
                            CloseHandle(hObject);
                            if (a4 != 1) {
                                // 0x405b1a
                                WaitForSingleObject(hHandle, hObject);
                                // branch -> 0x405b25
                            }
                            // 0x405b25
                            if (v42 == dwFlags) {
                                // 0x405b6f
                                CloseHandle(hObject);
                                // branch -> 0x405c9e
                            } else {
                                // 0x405b2a
                                g131 = 0x40f594;
                                EnterCriticalSection(lpProcessInformation);
                                v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                                v17 = (struct struct_8 *)v22;
                                g125 = 40;
                                g130 = v22;
                                LeaveCriticalSection(g105);
                                *(int32_t *)g130 = hObject;
                                v17->e1 = v28;
                                v17->e3 = NULL;
                                v17->e2 = NULL;
                                v55 = v2;
                                g124 = v55;
                                v17->e4 = (char *)v55;
                                // branch -> 0x405c89
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    break;
                }
                case 8: {
                    v47 = v48;
                    v14 = v30;
                    v53 = v54;
                    // 0x4059c5
                    CreatePipe();
                    v51 = v53;
                    v32 = v34;
                    v16 = v29;
                    v15 = v14;
                    v45 = v47;
                    if (g124 != 0) {
                        // 0x4059dc
                        v44 = v3;
                        g124 = v44;
                        function_405871((char *)&v2, (char *)&v3, 12);
                        v51 = (int32_t *)((int32_t)v53 & -9);
                        v32 = (char *)1;
                        v16 = (char *)v44;
                        v15 = v14;
                        v45 = g130 | v47;
                        // branch -> 0x4059f8
                    }
                    // 0x4059f8
                    if (g130 == v45) {
                        // 0x405a27
                        v40 = dwFlags;
                        v9 = v40 == a1 ? 0x40c02d : a1;
                        g131 = v9;
                        str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                        g130 = strlen((char *)v9);
                        len = strlen(str);
                        v41 = (int32_t)str;
                        g125 = v9;
                        v10 = *(char *)g34;
                        v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                        v36 = g131;
                        str3 = (char *)v36;
                        str2 = (char *)v20;
                        if (*str3 == 34) {
                            // 0x405a8e
                            strcpy(str2, str3);
                            g125 = v36;
                            // branch -> 0x405a97
                        } else {
                            // 0x405a6b
                            g130 = 0x40c060;
                            strcpy(str2, "\"");
                            strcat(str2, (char *)g131);
                            strcat(str2, "\"");
                            // branch -> 0x405a97
                        }
                        // 0x405a97
                        g130 = v41;
                        v50 = 0x49000000;
                        if (dwFlags != 0x49000000) {
                            // 0x405a9e
                            strcat(str2, " ");
                            strcat(str2, (char *)g130);
                            v50 = dwFlags;
                            // branch -> 0x405ab7
                        }
                        // 0x405ab7
                        v49 = (int32_t)a3;
                        g124 = v49;
                        lpCurrentDirectory = a3;
                        if (v49 != v50) {
                            // 0x405abe
                            if ((int32_t)*a3 == v50) {
                                // 0x405ac2
                                lpCurrentDirectory = (char *)v50;
                                // branch -> 0x405ac5
                            } else {
                                lpCurrentDirectory = a3;
                            }
                        }
                        // 0x405ac5
                        lpProcessAttributes = (int32_t *)v50;
                        v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                        g130 = g11;
                        v61 = dwFlags;
                        if (v21 == false) {
                            // 0x405b79
                            v62 = 0;
                            if (v61 != 0) {
                                // 0x405b7e
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b88
                                    CloseHandle(0);
                                    if (dwFlags != 0) {
                                        // 0x405b92
                                        CloseHandle(0);
                                        if (dwFlags != 0) {
                                            // 0x405b9c
                                            CloseHandle(0);
                                            v62 = dwFlags;
                                            // branch -> 0x405ba1
                                        } else {
                                            v62 = 0;
                                        }
                                    } else {
                                        v62 = 0;
                                    }
                                } else {
                                    v62 = 0;
                                }
                            }
                            // 0x405ba1
                            hObject2 = v3;
                            v63 = v62;
                            if (hObject2 != v62) {
                                // 0x405ba6
                                CloseHandle(hObject2);
                                v63 = dwFlags;
                                // branch -> 0x405bab
                            }
                            // 0x405bab
                            hObject3 = v2;
                            if (hObject3 != v63) {
                                // 0x405bb0
                                CloseHandle(hObject3);
                                // branch -> 0x405bb5
                            }
                            // 0x405bb5
                            if (a4 == 120) {
                                // 0x405bbf
                                if ((int32_t)lpCurrentDirectory == dwFlags) {
                                    // 0x405bc4
                                    v37 = g131;
                                    len2 = strlen((char *)v37);
                                    v43 = g131;
                                    v64 = len2 - 1 + v43;
                                    g130 = v64;
                                    g125 = v37;
                                    if (v64 > v43) {
                                        v38 = v64;
                                        while (true) {
                                            // 0x405bd3
                                            if (*(char *)v38 != 92) {
                                                goto lab_0xbff59a0;
                                            }
                                            // 0x405bdd
                                            if (v38 > v43) {
                                                // 0x405be1
                                                strcpy(str2, (char *)v43);
                                                v35 = g130 - g131;
                                                g130 = v35;
                                                g125 = v43;
                                                *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                                // branch -> 0x405bf8
                                            }
                                        }
                                    }
                                }
                                // 0x405bf8
                                g130 = 60;
                                memset(v25, dwFlags, 60);
                                g124 = v41;
                                hObject4 = g130;
                                if (ShellExecuteExA((int32_t *)hObject4) != false) {
                                    // 0x405c4f
                                    hHandle2 = (int32_t)v24;
                                    WaitForSingleObject(hHandle2, -1);
                                    if (v42 == dwFlags) {
                                        // 0x405c8e
                                        CloseHandle(hObject4);
                                        // branch -> 0x405c9e
                                    } else {
                                        // 0x405c54
                                        g131 = 0x40f594;
                                        lpCriticalSection = g105;
                                        EnterCriticalSection(lpCriticalSection);
                                        v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                        v19 = (struct struct_9 *)v23;
                                        g125 = 40;
                                        g130 = v23;
                                        LeaveCriticalSection(lpCriticalSection);
                                        g124 = hHandle2;
                                        v19->e1 = -1;
                                        *(int32_t *)g130 = g124;
                                        v19->e3 = dwFlags;
                                        v19->e2 = dwFlags;
                                        v19->e4 = dwFlags;
                                        // branch -> 0x405c89
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                            }
                        } else {
                            // 0x405af1
                            hObject = (int32_t)lpProcessInformation;
                            v60 = 0;
                            if (v61 != 0) {
                                // 0x405af6
                                CloseHandle(hObject);
                                if (dwFlags != 0) {
                                    // 0x405b00
                                    CloseHandle(hObject);
                                    v60 = dwFlags;
                                    // branch -> 0x405b05
                                } else {
                                    v60 = 0;
                                }
                            }
                            // 0x405b05
                            if (v3 != v60) {
                                // 0x405b0a
                                CloseHandle(hObject);
                                // branch -> 0x405b0f
                            }
                            // 0x405b0f
                            CloseHandle(hObject);
                            if (a4 != 1) {
                                // 0x405b1a
                                WaitForSingleObject(hHandle, hObject);
                                // branch -> 0x405b25
                            }
                            // 0x405b25
                            if (v42 == dwFlags) {
                                // 0x405b6f
                                CloseHandle(hObject);
                                // branch -> 0x405c9e
                            } else {
                                // 0x405b2a
                                g131 = 0x40f594;
                                EnterCriticalSection(lpProcessInformation);
                                v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                                v17 = (struct struct_8 *)v22;
                                g125 = 40;
                                g130 = v22;
                                LeaveCriticalSection(g105);
                                *(int32_t *)g130 = hObject;
                                v17->e1 = v28;
                                v17->e3 = NULL;
                                v17->e2 = NULL;
                                v55 = v2;
                                g124 = v55;
                                v17->e4 = (char *)v55;
                                // branch -> 0x405c89
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    break;
                }
            }
            // 0x4059fd
            v57 = dwFlags;
            g130 = g15;
            v58 = v57;
            if ((int32_t)v31 == v57) {
                // 0x405a08
                GetStdHandle(-10);
                v58 = dwFlags;
                // branch -> 0x405a0f
            }
            // 0x405a0f
            v59 = v58;
            if ((int32_t)v15 == v58) {
                // 0x405a14
                GetStdHandle(-11);
                v59 = dwFlags;
                // branch -> 0x405a1b
            }
            // 0x405a1b
            if ((int32_t)v16 == v59) {
                // 0x405a20
                GetStdHandle(-12);
                // branch -> 0x405a27
            }
            // 0x405a27
            v40 = dwFlags;
            v9 = v40 == a1 ? 0x40c02d : a1;
            g131 = v9;
            str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
            g130 = strlen((char *)v9);
            len = strlen(str);
            v41 = (int32_t)str;
            g125 = v9;
            v10 = *(char *)g34;
            v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
            v36 = g131;
            str3 = (char *)v36;
            str2 = (char *)v20;
            if (*str3 == 34) {
                // 0x405a8e
                strcpy(str2, str3);
                g125 = v36;
                // branch -> 0x405a97
            } else {
                // 0x405a6b
                g130 = 0x40c060;
                strcpy(str2, "\"");
                strcat(str2, (char *)g131);
                strcat(str2, "\"");
                // branch -> 0x405a97
            }
            // 0x405a97
            g130 = v41;
            v50 = 0x49000000;
            if (dwFlags != 0x49000000) {
                // 0x405a9e
                strcat(str2, " ");
                strcat(str2, (char *)g130);
                v50 = dwFlags;
                // branch -> 0x405ab7
            }
            // 0x405ab7
            v49 = (int32_t)a3;
            g124 = v49;
            lpCurrentDirectory = a3;
            if (v49 != v50) {
                // 0x405abe
                if ((int32_t)*a3 == v50) {
                    // 0x405ac2
                    lpCurrentDirectory = (char *)v50;
                    // branch -> 0x405ac5
                } else {
                    lpCurrentDirectory = a3;
                }
            }
            // 0x405ac5
            lpProcessAttributes = (int32_t *)v50;
            v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
            g130 = g11;
            v61 = dwFlags;
            if (v21 == false) {
                // 0x405b79
                v62 = 0;
                if (v61 != 0) {
                    // 0x405b7e
                    CloseHandle(0);
                    if (dwFlags != 0) {
                        // 0x405b88
                        CloseHandle(0);
                        if (dwFlags != 0) {
                            // 0x405b92
                            CloseHandle(0);
                            if (dwFlags != 0) {
                                // 0x405b9c
                                CloseHandle(0);
                                v62 = dwFlags;
                                // branch -> 0x405ba1
                            } else {
                                v62 = 0;
                            }
                        } else {
                            v62 = 0;
                        }
                    } else {
                        v62 = 0;
                    }
                }
                // 0x405ba1
                hObject2 = v3;
                v63 = v62;
                if (hObject2 != v62) {
                    // 0x405ba6
                    CloseHandle(hObject2);
                    v63 = dwFlags;
                    // branch -> 0x405bab
                }
                // 0x405bab
                hObject3 = v2;
                if (hObject3 != v63) {
                    // 0x405bb0
                    CloseHandle(hObject3);
                    // branch -> 0x405bb5
                }
                // 0x405bb5
                if (a4 == 120) {
                    // 0x405bbf
                    if ((int32_t)lpCurrentDirectory == dwFlags) {
                        // 0x405bc4
                        v37 = g131;
                        len2 = strlen((char *)v37);
                        v43 = g131;
                        v64 = len2 - 1 + v43;
                        g130 = v64;
                        g125 = v37;
                        if (v64 > v43) {
                            v38 = v64;
                            while (true) {
                                // 0x405bd3
                                if (*(char *)v38 != 92) {
                                    goto lab_0xbff59a0;
                                }
                                // 0x405bdd
                                if (v38 > v43) {
                                    // 0x405be1
                                    strcpy(str2, (char *)v43);
                                    v35 = g130 - g131;
                                    g130 = v35;
                                    g125 = v43;
                                    *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                    // branch -> 0x405bf8
                                }
                            }
                        }
                    }
                    // 0x405bf8
                    g130 = 60;
                    memset(v25, dwFlags, 60);
                    g124 = v41;
                    hObject4 = g130;
                    if (ShellExecuteExA((int32_t *)hObject4) != false) {
                        // 0x405c4f
                        hHandle2 = (int32_t)v24;
                        WaitForSingleObject(hHandle2, -1);
                        if (v42 == dwFlags) {
                            // 0x405c8e
                            CloseHandle(hObject4);
                            // branch -> 0x405c9e
                        } else {
                            // 0x405c54
                            g131 = 0x40f594;
                            lpCriticalSection = g105;
                            EnterCriticalSection(lpCriticalSection);
                            v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                            v19 = (struct struct_9 *)v23;
                            g125 = 40;
                            g130 = v23;
                            LeaveCriticalSection(lpCriticalSection);
                            g124 = hHandle2;
                            v19->e1 = -1;
                            *(int32_t *)g130 = g124;
                            v19->e3 = dwFlags;
                            v19->e2 = dwFlags;
                            v19->e4 = dwFlags;
                            // branch -> 0x405c89
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                }
            } else {
                // 0x405af1
                hObject = (int32_t)lpProcessInformation;
                v60 = 0;
                if (v61 != 0) {
                    // 0x405af6
                    CloseHandle(hObject);
                    if (dwFlags != 0) {
                        // 0x405b00
                        CloseHandle(hObject);
                        v60 = dwFlags;
                        // branch -> 0x405b05
                    } else {
                        v60 = 0;
                    }
                }
                // 0x405b05
                if (v3 != v60) {
                    // 0x405b0a
                    CloseHandle(hObject);
                    // branch -> 0x405b0f
                }
                // 0x405b0f
                CloseHandle(hObject);
                if (a4 != 1) {
                    // 0x405b1a
                    WaitForSingleObject(hHandle, hObject);
                    // branch -> 0x405b25
                }
                // 0x405b25
                if (v42 == dwFlags) {
                    // 0x405b6f
                    CloseHandle(hObject);
                    // branch -> 0x405c9e
                } else {
                    // 0x405b2a
                    g131 = 0x40f594;
                    EnterCriticalSection(lpProcessInformation);
                    v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                    v17 = (struct struct_8 *)v22;
                    g125 = 40;
                    g130 = v22;
                    LeaveCriticalSection(g105);
                    *(int32_t *)g130 = hObject;
                    v17->e1 = v28;
                    v17->e3 = NULL;
                    v17->e2 = NULL;
                    v55 = v2;
                    g124 = v55;
                    v17->e4 = (char *)v55;
                    // branch -> 0x405c89
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            }
            // Detected a possible infinite recursion (goto support failed); quitting...
            break;
        }
    }
    // 0x405948
    CreatePipe();
    if (g124 != 0) {
        // 0x40595f
        g124 = 0;
        function_405871(NULL, NULL, 12);
        v54 = (int32_t *)32;
        v34 = (char *)1;
        v12 = NULL;
        v48 = g130 | v7;
        // branch -> 0x40597b
    } else {
        v54 = v8;
        v34 = NULL;
        v12 = v31;
        v48 = v7;
    }
    // 0x40597b
    v42 = v5 & 4;
    g124 = v42;
    switch (a4) {
        default: {
            // 0x40598c
            CreatePipe();
            v52 = v54;
            v33 = v34;
            v13 = v30;
            v46 = v48;
            if (g124 != 0) {
                // 0x4059a3
                g124 = 0;
                function_405871(NULL, NULL, 12);
                v52 = (int32_t *)((int32_t)v54 & -9);
                v33 = (char *)1;
                v13 = NULL;
                v46 = g130 | v48;
                // branch -> 0x4059bf
            }
            // 0x4059bf
            v51 = v52;
            v32 = v33;
            v16 = v29;
            v15 = v13;
            v45 = v46;
            if (a4 != 32) {
                v47 = v46;
                v14 = v13;
                v68 = v33;
                v53 = v52;
                // 0x4059c5
                CreatePipe();
                if (g124 != 0) {
                    // 0x4059dc
                    v44 = v3;
                    g124 = v44;
                    function_405871((char *)&v2, (char *)&v3, 12);
                    v51 = (int32_t *)((int32_t)v53 & -9);
                    v32 = (char *)1;
                    v16 = (char *)v44;
                    v15 = v14;
                    v45 = g130 | v47;
                    // branch -> 0x4059f8
                } else {
                    v51 = v53;
                    v32 = v68;
                    v16 = v29;
                    v15 = v14;
                    v45 = v47;
                }
            }
            // 0x4059f8
            if (g130 == v45) {
                // 0x405a27
                v40 = dwFlags;
                v9 = v40 == a1 ? 0x40c02d : a1;
                g131 = v9;
                str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                g130 = strlen((char *)v9);
                len = strlen(str);
                v41 = (int32_t)str;
                g125 = v9;
                v10 = *(char *)g34;
                v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                v36 = g131;
                str3 = (char *)v36;
                str2 = (char *)v20;
                if (*str3 == 34) {
                    // 0x405a8e
                    strcpy(str2, str3);
                    g125 = v36;
                    // branch -> 0x405a97
                } else {
                    // 0x405a6b
                    g130 = 0x40c060;
                    strcpy(str2, "\"");
                    strcat(str2, (char *)g131);
                    strcat(str2, "\"");
                    // branch -> 0x405a97
                }
                // 0x405a97
                g130 = v41;
                v50 = 0x49000000;
                if (dwFlags != 0x49000000) {
                    // 0x405a9e
                    strcat(str2, " ");
                    strcat(str2, (char *)g130);
                    v50 = dwFlags;
                    // branch -> 0x405ab7
                }
                // 0x405ab7
                v49 = (int32_t)a3;
                g124 = v49;
                lpCurrentDirectory = a3;
                if (v49 != v50) {
                    // 0x405abe
                    if ((int32_t)*a3 == v50) {
                        // 0x405ac2
                        lpCurrentDirectory = (char *)v50;
                        // branch -> 0x405ac5
                    } else {
                        lpCurrentDirectory = a3;
                    }
                }
                // 0x405ac5
                lpProcessAttributes = (int32_t *)v50;
                v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                g130 = g11;
                v61 = dwFlags;
                if (v21 == false) {
                    // 0x405b79
                    v62 = 0;
                    if (v61 != 0) {
                        // 0x405b7e
                        CloseHandle(0);
                        if (dwFlags != 0) {
                            // 0x405b88
                            CloseHandle(0);
                            if (dwFlags != 0) {
                                // 0x405b92
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b9c
                                    CloseHandle(0);
                                    v62 = dwFlags;
                                    // branch -> 0x405ba1
                                } else {
                                    v62 = 0;
                                }
                            } else {
                                v62 = 0;
                            }
                        } else {
                            v62 = 0;
                        }
                    }
                    // 0x405ba1
                    hObject2 = v3;
                    v63 = v62;
                    if (hObject2 != v62) {
                        // 0x405ba6
                        CloseHandle(hObject2);
                        v63 = dwFlags;
                        // branch -> 0x405bab
                    }
                    // 0x405bab
                    hObject3 = v2;
                    if (hObject3 != v63) {
                        // 0x405bb0
                        CloseHandle(hObject3);
                        // branch -> 0x405bb5
                    }
                    // 0x405bb5
                    if (a4 == 120) {
                        // 0x405bbf
                        if ((int32_t)lpCurrentDirectory == dwFlags) {
                            // 0x405bc4
                            v37 = g131;
                            len2 = strlen((char *)v37);
                            v43 = g131;
                            v64 = len2 - 1 + v43;
                            g130 = v64;
                            g125 = v37;
                            if (v64 > v43) {
                                v38 = v64;
                                while (true) {
                                    // 0x405bd3
                                    if (*(char *)v38 != 92) {
                                        goto lab_0xbff59a0;
                                    }
                                    // 0x405bdd
                                    if (v38 > v43) {
                                        // 0x405be1
                                        strcpy(str2, (char *)v43);
                                        v35 = g130 - g131;
                                        g130 = v35;
                                        g125 = v43;
                                        *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                        // branch -> 0x405bf8
                                    }
                                }
                            }
                        }
                        // 0x405bf8
                        g130 = 60;
                        memset(v25, dwFlags, 60);
                        g124 = v41;
                        hObject4 = g130;
                        if (ShellExecuteExA((int32_t *)hObject4) != false) {
                            // 0x405c4f
                            hHandle2 = (int32_t)v24;
                            WaitForSingleObject(hHandle2, -1);
                            if (v42 == dwFlags) {
                                // 0x405c8e
                                CloseHandle(hObject4);
                                // branch -> 0x405c9e
                            } else {
                                // 0x405c54
                                g131 = 0x40f594;
                                lpCriticalSection = g105;
                                EnterCriticalSection(lpCriticalSection);
                                v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                v19 = (struct struct_9 *)v23;
                                g125 = 40;
                                g130 = v23;
                                LeaveCriticalSection(lpCriticalSection);
                                g124 = hHandle2;
                                v19->e1 = -1;
                                *(int32_t *)g130 = g124;
                                v19->e3 = dwFlags;
                                v19->e2 = dwFlags;
                                v19->e4 = dwFlags;
                                // branch -> 0x405c89
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                    }
                } else {
                    // 0x405af1
                    hObject = (int32_t)lpProcessInformation;
                    v60 = 0;
                    if (v61 != 0) {
                        // 0x405af6
                        CloseHandle(hObject);
                        if (dwFlags != 0) {
                            // 0x405b00
                            CloseHandle(hObject);
                            v60 = dwFlags;
                            // branch -> 0x405b05
                        } else {
                            v60 = 0;
                        }
                    }
                    // 0x405b05
                    if (v3 != v60) {
                        // 0x405b0a
                        CloseHandle(hObject);
                        // branch -> 0x405b0f
                    }
                    // 0x405b0f
                    CloseHandle(hObject);
                    if (a4 != 1) {
                        // 0x405b1a
                        WaitForSingleObject(hHandle, hObject);
                        // branch -> 0x405b25
                    }
                    // 0x405b25
                    if (v42 == dwFlags) {
                        // 0x405b6f
                        CloseHandle(hObject);
                        // branch -> 0x405c9e
                    } else {
                        // 0x405b2a
                        g131 = 0x40f594;
                        EnterCriticalSection(lpProcessInformation);
                        v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                        v17 = (struct struct_8 *)v22;
                        g125 = 40;
                        g130 = v22;
                        LeaveCriticalSection(g105);
                        *(int32_t *)g130 = hObject;
                        v17->e1 = v28;
                        v17->e3 = NULL;
                        v17->e2 = NULL;
                        v55 = v2;
                        g124 = v55;
                        v17->e4 = (char *)v55;
                        // branch -> 0x405c89
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            }
            break;
        }
        case 4: {
            v51 = v54;
            v32 = v34;
            v16 = v29;
            v15 = v30;
            // 0x4059f8
            if (g130 == v48) {
                // 0x405a27
                v40 = dwFlags;
                v9 = v40 == a1 ? 0x40c02d : a1;
                g131 = v9;
                str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                g130 = strlen((char *)v9);
                len = strlen(str);
                v41 = (int32_t)str;
                g125 = v9;
                v10 = *(char *)g34;
                v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                v36 = g131;
                str3 = (char *)v36;
                str2 = (char *)v20;
                if (*str3 == 34) {
                    // 0x405a8e
                    strcpy(str2, str3);
                    g125 = v36;
                    // branch -> 0x405a97
                } else {
                    // 0x405a6b
                    g130 = 0x40c060;
                    strcpy(str2, "\"");
                    strcat(str2, (char *)g131);
                    strcat(str2, "\"");
                    // branch -> 0x405a97
                }
                // 0x405a97
                g130 = v41;
                v50 = 0x49000000;
                if (dwFlags != 0x49000000) {
                    // 0x405a9e
                    strcat(str2, " ");
                    strcat(str2, (char *)g130);
                    v50 = dwFlags;
                    // branch -> 0x405ab7
                }
                // 0x405ab7
                v49 = (int32_t)a3;
                g124 = v49;
                lpCurrentDirectory = a3;
                if (v49 != v50) {
                    // 0x405abe
                    if ((int32_t)*a3 == v50) {
                        // 0x405ac2
                        lpCurrentDirectory = (char *)v50;
                        // branch -> 0x405ac5
                    } else {
                        lpCurrentDirectory = a3;
                    }
                }
                // 0x405ac5
                lpProcessAttributes = (int32_t *)v50;
                v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                g130 = g11;
                v61 = dwFlags;
                if (v21 == false) {
                    // 0x405b79
                    v62 = 0;
                    if (v61 != 0) {
                        // 0x405b7e
                        CloseHandle(0);
                        if (dwFlags != 0) {
                            // 0x405b88
                            CloseHandle(0);
                            if (dwFlags != 0) {
                                // 0x405b92
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b9c
                                    CloseHandle(0);
                                    v62 = dwFlags;
                                    // branch -> 0x405ba1
                                } else {
                                    v62 = 0;
                                }
                            } else {
                                v62 = 0;
                            }
                        } else {
                            v62 = 0;
                        }
                    }
                    // 0x405ba1
                    hObject2 = v3;
                    v63 = v62;
                    if (hObject2 != v62) {
                        // 0x405ba6
                        CloseHandle(hObject2);
                        v63 = dwFlags;
                        // branch -> 0x405bab
                    }
                    // 0x405bab
                    hObject3 = v2;
                    if (hObject3 != v63) {
                        // 0x405bb0
                        CloseHandle(hObject3);
                        // branch -> 0x405bb5
                    }
                    // 0x405bb5
                    if (a4 == 120) {
                        // 0x405bbf
                        if ((int32_t)lpCurrentDirectory == dwFlags) {
                            // 0x405bc4
                            v37 = g131;
                            len2 = strlen((char *)v37);
                            v43 = g131;
                            v64 = len2 - 1 + v43;
                            g130 = v64;
                            g125 = v37;
                            if (v64 > v43) {
                                v38 = v64;
                                while (true) {
                                    // 0x405bd3
                                    if (*(char *)v38 != 92) {
                                        goto lab_0xbff59a0;
                                    }
                                    // 0x405bdd
                                    if (v38 > v43) {
                                        // 0x405be1
                                        strcpy(str2, (char *)v43);
                                        v35 = g130 - g131;
                                        g130 = v35;
                                        g125 = v43;
                                        *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                        // branch -> 0x405bf8
                                    }
                                }
                            }
                        }
                        // 0x405bf8
                        g130 = 60;
                        memset(v25, dwFlags, 60);
                        g124 = v41;
                        hObject4 = g130;
                        if (ShellExecuteExA((int32_t *)hObject4) != false) {
                            // 0x405c4f
                            hHandle2 = (int32_t)v24;
                            WaitForSingleObject(hHandle2, -1);
                            if (v42 == dwFlags) {
                                // 0x405c8e
                                CloseHandle(hObject4);
                                // branch -> 0x405c9e
                            } else {
                                // 0x405c54
                                g131 = 0x40f594;
                                lpCriticalSection = g105;
                                EnterCriticalSection(lpCriticalSection);
                                v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                v19 = (struct struct_9 *)v23;
                                g125 = 40;
                                g130 = v23;
                                LeaveCriticalSection(lpCriticalSection);
                                g124 = hHandle2;
                                v19->e1 = -1;
                                *(int32_t *)g130 = g124;
                                v19->e3 = dwFlags;
                                v19->e2 = dwFlags;
                                v19->e4 = dwFlags;
                                // branch -> 0x405c89
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                    }
                } else {
                    // 0x405af1
                    hObject = (int32_t)lpProcessInformation;
                    v60 = 0;
                    if (v61 != 0) {
                        // 0x405af6
                        CloseHandle(hObject);
                        if (dwFlags != 0) {
                            // 0x405b00
                            CloseHandle(hObject);
                            v60 = dwFlags;
                            // branch -> 0x405b05
                        } else {
                            v60 = 0;
                        }
                    }
                    // 0x405b05
                    if (v3 != v60) {
                        // 0x405b0a
                        CloseHandle(hObject);
                        // branch -> 0x405b0f
                    }
                    // 0x405b0f
                    CloseHandle(hObject);
                    if (a4 != 1) {
                        // 0x405b1a
                        WaitForSingleObject(hHandle, hObject);
                        // branch -> 0x405b25
                    }
                    // 0x405b25
                    if (v42 == dwFlags) {
                        // 0x405b6f
                        CloseHandle(hObject);
                        // branch -> 0x405c9e
                    } else {
                        // 0x405b2a
                        g131 = 0x40f594;
                        EnterCriticalSection(lpProcessInformation);
                        v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                        v17 = (struct struct_8 *)v22;
                        g125 = 40;
                        g130 = v22;
                        LeaveCriticalSection(g105);
                        *(int32_t *)g130 = hObject;
                        v17->e1 = v28;
                        v17->e3 = NULL;
                        v17->e2 = NULL;
                        v55 = v2;
                        g124 = v55;
                        v17->e4 = (char *)v55;
                        // branch -> 0x405c89
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            }
            break;
        }
        case 8: {
            v47 = v48;
            v14 = v30;
            v53 = v54;
            // 0x4059c5
            CreatePipe();
            v51 = v53;
            v32 = v34;
            v16 = v29;
            v15 = v14;
            v45 = v47;
            if (g124 != 0) {
                // 0x4059dc
                v44 = v3;
                g124 = v44;
                function_405871((char *)&v2, (char *)&v3, 12);
                v51 = (int32_t *)((int32_t)v53 & -9);
                v32 = (char *)1;
                v16 = (char *)v44;
                v15 = v14;
                v45 = g130 | v47;
                // branch -> 0x4059f8
            }
            // 0x4059f8
            if (g130 == v45) {
                // 0x405a27
                v40 = dwFlags;
                v9 = v40 == a1 ? 0x40c02d : a1;
                g131 = v9;
                str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                g130 = strlen((char *)v9);
                len = strlen(str);
                v41 = (int32_t)str;
                g125 = v9;
                v10 = *(char *)g34;
                v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                v36 = g131;
                str3 = (char *)v36;
                str2 = (char *)v20;
                if (*str3 == 34) {
                    // 0x405a8e
                    strcpy(str2, str3);
                    g125 = v36;
                    // branch -> 0x405a97
                } else {
                    // 0x405a6b
                    g130 = 0x40c060;
                    strcpy(str2, "\"");
                    strcat(str2, (char *)g131);
                    strcat(str2, "\"");
                    // branch -> 0x405a97
                }
                // 0x405a97
                g130 = v41;
                v50 = 0x49000000;
                if (dwFlags != 0x49000000) {
                    // 0x405a9e
                    strcat(str2, " ");
                    strcat(str2, (char *)g130);
                    v50 = dwFlags;
                    // branch -> 0x405ab7
                }
                // 0x405ab7
                v49 = (int32_t)a3;
                g124 = v49;
                lpCurrentDirectory = a3;
                if (v49 != v50) {
                    // 0x405abe
                    if ((int32_t)*a3 == v50) {
                        // 0x405ac2
                        lpCurrentDirectory = (char *)v50;
                        // branch -> 0x405ac5
                    } else {
                        lpCurrentDirectory = a3;
                    }
                }
                // 0x405ac5
                lpProcessAttributes = (int32_t *)v50;
                v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                g130 = g11;
                v61 = dwFlags;
                if (v21 == false) {
                    // 0x405b79
                    v62 = 0;
                    if (v61 != 0) {
                        // 0x405b7e
                        CloseHandle(0);
                        if (dwFlags != 0) {
                            // 0x405b88
                            CloseHandle(0);
                            if (dwFlags != 0) {
                                // 0x405b92
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b9c
                                    CloseHandle(0);
                                    v62 = dwFlags;
                                    // branch -> 0x405ba1
                                } else {
                                    v62 = 0;
                                }
                            } else {
                                v62 = 0;
                            }
                        } else {
                            v62 = 0;
                        }
                    }
                    // 0x405ba1
                    hObject2 = v3;
                    v63 = v62;
                    if (hObject2 != v62) {
                        // 0x405ba6
                        CloseHandle(hObject2);
                        v63 = dwFlags;
                        // branch -> 0x405bab
                    }
                    // 0x405bab
                    hObject3 = v2;
                    if (hObject3 != v63) {
                        // 0x405bb0
                        CloseHandle(hObject3);
                        // branch -> 0x405bb5
                    }
                    // 0x405bb5
                    if (a4 == 120) {
                        // 0x405bbf
                        if ((int32_t)lpCurrentDirectory == dwFlags) {
                            // 0x405bc4
                            v37 = g131;
                            len2 = strlen((char *)v37);
                            v43 = g131;
                            v64 = len2 - 1 + v43;
                            g130 = v64;
                            g125 = v37;
                            if (v64 > v43) {
                                v38 = v64;
                                while (true) {
                                    // 0x405bd3
                                    if (*(char *)v38 != 92) {
                                        goto lab_0xbff59a0;
                                    }
                                    // 0x405bdd
                                    if (v38 > v43) {
                                        // 0x405be1
                                        strcpy(str2, (char *)v43);
                                        v35 = g130 - g131;
                                        g130 = v35;
                                        g125 = v43;
                                        *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                        // branch -> 0x405bf8
                                    }
                                }
                            }
                        }
                        // 0x405bf8
                        g130 = 60;
                        memset(v25, dwFlags, 60);
                        g124 = v41;
                        hObject4 = g130;
                        if (ShellExecuteExA((int32_t *)hObject4) != false) {
                            // 0x405c4f
                            hHandle2 = (int32_t)v24;
                            WaitForSingleObject(hHandle2, -1);
                            if (v42 == dwFlags) {
                                // 0x405c8e
                                CloseHandle(hObject4);
                                // branch -> 0x405c9e
                            } else {
                                // 0x405c54
                                g131 = 0x40f594;
                                lpCriticalSection = g105;
                                EnterCriticalSection(lpCriticalSection);
                                v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                v19 = (struct struct_9 *)v23;
                                g125 = 40;
                                g130 = v23;
                                LeaveCriticalSection(lpCriticalSection);
                                g124 = hHandle2;
                                v19->e1 = -1;
                                *(int32_t *)g130 = g124;
                                v19->e3 = dwFlags;
                                v19->e2 = dwFlags;
                                v19->e4 = dwFlags;
                                // branch -> 0x405c89
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                    }
                } else {
                    // 0x405af1
                    hObject = (int32_t)lpProcessInformation;
                    v60 = 0;
                    if (v61 != 0) {
                        // 0x405af6
                        CloseHandle(hObject);
                        if (dwFlags != 0) {
                            // 0x405b00
                            CloseHandle(hObject);
                            v60 = dwFlags;
                            // branch -> 0x405b05
                        } else {
                            v60 = 0;
                        }
                    }
                    // 0x405b05
                    if (v3 != v60) {
                        // 0x405b0a
                        CloseHandle(hObject);
                        // branch -> 0x405b0f
                    }
                    // 0x405b0f
                    CloseHandle(hObject);
                    if (a4 != 1) {
                        // 0x405b1a
                        WaitForSingleObject(hHandle, hObject);
                        // branch -> 0x405b25
                    }
                    // 0x405b25
                    if (v42 == dwFlags) {
                        // 0x405b6f
                        CloseHandle(hObject);
                        // branch -> 0x405c9e
                    } else {
                        // 0x405b2a
                        g131 = 0x40f594;
                        EnterCriticalSection(lpProcessInformation);
                        v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                        v17 = (struct struct_8 *)v22;
                        g125 = 40;
                        g130 = v22;
                        LeaveCriticalSection(g105);
                        *(int32_t *)g130 = hObject;
                        v17->e1 = v28;
                        v17->e3 = NULL;
                        v17->e2 = NULL;
                        v55 = v2;
                        g124 = v55;
                        v17->e4 = (char *)v55;
                        // branch -> 0x405c89
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            }
            break;
        }
    }
    // 0x4059fd
    v57 = dwFlags;
    g130 = g15;
    v58 = v57;
    if ((int32_t)v12 == v57) {
        // 0x405a08
        GetStdHandle(-10);
        v58 = dwFlags;
        // branch -> 0x405a0f
    }
    // 0x405a0f
    v59 = v58;
    if ((int32_t)v15 == v58) {
        // 0x405a14
        GetStdHandle(-11);
        v59 = dwFlags;
        // branch -> 0x405a1b
    }
    // 0x405a1b
    if ((int32_t)v16 == v59) {
        // 0x405a20
        GetStdHandle(-12);
        // branch -> 0x405a27
    }
    // 0x405a27
    v40 = dwFlags;
    v9 = v40 == a1 ? 0x40c02d : a1;
    g131 = v9;
    str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
    g130 = strlen((char *)v9);
    len = strlen(str);
    v41 = (int32_t)str;
    g125 = v9;
    v10 = *(char *)g34;
    v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
    v36 = g131;
    str3 = (char *)v36;
    str2 = (char *)v20;
    if (*str3 == 34) {
        // 0x405a8e
        strcpy(str2, str3);
        g125 = v36;
        // branch -> 0x405a97
    } else {
        // 0x405a6b
        g130 = 0x40c060;
        strcpy(str2, "\"");
        strcat(str2, (char *)g131);
        strcat(str2, "\"");
        // branch -> 0x405a97
    }
    // 0x405a97
    g130 = v41;
    v50 = 0x49000000;
    if (dwFlags != 0x49000000) {
        // 0x405a9e
        strcat(str2, " ");
        strcat(str2, (char *)g130);
        v50 = dwFlags;
        // branch -> 0x405ab7
    }
    // 0x405ab7
    v49 = (int32_t)a3;
    g124 = v49;
    lpCurrentDirectory = a3;
    if (v49 != v50) {
        // 0x405abe
        if ((int32_t)*a3 == v50) {
            // 0x405ac2
            lpCurrentDirectory = (char *)v50;
            // branch -> 0x405ac5
        } else {
            lpCurrentDirectory = a3;
        }
    }
    // 0x405ac5
    lpProcessAttributes = (int32_t *)v50;
    v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
    g130 = g11;
    v61 = dwFlags;
    if (v21 == false) {
        // 0x405b79
        v62 = 0;
        if (v61 != 0) {
            // 0x405b7e
            CloseHandle(0);
            if (dwFlags != 0) {
                // 0x405b88
                CloseHandle(0);
                if (dwFlags != 0) {
                    // 0x405b92
                    CloseHandle(0);
                    if (dwFlags != 0) {
                        // 0x405b9c
                        CloseHandle(0);
                        v62 = dwFlags;
                        // branch -> 0x405ba1
                    } else {
                        v62 = 0;
                    }
                } else {
                    v62 = 0;
                }
            } else {
                v62 = 0;
            }
        }
        // 0x405ba1
        hObject2 = v3;
        v63 = v62;
        if (hObject2 != v62) {
            // 0x405ba6
            CloseHandle(hObject2);
            v63 = dwFlags;
            // branch -> 0x405bab
        }
        // 0x405bab
        hObject3 = v2;
        if (hObject3 != v63) {
            // 0x405bb0
            CloseHandle(hObject3);
            // branch -> 0x405bb5
        }
        // 0x405bb5
        if (a4 == 120) {
            // 0x405bbf
            if ((int32_t)lpCurrentDirectory == dwFlags) {
                // 0x405bc4
                v37 = g131;
                len2 = strlen((char *)v37);
                v43 = g131;
                v64 = len2 - 1 + v43;
                g130 = v64;
                g125 = v37;
                if (v64 > v43) {
                    v38 = v64;
                    while (true) {
                        // 0x405bd3
                        if (*(char *)v38 != 92) {
                            goto lab_0xbff59a0;
                        }
                        // 0x405bdd
                        if (v38 > v43) {
                            // 0x405be1
                            strcpy(str2, (char *)v43);
                            v35 = g130 - g131;
                            g130 = v35;
                            g125 = v43;
                            *(char *)(v20 + 1 + v35) = (char)dwFlags;
                            // branch -> 0x405bf8
                        }
                    }
                }
            }
            // 0x405bf8
            g130 = 60;
            memset(v25, dwFlags, 60);
            g124 = v41;
            hObject4 = g130;
            if (ShellExecuteExA((int32_t *)hObject4) != false) {
                // 0x405c4f
                hHandle2 = (int32_t)v24;
                WaitForSingleObject(hHandle2, -1);
                if (v42 == dwFlags) {
                    // 0x405c8e
                    CloseHandle(hObject4);
                    // branch -> 0x405c9e
                } else {
                    // 0x405c54
                    g131 = 0x40f594;
                    lpCriticalSection = g105;
                    EnterCriticalSection(lpCriticalSection);
                    v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                    v19 = (struct struct_9 *)v23;
                    g125 = 40;
                    g130 = v23;
                    LeaveCriticalSection(lpCriticalSection);
                    g124 = hHandle2;
                    v19->e1 = -1;
                    *(int32_t *)g130 = g124;
                    v19->e3 = dwFlags;
                    v19->e2 = dwFlags;
                    v19->e4 = dwFlags;
                    // branch -> 0x405c89
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            }
        }
    } else {
        // 0x405af1
        hObject = (int32_t)lpProcessInformation;
        v60 = 0;
        if (v61 != 0) {
            // 0x405af6
            CloseHandle(hObject);
            if (dwFlags != 0) {
                // 0x405b00
                CloseHandle(hObject);
                v60 = dwFlags;
                // branch -> 0x405b05
            } else {
                v60 = 0;
            }
        }
        // 0x405b05
        if (v3 != v60) {
            // 0x405b0a
            CloseHandle(hObject);
            // branch -> 0x405b0f
        }
        // 0x405b0f
        CloseHandle(hObject);
        if (a4 != 1) {
            // 0x405b1a
            WaitForSingleObject(hHandle, hObject);
            // branch -> 0x405b25
        }
        // 0x405b25
        if (v42 == dwFlags) {
            // 0x405b6f
            CloseHandle(hObject);
            // branch -> 0x405c9e
        } else {
            // 0x405b2a
            g131 = 0x40f594;
            EnterCriticalSection(lpProcessInformation);
            v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
            v17 = (struct struct_8 *)v22;
            g125 = 40;
            g130 = v22;
            LeaveCriticalSection(g105);
            *(int32_t *)g130 = hObject;
            v17->e1 = v28;
            v17->e3 = NULL;
            v17->e2 = NULL;
            v55 = v2;
            g124 = v55;
            v17->e4 = (char *)v55;
            // branch -> 0x405c89
            // Detected a possible infinite recursion (goto support failed); quitting...
        }
        // Detected a possible infinite recursion (goto support failed); quitting...
    }
    // Detected a possible infinite recursion (goto support failed); quitting...
    // 0x40597b
    v42 = v5 & 4;
    g124 = v42;
    switch (a4) {
        default: {
            // 0x40598c
            CreatePipe();
            v52 = v54;
            v33 = v34;
            v13 = v30;
            v46 = v48;
            if (g124 != 0) {
                // 0x4059a3
                g124 = 0;
                function_405871(NULL, NULL, 12);
                v52 = (int32_t *)((int32_t)v54 & -9);
                v33 = (char *)1;
                v13 = NULL;
                v46 = g130 | v48;
                // branch -> 0x4059bf
            }
            // 0x4059bf
            v51 = v52;
            v32 = v33;
            v16 = v29;
            v15 = v13;
            v45 = v46;
            if (a4 != 32) {
                v47 = v46;
                v14 = v13;
                v53 = v52;
                // 0x4059c5
                CreatePipe();
                if (g124 != 0) {
                    // 0x4059dc
                    v44 = v3;
                    g124 = v44;
                    function_405871((char *)&v2, (char *)&v3, 12);
                    v51 = (int32_t *)((int32_t)v53 & -9);
                    v32 = (char *)1;
                    v16 = (char *)v44;
                    v15 = v14;
                    v45 = g130 | v47;
                    // branch -> 0x4059f8
                } else {
                    v51 = v53;
                    v32 = v33;
                    v16 = v29;
                    v15 = v14;
                    v45 = v47;
                }
            }
            // 0x4059f8
            if (g130 == v45) {
                // 0x405a27
                v40 = dwFlags;
                v9 = v40 == a1 ? 0x40c02d : a1;
                g131 = v9;
                str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                g130 = strlen((char *)v9);
                len = strlen(str);
                v41 = (int32_t)str;
                g125 = v9;
                v10 = *(char *)g34;
                v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                v36 = g131;
                str3 = (char *)v36;
                str2 = (char *)v20;
                if (*str3 == 34) {
                    // 0x405a8e
                    strcpy(str2, str3);
                    g125 = v36;
                    // branch -> 0x405a97
                } else {
                    // 0x405a6b
                    g130 = 0x40c060;
                    strcpy(str2, "\"");
                    strcat(str2, (char *)g131);
                    strcat(str2, "\"");
                    // branch -> 0x405a97
                }
                // 0x405a97
                g130 = v41;
                v50 = 0x49000000;
                if (dwFlags != 0x49000000) {
                    // 0x405a9e
                    strcat(str2, " ");
                    strcat(str2, (char *)g130);
                    v50 = dwFlags;
                    // branch -> 0x405ab7
                }
                // 0x405ab7
                v49 = (int32_t)a3;
                g124 = v49;
                lpCurrentDirectory = a3;
                if (v49 != v50) {
                    // 0x405abe
                    if ((int32_t)*a3 == v50) {
                        // 0x405ac2
                        lpCurrentDirectory = (char *)v50;
                        // branch -> 0x405ac5
                    } else {
                        lpCurrentDirectory = a3;
                    }
                }
                // 0x405ac5
                lpProcessAttributes = (int32_t *)v50;
                v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                g130 = g11;
                v61 = dwFlags;
                if (v21 == false) {
                    // 0x405b79
                    v62 = 0;
                    if (v61 != 0) {
                        // 0x405b7e
                        CloseHandle(0);
                        if (dwFlags != 0) {
                            // 0x405b88
                            CloseHandle(0);
                            if (dwFlags != 0) {
                                // 0x405b92
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b9c
                                    CloseHandle(0);
                                    v62 = dwFlags;
                                    // branch -> 0x405ba1
                                } else {
                                    v62 = 0;
                                }
                            } else {
                                v62 = 0;
                            }
                        } else {
                            v62 = 0;
                        }
                    }
                    // 0x405ba1
                    hObject2 = v3;
                    v63 = v62;
                    if (hObject2 != v62) {
                        // 0x405ba6
                        CloseHandle(hObject2);
                        v63 = dwFlags;
                        // branch -> 0x405bab
                    }
                    // 0x405bab
                    hObject3 = v2;
                    if (hObject3 != v63) {
                        // 0x405bb0
                        CloseHandle(hObject3);
                        // branch -> 0x405bb5
                    }
                    // 0x405bb5
                    if (a4 == 120) {
                        // 0x405bbf
                        if ((int32_t)lpCurrentDirectory == dwFlags) {
                            // 0x405bc4
                            v37 = g131;
                            len2 = strlen((char *)v37);
                            v43 = g131;
                            v64 = len2 - 1 + v43;
                            g130 = v64;
                            g125 = v37;
                            if (v64 > v43) {
                                v38 = v64;
                                while (true) {
                                    // 0x405bd3
                                    if (*(char *)v38 != 92) {
                                        goto lab_0xbff59a0;
                                    }
                                    // 0x405bdd
                                    if (v38 > v43) {
                                        // 0x405be1
                                        strcpy(str2, (char *)v43);
                                        v35 = g130 - g131;
                                        g130 = v35;
                                        g125 = v43;
                                        *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                        // branch -> 0x405bf8
                                    }
                                }
                            }
                        }
                        // 0x405bf8
                        g130 = 60;
                        memset(v25, dwFlags, 60);
                        g124 = v41;
                        hObject4 = g130;
                        if (ShellExecuteExA((int32_t *)hObject4) != false) {
                            // 0x405c4f
                            hHandle2 = (int32_t)v24;
                            WaitForSingleObject(hHandle2, -1);
                            if (v42 == dwFlags) {
                                // 0x405c8e
                                CloseHandle(hObject4);
                                // branch -> 0x405c9e
                            } else {
                                // 0x405c54
                                g131 = 0x40f594;
                                lpCriticalSection = g105;
                                EnterCriticalSection(lpCriticalSection);
                                v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                v19 = (struct struct_9 *)v23;
                                g125 = 40;
                                g130 = v23;
                                LeaveCriticalSection(lpCriticalSection);
                                g124 = hHandle2;
                                v19->e1 = -1;
                                *(int32_t *)g130 = g124;
                                v19->e3 = dwFlags;
                                v19->e2 = dwFlags;
                                v19->e4 = dwFlags;
                                // branch -> 0x405c89
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                    }
                } else {
                    // 0x405af1
                    hObject = (int32_t)lpProcessInformation;
                    v60 = 0;
                    if (v61 != 0) {
                        // 0x405af6
                        CloseHandle(hObject);
                        if (dwFlags != 0) {
                            // 0x405b00
                            CloseHandle(hObject);
                            v60 = dwFlags;
                            // branch -> 0x405b05
                        } else {
                            v60 = 0;
                        }
                    }
                    // 0x405b05
                    if (v3 != v60) {
                        // 0x405b0a
                        CloseHandle(hObject);
                        // branch -> 0x405b0f
                    }
                    // 0x405b0f
                    CloseHandle(hObject);
                    if (a4 != 1) {
                        // 0x405b1a
                        WaitForSingleObject(hHandle, hObject);
                        // branch -> 0x405b25
                    }
                    // 0x405b25
                    if (v42 == dwFlags) {
                        // 0x405b6f
                        CloseHandle(hObject);
                        // branch -> 0x405c9e
                    } else {
                        // 0x405b2a
                        g131 = 0x40f594;
                        EnterCriticalSection(lpProcessInformation);
                        v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                        v17 = (struct struct_8 *)v22;
                        g125 = 40;
                        g130 = v22;
                        LeaveCriticalSection(g105);
                        *(int32_t *)g130 = hObject;
                        v17->e1 = v28;
                        v17->e3 = NULL;
                        v17->e2 = NULL;
                        v55 = v2;
                        g124 = v55;
                        v17->e4 = (char *)v55;
                        // branch -> 0x405c89
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            }
            break;
        }
        case 4: {
            v51 = v54;
            v32 = v34;
            v16 = v29;
            v15 = v30;
            // 0x4059f8
            if (g130 == v48) {
                // 0x405a27
                v40 = dwFlags;
                v9 = v40 == a1 ? 0x40c02d : a1;
                g131 = v9;
                str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                g130 = strlen((char *)v9);
                len = strlen(str);
                v41 = (int32_t)str;
                g125 = v9;
                v20 = HeapAlloc((int32_t)*(char *)g34, dwFlags, len + 4 + g130);
                v36 = g131;
                str3 = (char *)v36;
                str2 = (char *)v20;
                if (*str3 == 34) {
                    // 0x405a8e
                    strcpy(str2, str3);
                    g125 = v36;
                    // branch -> 0x405a97
                } else {
                    // 0x405a6b
                    g130 = 0x40c060;
                    strcpy(str2, "\"");
                    strcat(str2, (char *)g131);
                    strcat(str2, "\"");
                    // branch -> 0x405a97
                }
                // 0x405a97
                g130 = v41;
                v50 = 0x49000000;
                if (dwFlags != 0x49000000) {
                    // 0x405a9e
                    strcat(str2, " ");
                    strcat(str2, (char *)g130);
                    v50 = dwFlags;
                    // branch -> 0x405ab7
                }
                // 0x405ab7
                v49 = (int32_t)a3;
                g124 = v49;
                lpCurrentDirectory = a3;
                if (v49 != v50) {
                    // 0x405abe
                    if ((int32_t)*a3 == v50) {
                        // 0x405ac2
                        lpCurrentDirectory = (char *)v50;
                        // branch -> 0x405ac5
                    } else {
                        lpCurrentDirectory = a3;
                    }
                }
                // 0x405ac5
                lpProcessAttributes = (int32_t *)v50;
                v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                g130 = g11;
                v61 = dwFlags;
                if (v21 == false) {
                    // 0x405b79
                    v62 = 0;
                    if (v61 != 0) {
                        // 0x405b7e
                        CloseHandle(0);
                        if (dwFlags != 0) {
                            // 0x405b88
                            CloseHandle(0);
                            if (dwFlags != 0) {
                                // 0x405b92
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b9c
                                    CloseHandle(0);
                                    v62 = dwFlags;
                                    // branch -> 0x405ba1
                                } else {
                                    v62 = 0;
                                }
                            } else {
                                v62 = 0;
                            }
                        } else {
                            v62 = 0;
                        }
                    }
                    // 0x405ba1
                    hObject2 = v3;
                    v63 = v62;
                    if (hObject2 != v62) {
                        // 0x405ba6
                        CloseHandle(hObject2);
                        v63 = dwFlags;
                        // branch -> 0x405bab
                    }
                    // 0x405bab
                    hObject3 = v2;
                    if (hObject3 != v63) {
                        // 0x405bb0
                        CloseHandle(hObject3);
                        // branch -> 0x405bb5
                    }
                    // 0x405bb5
                    if (a4 == 120) {
                        // 0x405bbf
                        if ((int32_t)lpCurrentDirectory == dwFlags) {
                            // 0x405bc4
                            v37 = g131;
                            len2 = strlen((char *)v37);
                            v43 = g131;
                            v64 = len2 - 1 + v43;
                            g130 = v64;
                            g125 = v37;
                            if (v64 > v43) {
                                v38 = v64;
                                while (true) {
                                    // 0x405bd3
                                    if (*(char *)v38 != 92) {
                                        goto lab_0xbff59a0;
                                    }
                                    // 0x405bdd
                                    if (v38 > v43) {
                                        // 0x405be1
                                        strcpy(str2, (char *)v43);
                                        v35 = g130 - g131;
                                        g130 = v35;
                                        g125 = v43;
                                        *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                        // branch -> 0x405bf8
                                    }
                                }
                            }
                        }
                        // 0x405bf8
                        g130 = 60;
                        memset(v25, dwFlags, 60);
                        g124 = v41;
                        hObject4 = g130;
                        if (ShellExecuteExA((int32_t *)hObject4) != false) {
                            // 0x405c4f
                            hHandle2 = (int32_t)v24;
                            WaitForSingleObject(hHandle2, -1);
                            if (v42 == dwFlags) {
                                // 0x405c8e
                                CloseHandle(hObject4);
                                // branch -> 0x405c9e
                            } else {
                                // 0x405c54
                                g131 = 0x40f594;
                                lpCriticalSection = g105;
                                EnterCriticalSection(lpCriticalSection);
                                v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                v19 = (struct struct_9 *)v23;
                                g125 = 40;
                                g130 = v23;
                                LeaveCriticalSection(lpCriticalSection);
                                g124 = hHandle2;
                                v19->e1 = -1;
                                *(int32_t *)g130 = g124;
                                v19->e3 = dwFlags;
                                v19->e2 = dwFlags;
                                v19->e4 = dwFlags;
                                // branch -> 0x405c89
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                    }
                } else {
                    // 0x405af1
                    hObject = (int32_t)lpProcessInformation;
                    v60 = 0;
                    if (v61 != 0) {
                        // 0x405af6
                        CloseHandle(hObject);
                        if (dwFlags != 0) {
                            // 0x405b00
                            CloseHandle(hObject);
                            v60 = dwFlags;
                            // branch -> 0x405b05
                        } else {
                            v60 = 0;
                        }
                    }
                    // 0x405b05
                    if (v3 != v60) {
                        // 0x405b0a
                        CloseHandle(hObject);
                        // branch -> 0x405b0f
                    }
                    // 0x405b0f
                    CloseHandle(hObject);
                    if (a4 != 1) {
                        // 0x405b1a
                        WaitForSingleObject(hHandle, hObject);
                        // branch -> 0x405b25
                    }
                    // 0x405b25
                    if (v42 == dwFlags) {
                        // 0x405b6f
                        CloseHandle(hObject);
                        // branch -> 0x405c9e
                    } else {
                        // 0x405b2a
                        g131 = 0x40f594;
                        EnterCriticalSection(lpProcessInformation);
                        v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                        v17 = (struct struct_8 *)v22;
                        g125 = 40;
                        g130 = v22;
                        LeaveCriticalSection(g105);
                        *(int32_t *)g130 = hObject;
                        v17->e1 = v28;
                        v17->e3 = NULL;
                        v17->e2 = NULL;
                        v55 = v2;
                        g124 = v55;
                        v17->e4 = (char *)v55;
                        // branch -> 0x405c89
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            }
            break;
        }
        case 8: {
            v47 = v48;
            v14 = v30;
            v53 = v54;
            // 0x4059c5
            CreatePipe();
            v51 = v53;
            v32 = v34;
            v16 = v29;
            v15 = v14;
            v45 = v47;
            if (g124 != 0) {
                // 0x4059dc
                v44 = v3;
                g124 = v44;
                function_405871((char *)&v2, (char *)&v3, 12);
                v51 = (int32_t *)((int32_t)v53 & -9);
                v32 = (char *)1;
                v16 = (char *)v44;
                v15 = v14;
                v45 = g130 | v47;
                // branch -> 0x4059f8
            }
            // 0x4059f8
            if (g130 == v45) {
                // 0x405a27
                v40 = dwFlags;
                v9 = v40 == a1 ? 0x40c02d : a1;
                g131 = v9;
                str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
                g130 = strlen((char *)v9);
                len = strlen(str);
                v41 = (int32_t)str;
                g125 = v9;
                v10 = *(char *)g34;
                v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
                v36 = g131;
                str3 = (char *)v36;
                str2 = (char *)v20;
                if (*str3 == 34) {
                    // 0x405a8e
                    strcpy(str2, str3);
                    g125 = v36;
                    // branch -> 0x405a97
                } else {
                    // 0x405a6b
                    g130 = 0x40c060;
                    strcpy(str2, "\"");
                    strcat(str2, (char *)g131);
                    strcat(str2, "\"");
                    // branch -> 0x405a97
                }
                // 0x405a97
                g130 = v41;
                v50 = 0x49000000;
                if (dwFlags != 0x49000000) {
                    // 0x405a9e
                    strcat(str2, " ");
                    strcat(str2, (char *)g130);
                    v50 = dwFlags;
                    // branch -> 0x405ab7
                }
                // 0x405ab7
                v49 = (int32_t)a3;
                g124 = v49;
                lpCurrentDirectory = a3;
                if (v49 != v50) {
                    // 0x405abe
                    if ((int32_t)*a3 == v50) {
                        // 0x405ac2
                        lpCurrentDirectory = (char *)v50;
                        // branch -> 0x405ac5
                    } else {
                        lpCurrentDirectory = a3;
                    }
                }
                // 0x405ac5
                lpProcessAttributes = (int32_t *)v50;
                v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
                g130 = g11;
                v61 = dwFlags;
                if (v21 == false) {
                    // 0x405b79
                    v62 = 0;
                    if (v61 != 0) {
                        // 0x405b7e
                        CloseHandle(0);
                        if (dwFlags != 0) {
                            // 0x405b88
                            CloseHandle(0);
                            if (dwFlags != 0) {
                                // 0x405b92
                                CloseHandle(0);
                                if (dwFlags != 0) {
                                    // 0x405b9c
                                    CloseHandle(0);
                                    v62 = dwFlags;
                                    // branch -> 0x405ba1
                                } else {
                                    v62 = 0;
                                }
                            } else {
                                v62 = 0;
                            }
                        } else {
                            v62 = 0;
                        }
                    }
                    // 0x405ba1
                    hObject2 = v3;
                    v63 = v62;
                    if (hObject2 != v62) {
                        // 0x405ba6
                        CloseHandle(hObject2);
                        v63 = dwFlags;
                        // branch -> 0x405bab
                    }
                    // 0x405bab
                    hObject3 = v2;
                    if (hObject3 != v63) {
                        // 0x405bb0
                        CloseHandle(hObject3);
                        // branch -> 0x405bb5
                    }
                    // 0x405bb5
                    if (a4 == 120) {
                        // 0x405bbf
                        if ((int32_t)lpCurrentDirectory == dwFlags) {
                            // 0x405bc4
                            v37 = g131;
                            len2 = strlen((char *)v37);
                            v43 = g131;
                            v64 = len2 - 1 + v43;
                            g130 = v64;
                            g125 = v37;
                            if (v64 > v43) {
                                v38 = v64;
                                while (true) {
                                    // 0x405bd3
                                    if (*(char *)v38 != 92) {
                                        goto lab_0xbff59a0;
                                    }
                                    // 0x405bdd
                                    if (v38 > v43) {
                                        // 0x405be1
                                        strcpy(str2, (char *)v43);
                                        v35 = g130 - g131;
                                        g130 = v35;
                                        g125 = v43;
                                        *(char *)(v20 + 1 + v35) = (char)dwFlags;
                                        // branch -> 0x405bf8
                                    }
                                }
                            }
                        }
                        // 0x405bf8
                        g130 = 60;
                        memset(v25, dwFlags, 60);
                        g124 = v41;
                        hObject4 = g130;
                        if (ShellExecuteExA((int32_t *)hObject4) != false) {
                            // 0x405c4f
                            hHandle2 = (int32_t)v24;
                            WaitForSingleObject(hHandle2, -1);
                            if (v42 == dwFlags) {
                                // 0x405c8e
                                CloseHandle(hObject4);
                                // branch -> 0x405c9e
                            } else {
                                // 0x405c54
                                g131 = 0x40f594;
                                lpCriticalSection = g105;
                                EnterCriticalSection(lpCriticalSection);
                                v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                                v19 = (struct struct_9 *)v23;
                                g125 = 40;
                                g130 = v23;
                                LeaveCriticalSection(lpCriticalSection);
                                g124 = hHandle2;
                                v19->e1 = -1;
                                *(int32_t *)g130 = g124;
                                v19->e3 = dwFlags;
                                v19->e2 = dwFlags;
                                v19->e4 = dwFlags;
                                // branch -> 0x405c89
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                    }
                } else {
                    // 0x405af1
                    hObject = (int32_t)lpProcessInformation;
                    v60 = 0;
                    if (v61 != 0) {
                        // 0x405af6
                        CloseHandle(hObject);
                        if (dwFlags != 0) {
                            // 0x405b00
                            CloseHandle(hObject);
                            v60 = dwFlags;
                            // branch -> 0x405b05
                        } else {
                            v60 = 0;
                        }
                    }
                    // 0x405b05
                    if (v3 != v60) {
                        // 0x405b0a
                        CloseHandle(hObject);
                        // branch -> 0x405b0f
                    }
                    // 0x405b0f
                    CloseHandle(hObject);
                    if (a4 != 1) {
                        // 0x405b1a
                        WaitForSingleObject(hHandle, hObject);
                        // branch -> 0x405b25
                    }
                    // 0x405b25
                    if (v42 == dwFlags) {
                        // 0x405b6f
                        CloseHandle(hObject);
                        // branch -> 0x405c9e
                    } else {
                        // 0x405b2a
                        g131 = 0x40f594;
                        EnterCriticalSection(lpProcessInformation);
                        v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
                        v17 = (struct struct_8 *)v22;
                        g125 = 40;
                        g130 = v22;
                        LeaveCriticalSection(g105);
                        *(int32_t *)g130 = hObject;
                        v17->e1 = v28;
                        v17->e3 = NULL;
                        v17->e2 = NULL;
                        v55 = v2;
                        g124 = v55;
                        v17->e4 = (char *)v55;
                        // branch -> 0x405c89
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            }
            break;
        }
    }
    // 0x4059fd
    v57 = dwFlags;
    g130 = g15;
    v58 = v57;
    if ((int32_t)v12 == v57) {
        // 0x405a08
        GetStdHandle(-10);
        v58 = dwFlags;
        // branch -> 0x405a0f
    }
    // 0x405a0f
    v59 = v58;
    if ((int32_t)v15 == v58) {
        // 0x405a14
        GetStdHandle(-11);
        v59 = dwFlags;
        // branch -> 0x405a1b
    }
    // 0x405a1b
    if ((int32_t)v16 == v59) {
        // 0x405a20
        GetStdHandle(-12);
        // branch -> 0x405a27
    }
    // 0x405a27
    v40 = dwFlags;
    v9 = v40 == a1 ? 0x40c02d : a1;
    g131 = v9;
    str = (int32_t)a2 == v40 ? (char *)0x40c02d : a2;
    g130 = strlen((char *)v9);
    len = strlen(str);
    v41 = (int32_t)str;
    g125 = v9;
    v10 = *(char *)g34;
    v20 = HeapAlloc((int32_t)v10, dwFlags, len + 4 + g130);
    v36 = g131;
    str3 = (char *)v36;
    str2 = (char *)v20;
    if (*str3 == 34) {
        // 0x405a8e
        strcpy(str2, str3);
        g125 = v36;
        // branch -> 0x405a97
    } else {
        // 0x405a6b
        g130 = 0x40c060;
        strcpy(str2, "\"");
        strcat(str2, (char *)g131);
        strcat(str2, "\"");
        // branch -> 0x405a97
    }
    // 0x405a97
    g130 = v41;
    v50 = 0x49000000;
    if (dwFlags != 0x49000000) {
        // 0x405a9e
        strcat(str2, " ");
        strcat(str2, (char *)g130);
        v50 = dwFlags;
        // branch -> 0x405ab7
    }
    // 0x405ab7
    v49 = (int32_t)a3;
    g124 = v49;
    lpCurrentDirectory = a3;
    if (v49 != v50) {
        // 0x405abe
        if ((int32_t)*a3 == v50) {
            // 0x405ac2
            lpCurrentDirectory = (char *)v50;
            // branch -> 0x405ac5
        } else {
            lpCurrentDirectory = a3;
        }
    }
    // 0x405ac5
    lpProcessAttributes = (int32_t *)v50;
    v21 = CreateProcessA((char *)v50, str2, lpProcessAttributes, lpProcessAttributes, (int32_t)v32 % 2 != 0, (int32_t)v51, lpProcessAttributes, lpCurrentDirectory, lpStartupInfo, lpProcessInformation);
    g130 = g11;
    v61 = dwFlags;
    if (v21 == false) {
        // 0x405b79
        v62 = 0;
        if (v61 != 0) {
            // 0x405b7e
            CloseHandle(0);
            if (dwFlags != 0) {
                // 0x405b88
                CloseHandle(0);
                if (dwFlags != 0) {
                    // 0x405b92
                    CloseHandle(0);
                    if (dwFlags != 0) {
                        // 0x405b9c
                        CloseHandle(0);
                        v62 = dwFlags;
                        // branch -> 0x405ba1
                    } else {
                        v62 = 0;
                    }
                } else {
                    v62 = 0;
                }
            } else {
                v62 = 0;
            }
        }
        // 0x405ba1
        hObject2 = v3;
        v63 = v62;
        if (hObject2 != v62) {
            // 0x405ba6
            CloseHandle(hObject2);
            v63 = dwFlags;
            // branch -> 0x405bab
        }
        // 0x405bab
        hObject3 = v2;
        if (hObject3 != v63) {
            // 0x405bb0
            CloseHandle(hObject3);
            // branch -> 0x405bb5
        }
        // 0x405bb5
        if (a4 == 120) {
            // 0x405bbf
            if ((int32_t)lpCurrentDirectory == dwFlags) {
                // 0x405bc4
                v37 = g131;
                len2 = strlen((char *)v37);
                v43 = g131;
                v64 = len2 - 1 + v43;
                g130 = v64;
                g125 = v37;
                if (v64 > v43) {
                    v38 = v64;
                    while (true) {
                        // 0x405bd3
                        if (*(char *)v38 != 92) {
                            goto lab_0xbff59a0;
                        }
                        v39 = v38;
                      lab_0x4846c30:
                        // 0x405bdd
                        if (v39 > v43) {
                            // 0x405be1
                            strcpy(str2, (char *)v43);
                            v35 = g130 - g131;
                            g130 = v35;
                            g125 = v43;
                            *(char *)(v20 + 1 + v35) = (char)dwFlags;
                            // branch -> 0x405bf8
                        }
                    }
                }
            }
            // 0x405bf8
            g130 = 60;
            memset(v25, dwFlags, 60);
            g124 = v41;
            hObject4 = g130;
            if (ShellExecuteExA((int32_t *)hObject4) != false) {
                // 0x405c4f
                hHandle2 = (int32_t)v24;
                WaitForSingleObject(hHandle2, -1);
                if (v42 == dwFlags) {
                    // 0x405c8e
                    CloseHandle(hObject4);
                    // branch -> 0x405c9e
                } else {
                    // 0x405c54
                    g131 = 0x40f594;
                    lpCriticalSection = g105;
                    EnterCriticalSection(lpCriticalSection);
                    v23 = function_40a31c((struct struct_18 *)0x40f210, 40);
                    v19 = (struct struct_9 *)v23;
                    g125 = 40;
                    g130 = v23;
                    LeaveCriticalSection(lpCriticalSection);
                    g124 = hHandle2;
                    v19->e1 = -1;
                    *(int32_t *)g130 = g124;
                    v19->e3 = dwFlags;
                    v19->e2 = dwFlags;
                    v19->e4 = dwFlags;
                    // branch -> 0x405c89
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            }
            // Detected a possible infinite recursion (goto support failed); quitting...
        }
    } else {
        // 0x405af1
        hObject = (int32_t)lpProcessInformation;
        v60 = 0;
        if (v61 != 0) {
            // 0x405af6
            CloseHandle(hObject);
            if (dwFlags != 0) {
                // 0x405b00
                CloseHandle(hObject);
                v60 = dwFlags;
                // branch -> 0x405b05
            } else {
                v60 = 0;
            }
        }
        // 0x405b05
        if (v3 != v60) {
            // 0x405b0a
            CloseHandle(hObject);
            // branch -> 0x405b0f
        }
        // 0x405b0f
        CloseHandle(hObject);
        if (a4 != 1) {
            // 0x405b1a
            WaitForSingleObject(hHandle, hObject);
            // branch -> 0x405b25
        }
        // 0x405b25
        if (v42 == dwFlags) {
            // 0x405b6f
            CloseHandle(hObject);
            // branch -> 0x405c9e
        } else {
            // 0x405b2a
            g131 = 0x40f594;
            EnterCriticalSection(lpProcessInformation);
            v22 = function_40a31c((struct struct_18 *)hHandle, hObject);
            v17 = (struct struct_8 *)v22;
            g125 = 40;
            g130 = v22;
            LeaveCriticalSection(g105);
            *(int32_t *)g130 = hObject;
            v17->e1 = v28;
            v17->e3 = NULL;
            v17->e2 = NULL;
            v55 = v2;
            g124 = v55;
            v17->e4 = (char *)v55;
            // branch -> 0x405c89
            // Detected a possible infinite recursion (goto support failed); quitting...
        }
        // Detected a possible infinite recursion (goto support failed); quitting...
    }
    // Detected a possible infinite recursion (goto support failed); quitting...
}

// Address range: 0x405cbb - 0x405cd2
int32_t function_405cbb(int32_t a1, char * a2, char * a3, char a4) {
    // 0x405cbb
    function_4058a8(a1, a2, a3, a4, NULL);
    return g124;
}

// Address range: 0x405cd5 - 0x405d22
void function_405cd5(void) {
    // 0x405cd5
    int32_t * v1;
    function_409bf5(g106, (int32_t)v1);
    int32_t v2 = g124; // 0x405ce5
    g130 = v2;
    if (v2 == 0) {
        // 0x405d21
        int32_t * v3;
        g130 = (int32_t)v3;
        return;
    }
    int32_t v4 = *(int32_t *)(v2 + 4); // 0x405ceb
    if (v4 != 0) {
        // 0x405cf2
        SetMenu((int32_t *)v4, 0);
        // branch -> 0x405cfb
    }
    // 0x405cfb
    DestroyMenu();
    int32_t v5 = g130; // 0x405d03
    if (*(int32_t *)(v5 + 8) != 0) {
        // 0x405d09
        HeapDestroy(*(int32_t *)(v5 + 12));
        // branch -> 0x405d12
    }
    // 0x405d12
    function_409c5b(g106);
    // branch -> 0x405d21
    // 0x405d21
    g130 = (int32_t)(int32_t *)g106;
}

// Address range: 0x405d25 - 0x405d4b
int32_t function_405d25(void) {
    // 0x405d25
    function_409c96(20, 16, (int32_t)function_405cd5);
    g106 = g124;
    int32_t result = function_409ce6(268, 0); // 0x405d41
    g107 = result;
    return result;
}

// Address range: 0x405d4c - 0x405dcd
void function_405d4c(void) {
    int32_t v1 = g125; // 0x405d4f
    int32_t * v2 = (int32_t *)v1; // 0x405d4f_0
    GetPropA();
    int32_t v3 = g124; // 0x405d66
    g131 = v3;
    int32_t * v4;
    int32_t * v5;
    int32_t * hWnd;
    int32_t Msg;
    if (Msg == 130) {
        // 0x405d6a
        function_409d0e(g106);
        int32_t * v6;
        int32_t v7 = function_409d32(g106, v2, v6); // 0x405dac3
        g130 = v7;
        if (v7 != 0) {
            while (true) {
                int32_t v8 = GetMenu(hWnd); // 0x405d7b
                int32_t v9 = g130; // 0x405d81
                int32_t * v10 = (int32_t *)0x405d81;
                if (*(int32_t *)v9 == v8) {
                    // 0x405d85
                    if (((struct struct_10 *)v7)->e2 != NULL) {
                        // 0x405d8b
                        HeapDestroy(*(int32_t *)(v9 + 12));
                        // branch -> 0x405d94
                    }
                    // 0x405d94
                    function_409c5b(g106);
                    v10 = (int32_t *)g106;
                    // branch -> 0x405da2
                }
                int32_t v11 = function_409d32(g106, v2, v10); // 0x405dac
                g130 = v11;
                if (v11 == 0) {
                    // break -> 0x405db7
                    break;
                }
                v7 = v11;
                // continue -> 0x405d78
            }
            // 0x405db7
            g130 = g106;
            // branch -> 0x405db8
            // 0x405db8
            CallWindowProcA((int32_t *)g131, hWnd, Msg, (int32_t)v4, (int32_t)v5);
            g131 = v1;
            return;
        }
        // 0x405db7
        g130 = g106;
        v3 = g131;
        // branch -> 0x405db8
    }
    // 0x405db8
    CallWindowProcA((int32_t *)v3, hWnd, Msg, (int32_t)v4, (int32_t)v5);
    g131 = v1;
}

// Address range: 0x405dd0 - 0x405e46
int32_t function_405dd0(int32_t * a1, int32_t * hWnd) {
    int32_t v1 = g107; // bp-20
    function_409cdf((char *)&v1);
    g127 = g124;
    int32_t v2 = function_409b6d((struct struct_32 *)g106, (int32_t)a1); // 0x405dec
    g130 = v2;
    int32_t v3 = CreateMenu(); // 0x405df3
    g131 = v3;
    int32_t * v4;
    int32_t * v5;
    if (v3 == 0) {
        // 0x405e40
        g131 = (int32_t)v5;
        g130 = (int32_t)v4;
        int32_t * v6;
        g129 = (int32_t)v6;
        return 0;
    }
    int32_t v7 = (int32_t)hWnd;
    *(int32_t *)g130 = v3;
    ((struct struct_11 *)v2)->e1 = (int32_t *)v7;
    *(int32_t *)g127 = g130;
    *(int32_t *)(g127 + 4) = g131;
    GetPropA();
    if (v7 == 0) {
        // 0x405e1d
        SetWindowLongA(hWnd, -4, (int32_t)function_405d4c);
        SetPropA();
        v4 = (int32_t *)"pb_menu_callback";
        v5 = hWnd;
        // branch -> 0x405e38
    }
    // 0x405e38
    int32_t result; // 0x405e3e
    if (a1 == (int32_t *)-1) {
        // 0x405e3e
        result = g130;
        g131 = result;
        // branch -> 0x405e40
    } else {
        // 0x405e38
        result = g131;
        // branch -> 0x405e40
    }
    // 0x405e40
    g131 = (int32_t)v5;
    g130 = (int32_t)v4;
    g129 = (int32_t)(int32_t *)v7;
    return result;
}

// Address range: 0x405e49 - 0x405e88
int32_t function_405e49(void) {
    int32_t v1 = g107; // bp-8
    function_409cdf((char *)&v1);
    int32_t v2 = g124; // 0x405e55
    g130 = v2;
    int32_t v3 = v2 + 264; // 0x405e57
    g124 = v3;
    int32_t * v4 = (int32_t *)v3; // 0x405e5d_0
    if (*v4 != 0) {
        // 0x405e62
        *v4 = 0;
        int32_t v5 = g130; // 0x405e65
        int32_t v6 = *(int32_t *)*(int32_t *)v5; // 0x405e67
        g124 = v6;
        *(int32_t *)(v5 + 4) = v6;
        // branch -> 0x405e6c
    }
    // 0x405e6c
    int32_t * v7;
    function_40600b((struct struct_12 *)v7);
    int32_t v8 = *(int32_t *)g130; // 0x405e75
    g130 = v8;
    int32_t v9 = *(int32_t *)(v8 + 4); // 0x405e77
    int32_t * hWnd = (int32_t *)v9; // 0x405e77_1
    int32_t * v10; // 0x405e81_5
    if (v9 != 0) {
        // 0x405e7e
        v10 = (int32_t *)(int32_t)SetMenu(hWnd, *(int32_t *)v8);
        // branch -> 0x405e87
    } else {
        v10 = hWnd;
    }
    // 0x405e87
    g130 = (int32_t)v7;
    return (int32_t)v10;
}

// Address range: 0x405e8b - 0x405f2d
int32_t function_405e8b(char * a1, struct struct_12 * a2, int32_t a3) {
    int32_t v1 = g107; // bp-12
    function_409cdf((char *)&v1);
    int32_t v2 = g124; // 0x405e9a
    g130 = v2;
    int32_t v3 = *(int32_t *)v2; // 0x405e9c
    g124 = v3;
    g125 = 0;
    int32_t v4;
    int32_t v5; // 0x405f2c_02
    if (*(int32_t *)(v3 + 8) == 0) {
        // 0x405f09
        v4 = *(int32_t *)(v2 + 4);
        AppendMenuA();
        v5 = 0;
        // branch -> 0x405f19
    } else {
        int32_t v6 = HeapAlloc(*(int32_t *)(v3 + 12), 0, 12); // 0x405eb3
        struct struct_12 * v7 = a2; // 0x405eb5_0
        g131 = v6;
        struct struct_12 * v8 = v7; // 0x405ec7_0
        if (v7 == NULL) {
            // 0x405ebd
            a2 = (struct struct_12 *)0x40c02d;
            v8 = (struct struct_12 *)0x40c02d;
            // branch -> 0x405ec4
        }
        // 0x405ec4
        *(int32_t *)(v6 + 4) = a3;
        int32_t dwBytes = strlen((char *)v8) + 1; // 0x405ed3
        int32_t v9 = *(int32_t *)g130; // 0x405ed5
        g124 = v9;
        int32_t v10 = HeapAlloc(*(int32_t *)(v9 + 12), 0, dwBytes); // 0x405edc
        *(int32_t *)g131 = v10;
        *(int32_t *)(g131 + 8) = *(int32_t *)(*(int32_t *)g130 + 16);
        strcpy((char *)v10, (char *)a2);
        g125 = (int32_t)a2;
        AppendMenuA();
        g131 = *(int32_t *)(g130 + 4);
        v5 = 0x405f05;
        // branch -> 0x405f19
    }
    int32_t v11 = *(int32_t *)g130; // 0x405f19
    g130 = v11;
    int32_t v12 = *(int32_t *)(v11 + 4); // 0x405f1b
    int32_t * hWnd = (int32_t *)v12; // 0x405f1b_1
    int32_t * v13; // 0x405f25_5
    if (v12 != 0) {
        // 0x405f22
        v13 = (int32_t *)(int32_t)SetMenu(hWnd, *(int32_t *)v11);
        // branch -> 0x405f2b
    } else {
        v13 = hWnd;
    }
    // 0x405f2b
    g130 = &v4;
    g129 = v5;
    return (int32_t)v13;
}

// Address range: 0x405f30 - 0x405f3f
void function_405f30(char * a1, struct struct_12 * a2) {
    // 0x405f30
    function_405e8b(a1, a2, 0);
}

// Address range: 0x405f42 - 0x406008
int32_t function_405f42(struct struct_12 * a1, int32_t a2) {
    int32_t v1 = g107; // bp-16
    function_409cdf((char *)&v1);
    g130 = g124;
    int32_t result = CreateMenu(); // 0x405f54
    int32_t v2 = g130; // 0x405f5c
    int32_t * v3 = (int32_t *)v2;
    int32_t dwBytes; // 0x405fa3
    int32_t * v4; // 0x405ffd_0
    int32_t v5; // 0x405f83
    int32_t v6; // 0x405fac
    int32_t v7;
    int32_t v8; // 0x405f6e
    int32_t v9; // 0x405fed
    int32_t v10; // 0x405fed
    struct struct_12 * v11; // 0x405f97_0
    struct struct_12 * v12; // 0x405f85_0
    if (*(int32_t *)(v2 + 264) > 0) {
        // 0x405f6e
        v8 = *v3;
        if (*(int32_t *)(v8 + 8) == 0) {
            // 0x405fdc
            v7 = *(int32_t *)(v2 + 4);
            AppendMenuA();
            // branch -> 0x405fed
        } else {
            // 0x405f75
            v5 = HeapAlloc(*(int32_t *)(v8 + 12), 0, 12);
            v12 = a1;
            g131 = v5;
            v11 = v12;
            if (v12 == NULL) {
                // 0x405f8d
                a1 = (struct struct_12 *)0x40c02d;
                v11 = (struct struct_12 *)0x40c02d;
                // branch -> 0x405f94
            }
            // 0x405f94
            *(int32_t *)(v5 + 4) = a2;
            dwBytes = strlen((char *)v11) + 1;
            v6 = HeapAlloc(*(int32_t *)(*(int32_t *)g130 + 12), 0, dwBytes);
            *(int32_t *)g131 = v6;
            *(int32_t *)(g131 + 8) = *(int32_t *)(*(int32_t *)g130 + 16) | 2;
            strcpy((char *)v6, (char *)a1);
            AppendMenuA();
            g131 = *(int32_t *)(g130 + 4);
            // branch -> 0x405fed
        }
        // 0x405fed
        v9 = g130;
        v10 = *(int32_t *)(v9 + 264);
        g124 = v10;
        *(int32_t *)(v9 + 8 + 4 * v10) = *(int32_t *)(v9 + 4);
        v4 = (int32_t *)(g130 + 264);
        *v4 = *v4 + 1;
        *(int32_t *)(g130 + 4) = result;
        g130 = &v7;
        return result;
    }
    // 0x405f67
    if (*(int32_t *)(*v3 + 4) != 0) {
        // 0x405fdc
        v7 = *(int32_t *)(v2 + 4);
        AppendMenuA();
        // branch -> 0x405fed
        // 0x405fed
        v9 = g130;
        v10 = *(int32_t *)(v9 + 264);
        g124 = v10;
        *(int32_t *)(v9 + 8 + 4 * v10) = *(int32_t *)(v9 + 4);
        v4 = (int32_t *)(g130 + 264);
        *v4 = *v4 + 1;
        *(int32_t *)(g130 + 4) = result;
        g130 = &v7;
        return result;
    }
    // 0x405f6e
    v8 = *v3;
    if (*(int32_t *)(v8 + 8) == 0) {
        // 0x405fdc
        v7 = *(int32_t *)(v2 + 4);
        AppendMenuA();
        // branch -> 0x405fed
    } else {
        // 0x405f75
        v5 = HeapAlloc(*(int32_t *)(v8 + 12), 0, 12);
        v12 = a1;
        g131 = v5;
        v11 = v12;
        if (v12 == NULL) {
            // 0x405f8d
            a1 = (struct struct_12 *)0x40c02d;
            v11 = (struct struct_12 *)0x40c02d;
            // branch -> 0x405f94
        }
        // 0x405f94
        *(int32_t *)(v5 + 4) = a2;
        dwBytes = strlen((char *)v11) + 1;
        v6 = HeapAlloc(*(int32_t *)(*(int32_t *)g130 + 12), 0, dwBytes);
        *(int32_t *)g131 = v6;
        *(int32_t *)(g131 + 8) = *(int32_t *)(*(int32_t *)g130 + 16) | 2;
        strcpy((char *)v6, (char *)a1);
        AppendMenuA();
        g131 = *(int32_t *)(g130 + 4);
        // branch -> 0x405fed
    }
    // 0x405fed
    v9 = g130;
    v10 = *(int32_t *)(v9 + 264);
    g124 = v10;
    *(int32_t *)(v9 + 8 + 4 * v10) = *(int32_t *)(v9 + 4);
    v4 = (int32_t *)(g130 + 264);
    *v4 = *v4 + 1;
    *(int32_t *)(g130 + 4) = result;
    g130 = &v7;
    return result;
}

// Address range: 0x40600b - 0x406016
int32_t function_40600b(struct struct_12 * a1) {
    // 0x40600b
    function_405f42(a1, 0);
    return g124;
}

// Address range: 0x406019 - 0x406045
void function_406019(void) {
    int32_t v1 = g130; // 0x406019
    int32_t v2;
    g130 = v2;
    *(int32_t *)(v2 + 20) = 10;
    HeapAlloc((int32_t)*(char *)g34, 8, 40);
    *(int32_t *)(g130 + 12) = g124;
    *(int32_t *)(g130 + 4) = 0;
    *(int32_t *)(g130 + 8) = g108;
    g130 = v1;
}

// Address range: 0x406046 - 0x40605b
void function_406046(void) {
    int32_t v1;
    int32_t v2 = *(int32_t *)((int32_t)&v1 + 12); // 0x40604a
    HeapFree((int32_t)*(char *)g34, 0, (char *)v2);
}

// Address range: 0x40605c - 0x4060cb
int32_t function_40605c(void) {
    // 0x40605c
    InitializeCriticalSection(g109);
    g108 = (int32_t)GetStockObject(17);
    g110 = function_409c96(32, 50, (int32_t)function_406859);
    g111 = function_409ce6(80, (int32_t)function_406019);
    memset((int32_t *)g125, 0, 8);
    int32_t * v1 = (int32_t *)8; // bp-12
    InitCommonControlsEx();
    return (int32_t)&v1;
}

// Address range: 0x4060cc - 0x4060e5
void function_4060cc(int32_t a1) {
    int32_t v1 = g111; // bp-4
    function_409cdf((char *)&v1);
    int32_t * hWnd;
    g124 = (int32_t)hWnd;
    if (hWnd != NULL) {
        // 0x4060de
        DestroyWindow(hWnd);
        // branch -> 0x4060e5
    }
}

// Address range: 0x4060e6 - 0x406117
void function_4060e6(void) {
    int32_t v1;
    if (&v1 == (int32_t *)15) {
        // 0x4060ef
        ValidateRect();
        // branch -> 0x406116
    } else {
        // 0x4060fe
        int32_t wParam;
        int32_t * v2;
        int32_t * hWnd;
        CallWindowProcA((int32_t *)g58, hWnd, (int32_t)&v1, wParam, (int32_t)v2);
        // branch -> 0x406116
    }
}

// Address range: 0x40611a - 0x406170
void function_40611a(void) {
    struct _RECT * lpRect = NULL; // bp-20
    int32_t v1;
    g130 = v1;
    int32_t v2;
    int32_t v3;
    int32_t v4;
    int32_t v5;
    function_406877(v1, (struct _RECT *)&v5, (int32_t)&v2, v3, &v4);
    GetWindowRect((int32_t *)*(int32_t *)g130, lpRect);
    g131 = g22;
    int32_t * v6 = GetParent((int32_t *)*(int32_t *)g130); // 0x406151
    MapWindowPoints();
    int32_t * hWnd = GetParent((int32_t *)*(int32_t *)g130); // 0x406164
    InvalidateRect(hWnd, &lpRect->e0, true);
    g131 = 0;
    g130 = (int32_t)v6;
}

// Address range: 0x406173 - 0x406291
int32_t function_406173(char * a1, int32_t X, int32_t * a3, char * a4, int32_t nHeight, char * a6, char * a7) {
    int32_t v1 = g111; // bp-20
    function_409cdf((char *)&v1);
    g131 = 0;
    g127 = g124;
    int32_t v2 = 0; // 0x406246
    if (g62 == 0) {
        // 0x406190
        g130 = 152;
        memset(&g59, 0, 152);
        g59 = 7;
        g60 = g130;
        g61 = 0x40611a;
        g62 = 1;
        v2 = g131;
        // branch -> 0x4061c8
    }
    char v3 = v2;
    char * v4 = a6;
    if (*a6 == v3) {
        // 0x4061cd
        v4 = (char *)0x40c02d;
        // branch -> 0x4061d4
    }
    char v5 = *a7; // 0x4061d4
    char v6;
    int32_t v7; // 0x406275
    int32_t v8; // 0x406284
    char * v9; // bp-36
    int32_t v10;
    char * v11; // bp-44
    int32_t v12;
    int32_t * v13; // 0x40628c2
    int32_t * windowHandle; // 0x40628c3
    int32_t v14; // 0x40626f
    if (v5 == v3) {
        int32_t v15 = *(int32_t *)g127; // 0x4061e2
        v9 = (char *)v15;
        v10 = nHeight;
        char * v16 = (char *)(int32_t)*a4; // 0x4061e7_0
        v11 = v16;
        char * lpWindowName = (char *)(int32_t)*v4; // 0x4061f5_0
        char v17 = *(char *)v2;
        char v18 = *v16;
        windowHandle = CreateWindowExA((int32_t)v17, "Button", lpWindowName, 0x50020007, X, (int32_t)a3, (int32_t)v18, nHeight, (int32_t *)v15, (int32_t *)-1, (int32_t *)g35, (int32_t *)v2);
        // branch -> 0x406268
    } else {
        // 0x406208
        g125 = 0x50020001;
        char v19;
        char v20;
        char v21;
        char * v22; // 0x40623c_0
        int32_t * windowHandle2; // 0x40624d
        int32_t v23; // 0x40625d
        int32_t v24; // 0x406237
        if (v5 != 1) {
            // 0x40621a
            int32_t dwStyle; // 0x406245
            char * v25; // 0x40624c
            if (*a7 == 2) {
                // 0x406220
                g124 = 0x20000;
                v25 = (char *)0x20000;
                dwStyle = 0x50020001;
                // branch -> 0x40622e
            } else {
                // 0x406227
                g124 = 0;
                g125 = 0x50820001;
                v25 = NULL;
                dwStyle = 0x50820001;
                // branch -> 0x40622e
            }
            // 0x40622e
            v24 = *(int32_t *)g127;
            v10 = nHeight;
            v22 = (char *)(int32_t)*a4;
            v11 = v22;
            v19 = *v25;
            v21 = *v22;
            windowHandle2 = CreateWindowExA((int32_t)v19, "Static", (char *)v2, dwStyle, X, (int32_t)a3, (int32_t)v21, nHeight, (int32_t *)v24, (int32_t *)-1, (int32_t *)g35, (int32_t *)v2);
            v9 = (char *)0x406263;
            v20 = *(char *)-4;
            v23 = SetWindowLongA(windowHandle2, (int32_t)v20, (int32_t)function_4060e6);
            g58 = v23;
            windowHandle = windowHandle2;
            // branch -> 0x406268
            // 0x406268
            if ((int32_t)windowHandle != g131) {
                // 0x40626c
                v14 = g110;
                v7 = function_409b6d((struct struct_32 *)v14, (int32_t)*a1);
                v9 = (char *)windowHandle;
                v10 = v7;
                v12 = (int32_t)*a1;
                v11 = (char *)v12;
                v6 = *(char *)v14;
                v8 = function_406a30((struct struct_15 *)v12, (struct struct_15 *)&v10, (struct struct_15 *)windowHandle, g59, (int32_t)v6);
                v13 = (int32_t *)v8;
                // branch -> 0x40628b
            } else {
                v13 = windowHandle;
            }
            // 0x40628b
            g131 = (int32_t)*v11;
            g130 = v10;
            g127 = (int32_t)*v9;
            return (int32_t)v13;
        }
        // 0x406213
        g124 = 512;
        // branch -> 0x40622e
        // 0x40622e
        v24 = *(int32_t *)g127;
        v10 = nHeight;
        v22 = (char *)(int32_t)*a4;
        v11 = v22;
        v19 = *(char *)512;
        v21 = *v22;
        windowHandle2 = CreateWindowExA((int32_t)v19, "Static", (char *)v2, 0x50020001, X, (int32_t)a3, (int32_t)v21, nHeight, (int32_t *)v24, (int32_t *)-1, (int32_t *)g35, (int32_t *)v2);
        v9 = (char *)0x406263;
        v20 = *(char *)-4;
        v23 = SetWindowLongA(windowHandle2, (int32_t)v20, (int32_t)function_4060e6);
        g58 = v23;
        windowHandle = windowHandle2;
        // branch -> 0x406268
    }
    // 0x406268
    if ((int32_t)windowHandle != g131) {
        // 0x40626c
        v14 = g110;
        v7 = function_409b6d((struct struct_32 *)v14, (int32_t)*a1);
        v9 = (char *)windowHandle;
        v10 = v7;
        v12 = (int32_t)*a1;
        v11 = (char *)v12;
        v6 = *(char *)v14;
        v8 = function_406a30((struct struct_15 *)v12, (struct struct_15 *)&v10, (struct struct_15 *)windowHandle, g59, (int32_t)v6);
        v13 = (int32_t *)v8;
        // branch -> 0x40628b
    } else {
        v13 = windowHandle;
    }
    // 0x40628b
    g131 = (int32_t)*v11;
    g130 = v10;
    g127 = (int32_t)*v9;
    return (int32_t)v13;
}

// Address range: 0x406294 - 0x4062b1
int32_t function_406294(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6) {
    int32_t v1 = 0; // bp-8
    function_406173((char *)&a1, (int32_t)&a2, &a3, (char *)&a4, (int32_t)&a5, (char *)&a6, (char *)&v1);
    g129 = a1;
    return g124;
}

// Address range: 0x4062b4 - 0x406316
void function_4062b4(void) {
    int32_t v1;
    if (v1 == 312) {
        // 0x4062c4
        int32_t * hdc;
        int32_t v2 = (int32_t)hdc;
        int32_t v3 = g130; // 0x4062c9
        int32_t v4;
        int32_t v5 = &v4; // 0x4062ca_0
        g130 = v5;
        int32_t color = *(int32_t *)(v5 + 20); // 0x4062ce
        int32_t v6 = g131;
        g131 = g32;
        if (color != -1) {
            // 0x4062dd
            SetTextColor(hdc, color);
            int32_t v7 = g130; // 0x4062e5
            if (*(int32_t *)(v7 + 16) == -1) {
                // 0x4062eb
                SetBkColor((int32_t *)v2, GetSysColor(15));
                GetSysColorBrush(15);
                v5 = g130;
                // branch -> 0x406301
            } else {
                v5 = v7;
            }
        }
        int32_t color2 = *(int32_t *)(v5 + 16); // 0x406301
        if (color2 == -1) {
            // 0x406301
            // branch -> 0x406310
        } else {
            // 0x406309
            SetBkColor((int32_t *)v2, color2);
            // branch -> 0x406310
        }
        // 0x406310
        g131 = &v6;
        g130 = v3;
        // branch -> 0x406313
    }
}

// Address range: 0x406319 - 0x406404
int32_t function_406319(int32_t * a1, int32_t X, int32_t * a3, int32_t * a4, int32_t nHeight, int32_t a6, uint32_t a7) {
    int32_t v1 = g111; // bp-20
    function_409cdf((char *)&v1);
    int32_t v2 = g124; // 0x406331
    g127 = v2;
    g131 = 0x40f2d0;
    if (g64 == 0) {
        // 0x40633a
        g130 = 152;
        abort();
        // UNREACHABLE
    }
    int32_t v3 = *(int32_t *)v2; // 0x4063a9
    int32_t dwStyle = a7 | 0x50020000; // 0x4063ab
    g125 = dwStyle;
    int32_t v4 = nHeight;
    int32_t dwExStyle = a7 / 256 & 512; // 0x4063ba
    g124 = dwExStyle;
    int32_t v5 = a6 == 0 ? 0x40c02d : a6;
    int32_t * windowHandle = CreateWindowExA(dwExStyle, "Static", (char *)&v5, dwStyle, X, (int32_t)a3, (int32_t)a4, nHeight, (int32_t *)v3, (int32_t *)-1, (int32_t *)g35, NULL); // 0x4063cf
    int32_t result; // 0x4063f7
    if (windowHandle != NULL) {
        int32_t v6 = g110; // 0x4063de
        int32_t v7 = function_409b6d((struct struct_32 *)v6, (int32_t)a1); // 0x4063e4
        *(int32_t *)(v7 + 20) = -1;
        *(int32_t *)(v7 + 16) = -1;
        v4 = v7;
        char v8 = *(char *)v6;
        result = function_406a30((struct struct_15 *)a1, (struct struct_15 *)&v4, (struct struct_15 *)windowHandle, g63, (int32_t)v8);
        // branch -> 0x4063fe
    } else {
        v4 = nHeight;
        a1 = a4;
        result = 0;
    }
    // 0x4063fe
    g131 = (int32_t)a1;
    g130 = v4;
    return result;
}

// Address range: 0x406407 - 0x406424
int32_t function_406407(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6) {
    int32_t v1 = &a3; // bp-24
    function_406319(&a1, a2, &v1, &a4, a5, a6, 0);
    g129 = a1;
    return g124;
}

// Address range: 0x406427 - 0x4064b9
void function_406427(void) {
    // 0x406427
    int32_t v1;
    g130 = v1;
    int32_t * hdc2; // 0x406487_0
    int32_t * v2; // 0x4064ac_01
    int32_t v3;
    int32_t color2; // 0x406480
    int32_t color3; // 0x406490
    int32_t v4;
    int32_t * hdc;
    int32_t * v5;
    int32_t v6;
    int32_t v7; // 0x4064b32
    int32_t v8; // 0x4064b33
    int32_t v9; // 0x406452
    int32_t v10; // 0x40646e
    int32_t v11; // 0x4064a4
    int32_t color; // 0x406452
    int32_t color4; // 0x4064a4
    switch (v4) {
        case 307: {
            v9 = v1;
            // 0x406452
            color = *(int32_t *)(v9 + 20);
            v3 = (int32_t)hdc;
            g131 = g32;
            v11 = v9;
            v7 = v6;
            if (color != -1) {
                // 0x406466
                SetTextColor(hdc, color);
                v10 = g130;
                if (*(int32_t *)(v10 + 16) == -1) {
                    // 0x406474
                    if (v4 == 312) {
                        // 0x40647e
                        color2 = GetSysColor(15);
                        hdc2 = (int32_t *)v3;
                        SetBkColor(hdc2, color2);
                        v8 = 15;
                        v2 = hdc2;
                        // branch -> 0x40649c
                    } else {
                        // 0x40648e
                        color3 = GetSysColor(5);
                        SetBkColor((int32_t *)v3, color3);
                        v8 = color;
                        v2 = (int32_t *)5;
                        // branch -> 0x40649c
                    }
                    // 0x40649c
                    GetSysColorBrush((int32_t)v2);
                    v11 = g130;
                    v7 = v8;
                    // branch -> 0x4064a4
                } else {
                    v11 = v10;
                    v7 = color;
                }
            }
            // 0x4064a4
            color4 = *(int32_t *)(v11 + 16);
            if (color4 != -1) {
                // 0x4064ac
                SetBkColor((int32_t *)v3, color4);
                // branch -> 0x4064b3
            }
            // 0x4064b3
            g131 = v7;
            v5 = (int32_t *)g129;
            // branch -> 0x4064b5
            break;
        }
        case 312: {
            int32_t * hWnd = (int32_t *)*(int32_t *)v1; // 0x406446_1
            if (IsWindowEnabled(hWnd) != false) {
                // 0x406446
                v9 = g130;
                // branch -> 0x406452
                // 0x406452
                color = *(int32_t *)(v9 + 20);
                v3 = (int32_t)hdc;
                g131 = g32;
                v11 = v9;
                v7 = v6;
                if (color != -1) {
                    // 0x406466
                    SetTextColor(hdc, color);
                    v10 = g130;
                    if (*(int32_t *)(v10 + 16) == -1) {
                        // 0x406474
                        if (v4 == 312) {
                            // 0x40647e
                            color2 = GetSysColor(15);
                            hdc2 = (int32_t *)v3;
                            SetBkColor(hdc2, color2);
                            v8 = 15;
                            v2 = hdc2;
                            // branch -> 0x40649c
                        } else {
                            // 0x40648e
                            color3 = GetSysColor(5);
                            SetBkColor((int32_t *)v3, color3);
                            v8 = color;
                            v2 = (int32_t *)5;
                            // branch -> 0x40649c
                        }
                        // 0x40649c
                        GetSysColorBrush((int32_t)v2);
                        v11 = g130;
                        v7 = v8;
                        // branch -> 0x4064a4
                    } else {
                        v11 = v10;
                        v7 = color;
                    }
                }
                // 0x4064a4
                color4 = *(int32_t *)(v11 + 16);
                if (color4 != -1) {
                    // 0x4064ac
                    SetBkColor((int32_t *)v3, color4);
                    // branch -> 0x4064b3
                }
                // 0x4064b3
                g131 = v7;
                v5 = (int32_t *)g129;
                // branch -> 0x4064b5
            } else {
                v5 = hWnd;
            }
            // 0x4064b5
            g130 = (int32_t)v5;
            return;
        }
    }
    // 0x4064b5
    g130 = (int32_t)v5;
}

// Address range: 0x4064bc - 0x4064f8
void function_4064bc(void) {
    int32_t v1;
    int32_t Msg = &v1; // 0x4064bf_0
    int32_t wParam;
    int32_t * v2;
    int32_t * hWnd;
    if (&v1 == (int32_t *)7) {
        // 0x4064d7
        int32_t v3;
        function_406b72((int32_t)hWnd, v3);
        // branch -> 0x4064df
        // 0x4064df
        CallWindowProcA((int32_t *)g65, hWnd, Msg, wParam, (int32_t)v2);
        return;
    }
    // 0x4064cc
    if (&v1 != (int32_t *)8) {
        // 0x4064df
        CallWindowProcA((int32_t *)g65, hWnd, Msg, wParam, (int32_t)v2);
        return;
    }
    // 0x4064d7
    function_406b72((int32_t)hWnd, 0x36b1);
    // branch -> 0x4064df
    // 0x4064df
    CallWindowProcA((int32_t *)g65, hWnd, Msg, wParam, (int32_t)v2);
}

// Address range: 0x4064fb - 0x4065fd
int32_t function_4064fb(int32_t * a1, int32_t X, int32_t * a3, int32_t * a4, int32_t * a5, int32_t a6, uint32_t a7) {
    int32_t v1 = g111; // bp-20
    function_409cdf((char *)&v1);
    int32_t v2 = g124; // 0x406513
    g130 = v2;
    g127 = 0x40f378;
    if (g67 == 0) {
        // 0x40651c
        g131 = 152;
        abort();
        // UNREACHABLE
    }
    int32_t v3 = *(int32_t *)v2; // 0x40658b
    int32_t dwStyle = a7 | 0x50030080; // 0x40658d
    g125 = dwStyle;
    int32_t dwExStyle = a7 / 256 & 512 ^ 512; // 0x4065a1
    g124 = dwExStyle;
    int32_t v4 = a6 == 0 ? 0x40c02d : a6;
    int32_t * windowHandle = CreateWindowExA(dwExStyle, "Edit", (char *)&v4, dwStyle, X, (int32_t)a3, (int32_t)a4, (int32_t)a5, (int32_t *)v3, (int32_t *)-1, (int32_t *)g35, NULL); // 0x4065b3
    int32_t result; // 0x4065f0
    int32_t * v5; // 0x4065fa_03
    void (*v6)(); // 0x4065fc_05
    if (windowHandle != NULL) {
        int32_t v7 = g110; // 0x4065c2
        g130 = function_409b6d((struct struct_32 *)v7, (int32_t)a1);
        int32_t v8 = SetWindowLongA(windowHandle, -4, (int32_t)function_4064bc); // 0x4065d7
        *(int32_t *)(g130 + 20) = -1;
        *(int32_t *)(g130 + 16) = -1;
        int32_t v9 = g130; // 0x4065e7
        g65 = v8;
        char v10 = *(char *)v7;
        result = function_406a30((struct struct_15 *)a1, (struct struct_15 *)v9, (struct struct_15 *)windowHandle, g66, (int32_t)v10);
        v6 = (void (*)())g127;
        v5 = (int32_t *)v9;
        // branch -> 0x4065f7
    } else {
        v6 = (void (*)())-1;
        v5 = a5;
        a1 = a4;
        result = 0;
    }
    // 0x4065f7
    g131 = (int32_t)a1;
    g130 = (int32_t)v5;
    g129 = (int32_t)v6;
    return result;
}

// Address range: 0x406600 - 0x40661f
void function_406600(void) {
    // 0x406600
    int32_t v1;
    int32_t v2;
    int32_t wParam = v1 == 0 ? 0 : v2; // 0x4066191
    int32_t ** v3;
    int32_t v4 = *(int32_t *)v3; // 0x406617
    int32_t v5;
    SendMessageA((int32_t *)v4, 241, wParam, v1 == 0 ? v5 : 1);
}

// Address range: 0x406622 - 0x40663a
void function_406622(void) {
    // 0x406622
    int32_t ** v1;
    SendMessageA((int32_t *)*(int32_t *)v1, 240, 0, 0);
}

// Address range: 0x40663d - 0x4066fd
int32_t function_40663d(char * a1, int32_t X, int32_t * a3, char * a4, int32_t nHeight, char * a6, int32_t a7) {
    int32_t v1 = g111; // bp-24
    function_409cdf((char *)&v1);
    g127 = 0;
    g131 = 0x40f418;
    int32_t v2 = 0; // 0x4066cf
    if (g72 == 0) {
        // 0x406661
        g130 = 152;
        memset(&g68, 0, (int32_t)*(char *)152);
        g68 = 1;
        g69 = g130;
        g70 = 0x406622;
        g71 = 0x406600;
        g72 = 1;
        v2 = g127;
        // branch -> 0x406698
    }
    char * v3 = a6;
    if (*a6 == (char)v2) {
        // 0x40669d
        v3 = (char *)0x40c02d;
        // branch -> 0x4066a4
    }
    int32_t v4 = *(int32_t *)g124; // 0x4066b0
    int32_t v5 = nHeight;
    int32_t dwStyle = a7 | 0x50030000; // 0x4066b8
    g124 = dwStyle;
    char * v6 = (char *)(int32_t)*a4; // 0x4066bd_0
    char * v7 = v6; // bp-48
    char * lpWindowName = (char *)(int32_t)*v3; // 0x4066c7_0
    char v8 = *(char *)v2;
    char v9 = *v6;
    int32_t * windowHandle = CreateWindowExA((int32_t)v8, "Button", lpWindowName, dwStyle, X, (int32_t)a3, (int32_t)v9, nHeight, (int32_t *)v4, (int32_t *)-1, (int32_t *)g35, (int32_t *)v2); // 0x4066d0
    int32_t * v10; // 0x4066f81
    int32_t v11; // 0x4066fa
    if ((int32_t)windowHandle != g127) {
        char * v12 = (char *)(int32_t)*a1; // 0x4066dc_0
        int32_t v13 = g110; // 0x4066df
        v5 = function_409b6d((struct struct_32 *)v13, (int32_t)*v12);
        int32_t v14 = (int32_t)*a1;
        v7 = (char *)v14;
        char v15 = *(char *)v13;
        int32_t v16 = function_406a30((struct struct_15 *)v14, (struct struct_15 *)&v5, (struct struct_15 *)windowHandle, g68, (int32_t)v15); // 0x4066f0
        v11 = v5;
        v10 = (int32_t *)v16;
        // branch -> 0x4066f7
    } else {
        v11 = nHeight;
        v10 = windowHandle;
    }
    // 0x4066f7
    g131 = (int32_t)*v7;
    g130 = v11;
    return (int32_t)v10;
}

// Address range: 0x406700 - 0x40671d
int32_t function_406700(char * a1, int32_t a2, int32_t * a3, char * a4, int32_t a5, char * a6) {
    char * v1 = (char *)(int32_t)*a4; // 0x40670b_0
    char * v2 = (char *)(int32_t)*a1; // 0x406714_0
    function_40663d(v2, a2, a3, v1, a5, (char *)(int32_t)*a6, 0);
    g129 = (int32_t)*v2;
    return g124;
}

// Address range: 0x406720 - 0x406748
bool function_406720(int32_t a1) {
    // 0x406720
    function_409bf5((int32_t)*(char *)g110, a1);
    bool result; // 0x406742
    if (g124 != 0) {
        // 0x406733
        int32_t v1;
        bool v2;
        result = EnableWindow(*(int32_t *)g124, v1 == 0 | v2);
        // branch -> 0x406748
    }
    // 0x406748
    return result;
}

// Address range: 0x40674b - 0x406785
int32_t function_40674b(int32_t a1, int32_t a2) {
    // 0x40674b
    g130 = a2 == 0 ? 0x40c090 : a2;
    uint32_t v1 = function_409bf5((int32_t)*(char *)g110, a1); // 0x406763
    struct struct_14 * v2 = (struct struct_14 *)v1; // 0x406763_4
    if (v1 % 2 != 0 == false) {
        // 0x406784
        g130 = (int32_t)(int32_t *)0x406768;
        return (int32_t)v2;
    }
    int32_t v3 = v2->e3; // 0x40676f
    g125 = v3;
    struct struct_14 * v4; // 0x40677e_5
    if (v3 == 0) {
        int32_t v5 = *(int32_t *)(int32_t)(v1 % 2 != 0); // 0x40677c
        v4 = (struct struct_14 *)(int32_t)SetWindowTextA((int32_t *)v5, (char *)NULL);
        // branch -> 0x406784
    } else {
        // 0x406777
        ((int32_t (*)(int32_t))v3)(v1);
        v4 = v2;
        // branch -> 0x406784
    }
    // 0x406784
    g130 = (int32_t)(int32_t *)g130;
    return (int32_t)v4;
}

// Address range: 0x406788 - 0x406858
int32_t function_406788(void) {
    int32_t v1 = g55; // 0x40678e
    int32_t result = v1; // 0x406852
    if (v1 == 0) {
        // 0x40679b
        g131 = g16;
        int32_t * moduleHandle = LoadLibraryA("COMCTL32.DLL"); // 0x4067a8
        g130 = g17;
        int16_t v2;
        if (moduleHandle != NULL) {
            int32_t (*func)() = GetProcAddress(moduleHandle, "DllGetVersion"); // 0x4067bd
            if (func == NULL) {
                // 0x4067fc
                g55 = 1;
                // branch -> 0x406806
            } else {
                // 0x4067c6
                int32_t * v3;
                memset(v3, 0, 20);
                ((int32_t (*)(int32_t))func)(20);
                if (g124 >= 0) {
                    int32_t v4 = v2; // 0x4067ec
                    g125 = v4;
                    int32_t v5;
                    int32_t v6 = v4 | 0x10000 * (int32_t)&v5; // 0x4067f3
                    g124 = v6;
                    g55 = v6;
                    // branch -> 0x406806
                }
            }
            // 0x406806
            FreeLibrary(moduleHandle);
            // branch -> 0x40680f
        }
        int32_t * moduleHandle2 = LoadLibraryA("uxtheme.dll"); // 0x406814
        g57 = (int32_t)moduleHandle2;
        int32_t v7;
        if (moduleHandle2 != NULL) {
            int32_t (*func2)() = GetProcAddress(moduleHandle2, "IsAppThemed"); // 0x406825
            if (func2 != NULL) {
                // 0x40682b
                func2();
                if (g124 == 0 || g55 < 0x60000) {
                    // 0x406849
                    g56 = 0;
                    // branch -> 0x406850
                } else {
                    // 0x40683d
                    g56 = 1;
                    // branch -> 0x406850
                }
                // 0x406850
                g131 = v2;
                g130 = v7;
                // branch -> 0x406852
                // 0x406852
                return g55;
            }
        }
        // 0x406850
        g131 = v2;
        g130 = v7;
        result = g55;
        // branch -> 0x406852
    }
    // 0x406852
    return result;
}

// Address range: 0x406859 - 0x406874
void function_406859(void) {
    // 0x406859
    int32_t v1;
    function_409bf5((int32_t)*(char *)g110, v1);
    if (g124 != 0) {
        // 0x40686c
        DestroyWindow((int32_t *)*(int32_t *)g124);
        // branch -> 0x406874
    }
}

// Address range: 0x406877 - 0x406970
void function_406877(int32_t a1, struct _RECT * a2, int32_t a3, int32_t a4, int32_t * a5) {
    struct _RECT * lpRect = NULL; // bp-20
    struct _RECT * v1 = NULL; // bp-12
    struct _RECT * v2 = a2;
    g127 = a4;
    g130 = a1;
    g131 = -0xffff;
    int32_t v3 = -0xffff; // 0x4068c1
    struct _RECT * v4 = a2; // 0x4068c1_0
    if (a2 == (struct _RECT *)-0xffff || a3 == -0xffff || a4 == -0xffff || a5 == (int32_t *)-0xffff) {
        // 0x40689e
        GetWindowRect((int32_t *)*(int32_t *)a1, lpRect);
        GetParent((int32_t *)*(int32_t *)g130);
        MapWindowPoints();
        v3 = g131;
        v4 = v2;
        // branch -> 0x4068c1
    }
    int32_t v5 = v3; // 0x4068db
    if ((int32_t)v4 == v3) {
        int32_t v6 = g130; // 0x4068c6
        int32_t v7 = *(int32_t *)(*(int32_t *)(v6 + 4) + 76); // 0x4068c9
        g124 = v7;
        int32_t v8; // 0x4068d8
        if (v7 == 0) {
            v8 = (int32_t)lpRect;
            // branch -> 0x4068d8
        } else {
            // 0x4068d0
            ((int32_t (*)(int32_t))v7)(v6);
            v3 = g131;
            v8 = g124;
            // branch -> 0x4068d8
        }
        // 0x4068d8
        v2 = (struct _RECT *)v8;
        v5 = v3;
        // branch -> 0x4068db
    }
    int32_t v9 = v5; // 0x4068f5
    int32_t v10 = a3; // 0x4069331
    int32_t v11;
    int32_t v12;
    int32_t v13; // 0x406939
    int32_t v14; // 0x4068f9
    int32_t v15; // 0x406915
    int32_t v16; // 0x406941
    int32_t v17; // 0x4068fc
    int32_t v18; // 0x406918
    int32_t v19; // 0x406910
    if (v5 != a3) {
        // 0x4068f5
        if (g127 != v9) {
            // 0x406910
            if ((int32_t)a5 != v9) {
                // 0x40692d
                v13 = *(int32_t *)g130;
                MoveWindow();
                v16 = g130;
                switch (*(int32_t *)*(int32_t *)(v16 + 4)) {
                    case 1: {
                        // 0x40694b
                        v11 = 0;
                        v12 = *(int32_t *)v16;
                        RedrawWindow(&v12, NULL, NULL, 7, v13);
                        // branch -> 0x40696c
                        break;
                    }
                    case 3: {
                        // 0x406960
                        v11 = *(int32_t *)v16;
                        InvalidateRect(&v11, NULL, false);
                        // branch -> 0x40696c
                        break;
                    }
                }
                // 0x40696c
                g131 = (int32_t)v2;
                g130 = v10;
                return;
            }
            // 0x406915
            v15 = g130;
            v18 = *(int32_t *)(*(int32_t *)(v15 + 4) + 88);
            g124 = v18;
            if (v18 == 0) {
                // 0x406924
                // branch -> 0x40692d
            } else {
                // 0x40691f
                ((int32_t (*)(int32_t))v18)(v15);
                // branch -> 0x40692d
            }
            // 0x40692d
            v13 = *(int32_t *)g130;
            MoveWindow();
            v16 = g130;
            switch (*(int32_t *)*(int32_t *)(v16 + 4)) {
                case 1: {
                    // 0x40694b
                    v11 = 0;
                    v12 = *(int32_t *)v16;
                    RedrawWindow(&v12, NULL, NULL, 7, v13);
                    // branch -> 0x40696c
                    break;
                }
                case 3: {
                    // 0x406960
                    v11 = *(int32_t *)v16;
                    InvalidateRect(&v11, NULL, false);
                    // branch -> 0x40696c
                    break;
                }
            }
            // 0x40696c
            g131 = (int32_t)v2;
            g130 = v10;
            return;
        }
        // 0x4068f9
        v14 = g130;
        v17 = *(int32_t *)(*(int32_t *)(v14 + 4) + 84);
        g124 = v17;
        if (v17 == 0) {
            // 0x40690a
            g127 = (int32_t)v1 - (int32_t)lpRect;
            v19 = v9;
            // branch -> 0x406910
        } else {
            // 0x406903
            ((int32_t (*)(int32_t))v17)(v14);
            g127 = g124;
            v19 = g131;
            // branch -> 0x406910
        }
        // 0x406910
        if ((int32_t)a5 != v19) {
            // 0x40692d
            v13 = *(int32_t *)g130;
            MoveWindow();
            v16 = g130;
            switch (*(int32_t *)*(int32_t *)(v16 + 4)) {
                case 1: {
                    // 0x40694b
                    v11 = 0;
                    v12 = *(int32_t *)v16;
                    RedrawWindow(&v12, NULL, NULL, 7, v13);
                    // branch -> 0x40696c
                    break;
                }
                case 3: {
                    // 0x406960
                    v11 = *(int32_t *)v16;
                    InvalidateRect(&v11, NULL, false);
                    // branch -> 0x40696c
                    break;
                }
            }
            // 0x40696c
            g131 = (int32_t)v2;
            g130 = v10;
            return;
        }
        // 0x406915
        v15 = g130;
        v18 = *(int32_t *)(*(int32_t *)(v15 + 4) + 88);
        g124 = v18;
        if (v18 == 0) {
            // 0x406924
            // branch -> 0x40692d
        } else {
            // 0x40691f
            ((int32_t (*)(int32_t))v18)(v15);
            // branch -> 0x40692d
        }
        // 0x40692d
        v13 = *(int32_t *)g130;
        MoveWindow();
        v16 = g130;
        switch (*(int32_t *)*(int32_t *)(v16 + 4)) {
            case 1: {
                // 0x40694b
                v11 = 0;
                v12 = *(int32_t *)v16;
                RedrawWindow(&v12, NULL, NULL, 7, v13);
                // branch -> 0x40696c
                break;
            }
            case 3: {
                // 0x406960
                v11 = *(int32_t *)v16;
                InvalidateRect(&v11, NULL, false);
                // branch -> 0x40696c
                break;
            }
        }
        // 0x40696c
        g131 = (int32_t)v2;
        g130 = v10;
        return;
    }
    int32_t v20 = g130; // 0x4068e0
    int32_t v21 = *(int32_t *)(*(int32_t *)(v20 + 4) + 80); // 0x4068e3
    g124 = v21;
    if (v21 == 0) {
        // 0x4068ef
        v9 = a3;
        int32_t v22;
        v10 = v22;
        // branch -> 0x4068f5
    } else {
        // 0x4068ea
        ((int32_t (*)(int32_t))v21)(v20);
        v9 = g131;
        v10 = g124;
        // branch -> 0x4068f5
    }
    // 0x4068f5
    if (g127 != v9) {
        // 0x406910
        if ((int32_t)a5 != v9) {
            // 0x40692d
            v13 = *(int32_t *)g130;
            MoveWindow();
            v16 = g130;
            switch (*(int32_t *)*(int32_t *)(v16 + 4)) {
                case 1: {
                    // 0x40694b
                    v11 = 0;
                    v12 = *(int32_t *)v16;
                    RedrawWindow(&v12, NULL, NULL, 7, v13);
                    // branch -> 0x40696c
                    break;
                }
                case 3: {
                    // 0x406960
                    v11 = *(int32_t *)v16;
                    InvalidateRect(&v11, NULL, false);
                    // branch -> 0x40696c
                    break;
                }
            }
            // 0x40696c
            g131 = (int32_t)v2;
            g130 = v10;
            return;
        }
        // 0x406915
        v15 = g130;
        v18 = *(int32_t *)(*(int32_t *)(v15 + 4) + 88);
        g124 = v18;
        if (v18 == 0) {
            // 0x406924
            // branch -> 0x40692d
        } else {
            // 0x40691f
            ((int32_t (*)(int32_t))v18)(v15);
            // branch -> 0x40692d
        }
        // 0x40692d
        v13 = *(int32_t *)g130;
        MoveWindow();
        v16 = g130;
        switch (*(int32_t *)*(int32_t *)(v16 + 4)) {
            case 1: {
                // 0x40694b
                v11 = 0;
                v12 = *(int32_t *)v16;
                RedrawWindow(&v12, NULL, NULL, 7, v13);
                // branch -> 0x40696c
                break;
            }
            case 3: {
                // 0x406960
                v11 = *(int32_t *)v16;
                InvalidateRect(&v11, NULL, false);
                // branch -> 0x40696c
                break;
            }
        }
        // 0x40696c
        g131 = (int32_t)v2;
        g130 = v10;
        return;
    }
    // 0x4068f9
    v14 = g130;
    v17 = *(int32_t *)(*(int32_t *)(v14 + 4) + 84);
    g124 = v17;
    if (v17 == 0) {
        // 0x40690a
        g127 = (int32_t)v1 - (int32_t)lpRect;
        v19 = v9;
        // branch -> 0x406910
    } else {
        // 0x406903
        ((int32_t (*)(int32_t))v17)(v14);
        g127 = g124;
        v19 = g131;
        // branch -> 0x406910
    }
    // 0x406910
    if ((int32_t)a5 != v19) {
        // 0x40692d
        v13 = *(int32_t *)g130;
        MoveWindow();
        v16 = g130;
        switch (*(int32_t *)*(int32_t *)(v16 + 4)) {
            case 1: {
                // 0x40694b
                v11 = 0;
                v12 = *(int32_t *)v16;
                RedrawWindow(&v12, NULL, NULL, 7, v13);
                // branch -> 0x40696c
                break;
            }
            case 3: {
                // 0x406960
                v11 = *(int32_t *)v16;
                InvalidateRect(&v11, NULL, false);
                // branch -> 0x40696c
                break;
            }
        }
        // 0x40696c
        g131 = (int32_t)v2;
        g130 = v10;
        return;
    }
    // 0x406915
    v15 = g130;
    v18 = *(int32_t *)(*(int32_t *)(v15 + 4) + 88);
    g124 = v18;
    if (v18 == 0) {
        // 0x406924
        // branch -> 0x40692d
    } else {
        // 0x40691f
        ((int32_t (*)(int32_t))v18)(v15);
        // branch -> 0x40692d
    }
    // 0x40692d
    v13 = *(int32_t *)g130;
    MoveWindow();
    v16 = g130;
    switch (*(int32_t *)*(int32_t *)(v16 + 4)) {
        case 1: {
            // 0x40694b
            v11 = 0;
            v12 = *(int32_t *)v16;
            RedrawWindow(&v12, NULL, NULL, 7, v13);
            // branch -> 0x40696c
            break;
        }
        case 3: {
            // 0x406960
            v11 = *(int32_t *)v16;
            InvalidateRect(&v11, NULL, false);
            // branch -> 0x40696c
            break;
        }
    }
    // 0x40696c
    g131 = (int32_t)v2;
    g130 = v10;
}

// Address range: 0x406973 - 0x406a2d
void function_406973(void) {
    int32_t v1;
    g131 = v1;
    GetWindowLongA();
    int32_t v2 = g124; // 0x406984
    g127 = v2;
    int32_t * v3;
    char * v4;
    int32_t * v5;
    int32_t * v6; // 0x406a2a_02
    if (v2 == -1) {
        char v7 = *(char *)(int32_t)*v4;
        DefWindowProcA((int32_t *)g131, (int32_t)v5, (int32_t)v3, (int32_t)v7);
        // branch -> 0x406a2a
    } else {
        int32_t v8 = function_409bf5((int32_t)*(char *)g110, v2); // 0x406997
        unsigned char v9 = *v4; // 0x40699c
        g130 = v8;
        int32_t v10 = *(int32_t *)(v8 + 12); // 0x4069a8
        CallWindowProcA((int32_t *)v10, (int32_t *)g131, (int32_t)v5, (int32_t)v3, (int32_t)v9);
        v6 = (int32_t *)0x4069b1;
        char * v11; // 0x406a09_0
        if (v5 == (int32_t *)130) {
            int32_t v12 = g130; // 0x4069bd
            int32_t v13 = *(int32_t *)(*(int32_t *)(v12 + 4) + 12); // 0x4069c0
            g124 = v13;
            if (v13 != 0) {
                // 0x4069c7
                ((int32_t (*)(int32_t))v13)(v12);
                // branch -> 0x4069ca
            }
            // 0x4069ca
            g130 = g21;
            RemovePropA();
            RemovePropA();
            if (g124 != 0) {
                // 0x4069e4
                RevokeDragDrop();
                // branch -> 0x4069eb
            }
            // 0x4069eb
            SetWindowLongA((int32_t *)g131, (int32_t)*(char *)-12, -1);
            function_4082e4(0x332c, g127, (int32_t)*(char *)-1);
            v11 = (char *)g110;
            function_409c5b((int32_t)*v11);
            v6 = (int32_t *)g127;
            // branch -> 0x406a14
        }
        // 0x406a14
        g130 = (int32_t)*v11;
        // branch -> 0x406a2a
    }
    // 0x406a2a
    g131 = (int32_t)v6;
}

// Address range: 0x406a30 - 0x406aa8
int32_t function_406a30(struct struct_15 * a1, struct struct_15 * a2, struct struct_15 * a3, int32_t a4, int32_t a5) {
    int32_t v1 = g111; // bp-24
    function_409cdf((char *)&v1);
    g130 = (int32_t)a2;
    int32_t v2 = g124; // 0x406a49
    if (a1 == (struct struct_15 *)-1) {
        // 0x406a4e
        a1 = a2;
        // branch -> 0x406a51
    }
    int32_t v3 = (int32_t)a3;
    g124 = &a4;
    g131 = g25;
    a2->e0 = (int32_t *)a3;
    a2->e1 = g124;
    a2->e3 = SetWindowLongA((int32_t *)a3, -4, (int32_t)function_406973);
    SetWindowLongA((int32_t *)v3, -12, (int32_t)a1);
    SetPropA();
    g131 = v2;
    SendMessageA((int32_t *)v3, 48, *(int32_t *)(v2 + 8), 1);
    *(int32_t *)(g131 + 4) = 0;
    int32_t v4 = g130; // 0x406a9b
    g131 = (int32_t)(struct struct_15 *)v3;
    g130 = (int32_t)"PB_ID";
    return (int32_t)a1 == v4 ? v4 : v3;
}

// Address range: 0x406aab - 0x406adb
int32_t function_406aab(int32_t a1) {
    g131 = g22;
    int32_t v1 = &a1; // bp-16
    int32_t * hWnd;
    int32_t * v2 = GetParent(hWnd); // 0x406ace
    int32_t * v3; // 0x406ad6_02
    int32_t v4; // 0x406ad74
    if (v2 != NULL) {
        // 0x406abb
        GetPropA();
        v4 = (int32_t)"PB_WindowID";
        v3 = v2;
        // branch -> 0x406ad6
    } else {
        int32_t v5;
        v4 = v5;
        int32_t * v6;
        v3 = v6;
    }
    // 0x406ad6
    g131 = (int32_t)v3;
    g130 = v4;
    g127 = &v1;
    return (int32_t)v2;
}

// Address range: 0x406ade - 0x406b35
void function_406ade(void) {
    int32_t v1;
    int32_t v2 = &v1; // 0x406ae6_0
    g130 = v2;
    int32_t * v3;
    int32_t * v4 = v3; // 0x406b2d_74
    int32_t v5;
    int32_t v6;
    int32_t v7;
    int32_t v8;
    switch (v6) {
        case 1: {
            // 0x406aeb
            *(int32_t *)(v2 + 20) = (int32_t)&v5;
            v4 = v3;
            // branch -> 0x406b22
            break;
        }
        case 2: {
            int32_t v9 = *(int32_t *)(v2 + 24); // 0x406af9
            if (v9 != 0) {
                // 0x406b00
                v7 = v9;
                function_406c17(&v7);
                // branch -> 0x406b06
            }
            int32_t * v10 = (int32_t *)g131; // 0x406b06_0
            int32_t v11 = &v5; // 0x406b07_0
            g131 = v11;
            v8 = v11;
            int32_t v12 = function_406baa(&v8); // 0x406b16
            *(int32_t *)(g130 + 24) = v12;
            *(int32_t *)(g130 + 16) = g131;
            g131 = v8;
            v4 = v10;
            // branch -> 0x406b22
            break;
        }
    }
    // 0x406b22
    v8 = 1031;
    int32_t v13 = *(int32_t *)g130;
    RedrawWindow(&v13, NULL, NULL, 1031, (int32_t)v4);
    g130 = v7;
}

// Address range: 0x406b38 - 0x406b5b
void function_406b38(void) {
    // 0x406b38
    int32_t v1;
    switch (v1) {
        default: {
            // 0x406b58
            // branch -> 0x406b5b
            break;
        }
        case 1: {
            // 0x406b3f
            // branch -> 0x406b5b
            break;
        }
        case 2: {
            // 0x406b4f
            // branch -> 0x406b5b
            break;
        }
    }
}

// Address range: 0x406b5e - 0x406b6f
void function_406b5e(void) {
    int32_t v1;
    int32_t v2 = *(int32_t *)(v1 + 24); // 0x406b62
    if (v2 != 0) {
        int32_t v3 = v2;
        function_406c17(&v3);
        // branch -> 0x406b6f
    }
}

// Address range: 0x406b72 - 0x406ba7
int32_t function_406b72(int32_t a1, int32_t a2) {
    // 0x406b72
    function_406aab(a1);
    GetPropA();
    int32_t result = g124 - 1; // 0x406b8b
    GetWindowLongA();
    function_408227(0x332c, result, (int32_t)"PB_WindowID", -12);
    return result;
}

// Address range: 0x406baa - 0x406c14
int32_t function_406baa(int32_t * a1) {
    int32_t v1 = g131; // 0x406bac
    int32_t v2 = 0x40f5b8;
    g131 = 0;
    EnterCriticalSection(g109);
    int32_t v3 = g73; // 0x406bbb
    g124 = v3;
    int32_t v4 = (int32_t)a1; // 0x406bc0_1
    struct struct_16 * v5; // 0x406be5_5
    int32_t v6; // 0x406be5
    int32_t * v7; // 0x406bf5
    int32_t v8; // 0x406bdd
    int32_t color; // 0x406bf2
    int32_t * v9; // 0x406c0f2
    int32_t * v10; // 0x406c0f3
    if (v3 == 0) {
        // 0x406bdd
        v8 = g130;
        v6 = function_40a31c((struct struct_18 *)&g73, 20);
        v5 = (struct struct_16 *)v6;
        g130 = v6;
        if (v6 != 0) {
            // 0x406bf2
            color = v4;
            *(int32_t *)v6 = color;
            v7 = CreateSolidBrush(color);
            v5->e1 = v7;
            v5->e2 = 1;
            v9 = v7;
            // branch -> 0x406c07
        } else {
            v9 = v10;
        }
        // 0x406c07
        g130 = v8;
        // branch -> 0x406c08
        // 0x406c08
        LeaveCriticalSection((int32_t *)v2);
        g131 = v1;
        return (int32_t)v9;
    }
    while (true) {
        // 0x406bc6
        int32_t * v11; // 0x406bd3_1
        if (*(int32_t *)(v3 + 8) == v4) {
            int32_t v12 = *(int32_t *)(v3 + 12); // 0x406bd3
            v11 = (int32_t *)v12;
            int32_t * v13 = (int32_t *)(v3 + 16); // 0x406bd6_0
            *v13 = *v13 + 1;
            if (v12 != 0) {
                // 0x406c08
                LeaveCriticalSection((int32_t *)v2);
                g131 = v1;
                return (int32_t)v11;
            }
        } else {
            int32_t v14 = *(int32_t *)v3; // 0x406bcb
            g124 = v14;
            if (v14 == 0) {
                // break -> 0x406bdd
                break;
            }
            v3 = v14;
            // continue -> 0x406bc6
            continue;
        }
        // 0x406bdd
        v8 = g130;
        v6 = function_40a31c((struct struct_18 *)&g73, 20);
        v5 = (struct struct_16 *)v6;
        g130 = v6;
        if (v6 != 0) {
            // 0x406bf2
            color = v4;
            *(int32_t *)v6 = color;
            v7 = CreateSolidBrush(color);
            v5->e1 = v7;
            v5->e2 = 1;
            v9 = v7;
            // branch -> 0x406c07
        } else {
            v9 = v11;
        }
        // 0x406c07
        g130 = v8;
        // branch -> 0x406c08
        // 0x406c08
        LeaveCriticalSection((int32_t *)v2);
        g131 = v1;
        return (int32_t)v9;
    }
    // 0x406bdd
    v8 = g130;
    v6 = function_40a31c((struct struct_18 *)&g73, 20);
    v5 = (struct struct_16 *)v6;
    g130 = v6;
    if (v6 != 0) {
        // 0x406bf2
        color = v4;
        *(int32_t *)v6 = color;
        v7 = CreateSolidBrush(color);
        v5->e1 = v7;
        v5->e2 = 1;
        v9 = v7;
        // branch -> 0x406c07
    } else {
        v9 = v10;
    }
    // 0x406c07
    g130 = v8;
    // branch -> 0x406c08
    // 0x406c08
    LeaveCriticalSection((int32_t *)v2);
    g131 = v1;
    return (int32_t)v9;
}

// Address range: 0x406c17 - 0x406c63
int32_t function_406c17(int32_t * a1) {
    int32_t v1 = g130; // bp-4
    int32_t v2 = g131; // 0x406c18
    g131 = 0x40f5b8;
    EnterCriticalSection(g109);
    int32_t v3 = g73;
    g130 = v3;
    if (v3 == 0) {
        // 0x406c5a
        LeaveCriticalSection((int32_t *)g131);
        g131 = v2;
        g130 = &v1;
        int32_t * v4; // 0x406c63_11
        return (int32_t)v4;
    }
    // branch -> 0x406c2d
    int32_t * ho; // 0x406c2d_1
    while (true) {
        int32_t v5 = *(int32_t *)(v3 + 12); // 0x406c2d
        ho = (int32_t *)v5;
        if (v5 == (int32_t)a1) {
            int32_t * v6 = (int32_t *)(v3 + 16); // 0x406c3e_0
            int32_t v7 = *v6 - 1; // 0x406c3e
            *v6 = v7;
            if (v7 == 0) {
                // 0x406c43
                DeleteObject(ho);
                int32_t v8 = g130 + 8; // 0x406c4a
                g130 = v8;
                int32_t * v9 = (int32_t *)(int32_t)function_40a2dc(&g73, v8); // 0x406c53_5
                // branch -> 0x406c5a
                // 0x406c5a
                LeaveCriticalSection((int32_t *)g131);
                g131 = v2;
                g130 = &v1;
                return (int32_t)v9;
            }
        } else {
            int32_t v10 = *(int32_t *)v3;
            g130 = v10;
            if (v10 == 0) {
                // break -> 0x406c5a
                break;
            }
            v3 = v10;
            // continue -> 0x406c2d
            continue;
        }
        // 0x406c5a
        LeaveCriticalSection((int32_t *)g131);
        g131 = v2;
        g130 = &v1;
        return (int32_t)ho;
    }
    // 0x406c5a
    LeaveCriticalSection((int32_t *)g131);
    g131 = v2;
    g130 = &v1;
    return (int32_t)ho;
}

// Address range: 0x406c66 - 0x406d5a
void function_406c66(void) {
    char * v1;
    function_409bf5((int32_t)*(char *)g112, (int32_t)*v1);
    int32_t v2 = g124; // 0x406c7e
    g130 = v2;
    if (v2 == 0) {
        // 0x406d58
        char * v3;
        g130 = (int32_t)*v3;
        return;
    }
    bool v4 = true;
    if (GetWindow((int32_t *)*(int32_t *)v2, 4) != NULL) {
        // 0x406c96
        if (*(int32_t *)(g130 + 28) == 0) {
            // 0x406c9c
            SetActiveWindow();
            v4 = false;
            // branch -> 0x406ca3
        } else {
            v4 = false;
        }
    }
    // 0x406ca3
    g131 = g21;
    RemovePropA();
    int32_t v5 = *(int32_t *)g130;
    RemovePropA();
    g131 = &v5;
    if (!v4) {
        // 0x406cc1
        v5 = *(int32_t *)g130;
        RevokeDragDrop();
        // branch -> 0x406cc9
    }
    int32_t v6 = g130; // 0x406cc9
    int32_t v7 = *(int32_t *)(v6 + 28); // 0x406cc9
    char * str;
    if (v7 == 0) {
        // 0x406ce2
        DestroyWindow((int32_t *)*(int32_t *)v6);
        sprintf(str, "WindowClass_%d", (int32_t)*v1);
        UnregisterClassA(str, (int32_t *)g35);
        // branch -> 0x406d14
    } else {
        char v8 = *(char *)545;
        char v9 = *(char *)*(int32_t *)v6;
        SendMessageA((int32_t *)v7, (int32_t)v8, (int32_t)v9, 0);
        // branch -> 0x406d14
    }
    int32_t v10 = *(int32_t *)(g130 + 4); // 0x406d14
    g124 = v10;
    if (v10 != 0) {
        int32_t hHeap = (int32_t)str; // 0x406d24
        HeapFree(hHeap, hHeap, (char *)v10);
        DestroyAcceleratorTable();
        // branch -> 0x406d33
    }
    int32_t v11 = *(int32_t *)(g130 + 24); // 0x406d33
    g130 = v11;
    if (v11 != 0) {
        // 0x406d3a
        DeleteObject((int32_t *)str);
        // branch -> 0x406d41
    }
    // 0x406d41
    function_40835e();
    function_409c5b((int32_t)str);
    // branch -> 0x406d58
    // 0x406d58
    g130 = (int32_t)*(char *)g112;
}

// Address range: 0x406d5d - 0x406da5
void function_406d5d(void) {
    int32_t v1 = g113; // bp-8
    function_409cdf((char *)&v1);
    int32_t v2 = g112; // 0x406d69
    char * v3 = (char *)v2; // bp-12
    g131 = g124;
    function_409d85((int32_t *)v2);
    int32_t v4 = g131; // 0x406d76
    int32_t v5 = *(int32_t *)(v4 + 68); // 0x406d76
    if (v5 == 0) {
        // 0x406da4
        g131 = (int32_t)*v3;
        return;
    }
    int32_t v6 = *(int32_t *)(v5 + 20); // 0x406d7d
    int32_t v7 = g130; // 0x406d82
    g130 = g13;
    int32_t v8; // 0x406d96
    if (v6 != 0) {
        // 0x406d8b
        HeapFree((int32_t)*(char *)g34, 0, (char *)v6);
        v8 = g131;
        // branch -> 0x406d96
    } else {
        v8 = v4;
    }
    char v9 = *(char *)g34;
    HeapFree((int32_t)v9, 0, (char *)*(int32_t *)(v8 + 68));
    g130 = v7;
    // branch -> 0x406da4
    // 0x406da4
    g131 = (int32_t)*v3;
}

// Address range: 0x406da6 - 0x406dda
void function_406da6(void) {
    int32_t v1 = g131; // 0x406da6
    int32_t v2;
    int32_t v3 = &v2; // 0x406da7_0
    g131 = v3;
    int32_t v4 = *(int32_t *)(v3 + 68); // 0x406dab
    if (v4 == 0) {
        // 0x406dd9
        g131 = v1;
        return;
    }
    int32_t v5 = *(int32_t *)(v4 + 20); // 0x406db2
    int32_t v6 = g130; // 0x406db7
    g130 = g13;
    int32_t v7; // 0x406dcb
    if (v5 != 0) {
        // 0x406dc0
        HeapFree((int32_t)*(char *)g34, 0, (char *)v5);
        v7 = g131;
        // branch -> 0x406dcb
    } else {
        v7 = v3;
    }
    char v8 = *(char *)g34;
    HeapFree((int32_t)v8, 0, (char *)*(int32_t *)(v7 + 68));
    g130 = v6;
    // branch -> 0x406dd9
    // 0x406dd9
    g131 = v1;
}

// Address range: 0x406ddb - 0x406e26
int32_t function_406ddb(void) {
    // 0x406ddb
    function_409c96(48, 16, (int32_t)function_406c66);
    g112 = g124;
    g113 = function_409ce6(72, 0);
    g114 = (int32_t)LoadIconA((int32_t *)g35, (char *)1);
    int32_t cursorHandle = LoadCursorA(NULL, (char *)0x7f00); // 0x406e1b
    g115 = cursorHandle;
    return cursorHandle;
}

// Address range: 0x406e27 - 0x406fac
void function_406e27(char * a1) {
    int32_t v1 = g129; // bp-4
    int32_t v2 = g113; // bp-48
    function_409cdf((char *)&v2);
    int32_t v3 = g124; // 0x406e3b
    g130 = v3;
    int32_t v4 = *(int32_t *)(v3 + 56); // 0x406e3d
    g125 = v4;
    g131 = 0;
    int32_t v5 = 0; // 0x406e6c
    int32_t v6 = v3; // 0x406e57
    char v7;
    char v8;
    int32_t wMsgFilterMin2; // 0x406ec8
    int32_t wMsgFilterMin; // 0x406f0f
    char v9;
    char * lpMem; // 0x406e75_1
    int32_t * v10; // 0x406f5f_0
    int32_t v11; // 0x406e9f
    bool v12; // 0x406ec8
    int32_t * windowHandle; // 0x406f15
    int32_t v13; // 0x406f1f
    int32_t v14;
    int32_t v15;
    int32_t v16;
    int32_t * lpMsg;
    char * v17;
    int32_t v18;
    int32_t v19; // 0x406e78
    int32_t v20; // 0x406f7a
    int32_t v21; // 0x406f62
    int32_t v22; // 0x406e75
    int32_t v23; // 0x406e8c
    int32_t v24; // 0x406e92
    int32_t v25; // 0x406f5f
    int32_t v26; // 0x406f7f
    int32_t v27; // 0x406f8a
    int32_t v28; // 0x406f90
    int32_t v29; // 0x406f96
    int32_t v30; // 0x406f9c
    int32_t v31; // 0x406fa2
    int32_t v32; // 0x406e84
    int32_t v33; // 0x406e88
    int32_t v34; // 0x406e8c
    int32_t v35; // 0x406e92
    int32_t v36; // 0x406e57
    int32_t v37; // 0x406e5e
    unsigned char v38; // 0x406f3a
    int32_t v39; // 0x406f5f
    int32_t v40; // 0x406fa2
    if (v4 == 0) {
        // 0x406e57
        v36 = *(int32_t *)(v6 + 68);
        v23 = v6;
        if (v36 != v5) {
            // 0x406e5e
            v37 = *(int32_t *)(v36 + 20);
            v19 = v5;
            v22 = v6;
            if (v37 != v5) {
                // 0x406e6b
                v7 = *(char *)v5;
                HeapFree((int32_t)*(char *)g34, (int32_t)v7, (char *)v37);
                v19 = g131;
                v22 = g130;
                // branch -> 0x406e75
            }
            // 0x406e75
            lpMem = (char *)*(int32_t *)(v22 + 68);
            v8 = *(char *)v19;
            HeapFree((int32_t)*(char *)g34, (int32_t)v8, lpMem);
            *(int32_t *)(g130 + 68) = g131;
            v23 = g130;
            // branch -> 0x406e84
        }
        // 0x406e84
        v32 = v23 + 28;
        v33 = v23 + 24;
        g124 = v33;
        v34 = v23 + 8;
        g127 = v34;
        *(int32_t *)v34 = -1;
        v24 = g130;
        v35 = v24 + 4;
        g126 = v35;
        *(int32_t *)(v24 + 12) = g131;
        *(int32_t *)g124 = g131;
        *(int32_t *)v32 = g131;
        v11 = function_408244((int32_t *)(char *)v24, (int32_t *)(char *)v35, (int32_t *)(char *)g127, (int32_t *)(char *)v33, (int32_t *)(char *)v32, v2);
        if (v11 == g131) {
            // 0x406eb9
            if (*a1 == -1) {
                // 0x406f0b
                wMsgFilterMin = (int32_t)*(char *)v11;
                GetMessageA((struct _MSG *)g124, (int32_t *)v11, wMsgFilterMin, wMsgFilterMin);
                // branch -> 0x406f15
            } else {
                // 0x406ec2
                wMsgFilterMin2 = (int32_t)*(char *)v11;
                v9 = *(char *)3;
                v12 = PeekMessageA(lpMsg, (int32_t *)v11, wMsgFilterMin2, wMsgFilterMin2, (int32_t)v9);
                if (!v12) {
                    // 0x406ed2
                    if (*a1 != (char)g131) {
                        // 0x406ede
                        MsgWaitForMultipleObjects();
                        // branch -> 0x406ed7
                    }
                    // 0x406ed7
                    g124 = 0;
                    // branch -> 0x406fa8
                    // 0x406fa8
                    g131 = (int32_t)*v17;
                    g130 = (int32_t)lpMsg;
                    g129 = &v1;
                    return;
                }
            }
            // 0x406f15
            windowHandle = GetActiveWindow();
            v13 = function_40753a((char *)windowHandle);
            if (v13 != g131) {
                // 0x406f28
                TranslateAcceleratorA();
                if (v13 != 0) {
                    // 0x406f3a
                    v38 = *(char *)windowHandle;
                    if (v38 != (char)g131) {
                        // 0x406f3f
                        v18 = v38;
                        v17 = (char *)v18;
                        function_4074e8((int32_t *)v18, (int32_t *)1);
                        // branch -> 0x406f5f
                    }
                    // 0x406f5f
                    v25 = g130;
                    v10 = (int32_t *)(v25 + 12);
                    v39 = *v10;
                    g124 = v39;
                    v21 = g131;
                    if (v39 == v21) {
                        // 0x406f6b
                        g124 = v16;
                        *(int32_t *)(v25 + 16) = (int32_t)&v15;
                        *(int32_t *)(g130 + 20) = v14;
                        // branch -> 0x406f7a
                    } else {
                        // 0x406f66
                        *v10 = v21;
                        // branch -> 0x406f7a
                    }
                    // 0x406f7a
                    v20 = g130;
                    *(int32_t *)(v20 + 32) = *(int32_t *)v20;
                    v26 = g130;
                    *(int32_t *)(v26 + 36) = *(int32_t *)(v26 + 4);
                    *(int32_t *)(g130 + 40) = *(int32_t *)g127;
                    v27 = g130;
                    *(int32_t *)(v27 + 44) = *(int32_t *)(v27 + 12);
                    v28 = g130;
                    *(int32_t *)(v28 + 48) = *(int32_t *)(v28 + 16);
                    v29 = g130;
                    *(int32_t *)(v29 + 52) = *(int32_t *)(v29 + 20);
                    v30 = g130;
                    *(int32_t *)(v30 + 56) = *(int32_t *)(v30 + 24);
                    v31 = g130;
                    v40 = *(int32_t *)(v31 + 28);
                    g125 = v40;
                    *(int32_t *)(v31 + 60) = v40;
                    // branch -> 0x406fa8
                    // 0x406fa8
                    g131 = (int32_t)*v17;
                    g130 = (int32_t)lpMsg;
                    g129 = &v1;
                    return;
                }
            }
            // 0x406f4b
            TranslateMessage(lpMsg);
            DispatchMessageA(lpMsg);
            // branch -> 0x406f5f
            // 0x406f5f
            v25 = g130;
            v10 = (int32_t *)(v25 + 12);
            v39 = *v10;
            g124 = v39;
            v21 = g131;
            if (v39 == v21) {
                // 0x406f6b
                g124 = v16;
                *(int32_t *)(v25 + 16) = (int32_t)&v15;
                *(int32_t *)(g130 + 20) = v14;
                // branch -> 0x406f7a
            } else {
                // 0x406f66
                *v10 = v21;
                // branch -> 0x406f7a
            }
            // 0x406f7a
            v20 = g130;
            *(int32_t *)(v20 + 32) = *(int32_t *)v20;
            v26 = g130;
            *(int32_t *)(v26 + 36) = *(int32_t *)(v26 + 4);
            *(int32_t *)(g130 + 40) = *(int32_t *)g127;
            v27 = g130;
            *(int32_t *)(v27 + 44) = *(int32_t *)(v27 + 12);
            v28 = g130;
            *(int32_t *)(v28 + 48) = *(int32_t *)(v28 + 16);
            v29 = g130;
            *(int32_t *)(v29 + 52) = *(int32_t *)(v29 + 20);
            v30 = g130;
            *(int32_t *)(v30 + 56) = *(int32_t *)(v30 + 24);
            v31 = g130;
            v40 = *(int32_t *)(v31 + 28);
            g125 = v40;
            *(int32_t *)(v31 + 60) = v40;
            // branch -> 0x406fa8
        } else {
            // 0x406eab
            *(int32_t *)(g130 + 12) = v11;
            *(int32_t *)(g130 + 16) = g131;
            *(int32_t *)(g130 + 20) = g131;
            // branch -> 0x406f7a
            // 0x406f7a
            v20 = g130;
            *(int32_t *)(v20 + 32) = *(int32_t *)v20;
            v26 = g130;
            *(int32_t *)(v26 + 36) = *(int32_t *)(v26 + 4);
            *(int32_t *)(g130 + 40) = *(int32_t *)g127;
            v27 = g130;
            *(int32_t *)(v27 + 44) = *(int32_t *)(v27 + 12);
            v28 = g130;
            *(int32_t *)(v28 + 48) = *(int32_t *)(v28 + 16);
            v29 = g130;
            *(int32_t *)(v29 + 52) = *(int32_t *)(v29 + 20);
            v30 = g130;
            *(int32_t *)(v30 + 56) = *(int32_t *)(v30 + 24);
            v31 = g130;
            v40 = *(int32_t *)(v31 + 28);
            g125 = v40;
            *(int32_t *)(v31 + 60) = v40;
            // branch -> 0x406fa8
        }
        // 0x406fa8
        g131 = (int32_t)*v17;
        g130 = (int32_t)lpMsg;
        g129 = &v1;
        return;
    }
    int32_t v41 = *(int32_t *)(v3 + 60); // 0x406e46
    g124 = v41;
    if (v41 != 0) {
        // 0x406e4d
        ((int32_t (*)(int32_t))v41)((int32_t)*(char *)v4);
        *(int32_t *)(g130 + 60) = g131;
        *(int32_t *)(g130 + 56) = g131;
        v5 = g131;
        v6 = g130;
        // branch -> 0x406e57
    } else {
        v5 = 0;
        v6 = v3;
    }
    // 0x406e57
    v36 = *(int32_t *)(v6 + 68);
    v23 = v6;
    if (v36 != v5) {
        // 0x406e5e
        v37 = *(int32_t *)(v36 + 20);
        v19 = v5;
        v22 = v6;
        if (v37 != v5) {
            // 0x406e6b
            v7 = *(char *)v5;
            HeapFree((int32_t)*(char *)g34, (int32_t)v7, (char *)v37);
            v19 = g131;
            v22 = g130;
            // branch -> 0x406e75
        }
        // 0x406e75
        lpMem = (char *)*(int32_t *)(v22 + 68);
        v8 = *(char *)v19;
        HeapFree((int32_t)*(char *)g34, (int32_t)v8, lpMem);
        *(int32_t *)(g130 + 68) = g131;
        v23 = g130;
        // branch -> 0x406e84
    }
    // 0x406e84
    v32 = v23 + 28;
    v33 = v23 + 24;
    g124 = v33;
    v34 = v23 + 8;
    g127 = v34;
    *(int32_t *)v34 = -1;
    v24 = g130;
    v35 = v24 + 4;
    g126 = v35;
    *(int32_t *)(v24 + 12) = g131;
    *(int32_t *)g124 = g131;
    *(int32_t *)v32 = g131;
    v11 = function_408244((int32_t *)(char *)v24, (int32_t *)(char *)v35, (int32_t *)(char *)g127, (int32_t *)(char *)v33, (int32_t *)(char *)v32, v2);
    if (v11 == g131) {
        // 0x406eb9
        if (*a1 == -1) {
            // 0x406f0b
            wMsgFilterMin = (int32_t)*(char *)v11;
            GetMessageA((struct _MSG *)g124, (int32_t *)v11, wMsgFilterMin, wMsgFilterMin);
            // branch -> 0x406f15
        } else {
            // 0x406ec2
            wMsgFilterMin2 = (int32_t)*(char *)v11;
            v9 = *(char *)3;
            v12 = PeekMessageA(lpMsg, (int32_t *)v11, wMsgFilterMin2, wMsgFilterMin2, (int32_t)v9);
            if (!v12) {
                // 0x406ed2
                if (*a1 != (char)g131) {
                    // 0x406ede
                    MsgWaitForMultipleObjects();
                    // branch -> 0x406ed7
                }
                // 0x406ed7
                g124 = 0;
                // branch -> 0x406fa8
                // 0x406fa8
                g131 = (int32_t)*v17;
                g130 = (int32_t)lpMsg;
                g129 = &v1;
                return;
            }
        }
        // 0x406f15
        windowHandle = GetActiveWindow();
        v13 = function_40753a((char *)windowHandle);
        if (v13 != g131) {
            // 0x406f28
            TranslateAcceleratorA();
            if (v13 != 0) {
                // 0x406f3a
                v38 = *(char *)windowHandle;
                if (v38 != (char)g131) {
                    // 0x406f3f
                    v18 = v38;
                    v17 = (char *)v18;
                    function_4074e8((int32_t *)v18, (int32_t *)1);
                    // branch -> 0x406f5f
                }
                // 0x406f5f
                v25 = g130;
                v10 = (int32_t *)(v25 + 12);
                v39 = *v10;
                g124 = v39;
                v21 = g131;
                if (v39 == v21) {
                    // 0x406f6b
                    g124 = v16;
                    *(int32_t *)(v25 + 16) = (int32_t)&v15;
                    *(int32_t *)(g130 + 20) = v14;
                    // branch -> 0x406f7a
                } else {
                    // 0x406f66
                    *v10 = v21;
                    // branch -> 0x406f7a
                }
                // 0x406f7a
                v20 = g130;
                *(int32_t *)(v20 + 32) = *(int32_t *)v20;
                v26 = g130;
                *(int32_t *)(v26 + 36) = *(int32_t *)(v26 + 4);
                *(int32_t *)(g130 + 40) = *(int32_t *)g127;
                v27 = g130;
                *(int32_t *)(v27 + 44) = *(int32_t *)(v27 + 12);
                v28 = g130;
                *(int32_t *)(v28 + 48) = *(int32_t *)(v28 + 16);
                v29 = g130;
                *(int32_t *)(v29 + 52) = *(int32_t *)(v29 + 20);
                v30 = g130;
                *(int32_t *)(v30 + 56) = *(int32_t *)(v30 + 24);
                v31 = g130;
                v40 = *(int32_t *)(v31 + 28);
                g125 = v40;
                *(int32_t *)(v31 + 60) = v40;
                // branch -> 0x406fa8
                // 0x406fa8
                g131 = (int32_t)*v17;
                g130 = (int32_t)lpMsg;
                g129 = &v1;
                return;
            }
        }
        // 0x406f4b
        TranslateMessage(lpMsg);
        DispatchMessageA(lpMsg);
        // branch -> 0x406f5f
        // 0x406f5f
        v25 = g130;
        v10 = (int32_t *)(v25 + 12);
        v39 = *v10;
        g124 = v39;
        v21 = g131;
        if (v39 == v21) {
            // 0x406f6b
            g124 = v16;
            *(int32_t *)(v25 + 16) = (int32_t)&v15;
            *(int32_t *)(g130 + 20) = v14;
            // branch -> 0x406f7a
        } else {
            // 0x406f66
            *v10 = v21;
            // branch -> 0x406f7a
        }
        // 0x406f7a
        v20 = g130;
        *(int32_t *)(v20 + 32) = *(int32_t *)v20;
        v26 = g130;
        *(int32_t *)(v26 + 36) = *(int32_t *)(v26 + 4);
        *(int32_t *)(g130 + 40) = *(int32_t *)g127;
        v27 = g130;
        *(int32_t *)(v27 + 44) = *(int32_t *)(v27 + 12);
        v28 = g130;
        *(int32_t *)(v28 + 48) = *(int32_t *)(v28 + 16);
        v29 = g130;
        *(int32_t *)(v29 + 52) = *(int32_t *)(v29 + 20);
        v30 = g130;
        *(int32_t *)(v30 + 56) = *(int32_t *)(v30 + 24);
        v31 = g130;
        v40 = *(int32_t *)(v31 + 28);
        g125 = v40;
        *(int32_t *)(v31 + 60) = v40;
        // branch -> 0x406fa8
    } else {
        // 0x406eab
        *(int32_t *)(g130 + 12) = v11;
        *(int32_t *)(g130 + 16) = g131;
        *(int32_t *)(g130 + 20) = g131;
        // branch -> 0x406f7a
        // 0x406f7a
        v20 = g130;
        *(int32_t *)(v20 + 32) = *(int32_t *)v20;
        v26 = g130;
        *(int32_t *)(v26 + 36) = *(int32_t *)(v26 + 4);
        *(int32_t *)(g130 + 40) = *(int32_t *)g127;
        v27 = g130;
        *(int32_t *)(v27 + 44) = *(int32_t *)(v27 + 12);
        v28 = g130;
        *(int32_t *)(v28 + 48) = *(int32_t *)(v28 + 16);
        v29 = g130;
        *(int32_t *)(v29 + 52) = *(int32_t *)(v29 + 20);
        v30 = g130;
        *(int32_t *)(v30 + 56) = *(int32_t *)(v30 + 24);
        v31 = g130;
        v40 = *(int32_t *)(v31 + 28);
        g125 = v40;
        *(int32_t *)(v31 + 60) = v40;
        // branch -> 0x406fa8
    }
    // 0x406fa8
    g131 = (int32_t)*v17;
    g130 = (int32_t)lpMsg;
    g129 = &v1;
}

// Address range: 0x406faf - 0x406fb6
void function_406faf(void) {
    // 0x406faf
    function_406e27((char *)-1);
}

// Address range: 0x406fb7 - 0x406fc5
int32_t function_406fb7(void) {
    int32_t v1 = g113; // bp-4
    function_409cdf((char *)&v1);
    return *(int32_t *)(g124 + 32);
}

// Address range: 0x406fc6 - 0x406fd4
int32_t function_406fc6(void) {
    int32_t v1 = g113; // bp-4
    function_409cdf((char *)&v1);
    return *(int32_t *)(g124 + 32);
}

// Address range: 0x406fd5 - 0x4072e3
int32_t function_406fd5(struct struct_17 * a1, char * a2, int32_t * a3, int32_t * a4, int32_t * a5, char * a6, int32_t * a7, char * a8) {
    int32_t v1 = (int32_t)a3; // 0x406fd5_1
    g131 = 0;
    g124 = 1;
    struct struct_17 * v2 = NULL; // bp-24
    if (g74 == 0) {
        // 0x406ff4
        g74 = 1;
        function_407640();
        // branch -> 0x406ffe
    }
    int32_t v3 = function_409b6d((struct struct_32 *)g112, (int32_t)a1); // 0x407007
    struct struct_17 * v4 = (struct struct_17 *)v3; // 0x407007_5
    g130 = v3;
    char * v5 = (char *)a1; // bp+012
    int32_t nWidth; // 0x4071ef
    char v6;
    unsigned char v7;
    char v8;
    char v9;
    int32_t * v10; // 0x40710e_0
    int32_t * v11; // 0x407117_0
    char * v12; // 0x4071e6_0
    char * lpWindowName; // 0x4071e8_0
    char * v13; // 0x4072aa_1
    char * v14; // 0x4072d2_0
    int32_t v15;
    int32_t v16; // 0x40713c
    int32_t v17; // 0x407156
    int32_t * windowHandle; // 0x40717d
    int32_t * windowHandle2; // 0x4071ef
    int32_t v18; // 0x407258
    int32_t v19; // 0x407167
    struct struct_17 * v20; // 0x4072e3_28
    char * str;
    char * v21; // bp-380
    char * v22; // bp-384
    char * v23; // bp-388
    int32_t * v24;
    int32_t * v25;
    int32_t v26; // 0x407114
    int32_t v27; // 0x407108
    int32_t v28; // 0x40714a
    int32_t v29; // 0x407164
    int32_t v30;
    int32_t v31; // 0x4070ef
    int32_t dwFlags; // 0x407247
    int32_t v32; // 0x4070d0
    int32_t v33; // 0x4072b4
    int32_t v34; // 0x4070b9
    int32_t v35; // 0x4070d6
    uint32_t v36; // 0x407128
    int32_t v37; // 0x40709f
    int32_t v38; // 0x4071cf
    int32_t v39; // 0x40709c
    int32_t v40; // 0x407094
    int32_t v41; // 0x40709c
    unsigned char v42; // 0x407176
    int32_t * v43; // 0x4071dd18
    int32_t * v44; // 0x4071e016
    int32_t Y; // 0x4071e313
    int32_t Y2; // 0x4071e314
    int32_t v45; // 0x407212
    char * v46; // bp+011
    int32_t v47; // 0x407036
    if (a1 == (struct struct_17 *)-1) {
        char * v48 = (char *)v3; // 0x407017_0
        if (v3 == -1) {
            // 0x40701c
            v46 = v48;
            // branch -> 0x407022
            // 0x407022
            sprintf(str, "WindowClass_%d", (int32_t)NULL);
            v47 = g131;
            if (*a6 == (char)v47) {
                // 0x40703b
                a6 = (char *)0x40c02d;
                // branch -> 0x407042
            }
            // 0x407042
            memset(v24, (int32_t)*(char *)v47, 40);
            RegisterClassA((int32_t *)8);
            v40 = (int32_t)a7;
            v41 = g131;
            v39 = a7 == (int32_t *)8 ? 1 : v41;
            v37 = v40 & -9;
            v15 = v37;
            v32 = v37;
            v25 = (int32_t *)1;
            if ((v40 & 0x10000000) != 0) {
                // 0x4070b9
                v34 = v40 & -0x10000009;
                v15 = v34;
                v32 = v34;
                v25 = (int32_t *)v41;
                // branch -> 0x4070cb
            }
            // 0x4070cb
            if ((v32 & 4) == 0) {
                // 0x4070cb
                v31 = v32;
                // branch -> 0x4070df
            } else {
                // 0x4070d0
                v35 = v32 & -0x21c30009 | 0xc00000;
                v15 = v35;
                v2 = (struct struct_17 *)128;
                v31 = v35;
                // branch -> 0x4070df
            }
            // 0x4070df
            v6 = *(char *)(v31 & -8);
            v7 = *(char *)v41;
            AdjustWindowRectEx((int32_t *)v41, (int32_t)v6, v7 % 2 != 0, 8);
            v27 = (int32_t)a4 - v41;
            g131 = (int32_t)a2;
            v10 = (int32_t *)v27;
            v26 = (int32_t)a5 - v41;
            v11 = (int32_t *)v26;
            v36 = v15;
            Y2 = v1;
            if ((a2 == (char *)-0xffff || a3 == (int32_t *)-0xffff) && v36 % 4 == 0) {
                // 0x40712d
                g131 = -0x80000000;
                Y2 = -0x80000000;
                // branch -> 0x407135
            }
            // 0x407135
            int32_t * v49; // 0x4071dd17
            int32_t * v50; // 0x4071e015
            if (v36 % 2 == 0) {
                // 0x407171
                if ((v36 & 2) != 0) {
                    // 0x407176
                    v42 = *a8;
                    if (v42 == 0) {
                        // 0x40717d
                        windowHandle = GetActiveWindow();
                        if (windowHandle != NULL) {
                            // 0x407187
                            GetWindowRect(windowHandle, (struct _RECT *)v41);
                            g131 = v41;
                            g126 = 0;
                            if (v41 <= 0xffffffff) {
                                // 0x4071c3
                                g131 = 0;
                                Y = 0;
                                // branch -> 0x4071c7
                            } else {
                                Y = v41;
                            }
                        } else {
                            Y = Y2;
                        }
                    } else {
                        // 0x407187
                        GetWindowRect((int32_t *)(int32_t)v42, (struct _RECT *)v41);
                        g131 = v41;
                        g126 = 0;
                        if (v41 <= 0xffffffff) {
                            // 0x4071c3
                            g131 = 0;
                            Y = 0;
                            // branch -> 0x4071c7
                        } else {
                            Y = v41;
                        }
                    }
                    // 0x4071c7
                    v38 = v15 & -8;
                    v15 = v38;
                    v30 = (int32_t)*a8;
                    v12 = (char *)g131;
                    v21 = v12;
                    lpWindowName = (char *)(int32_t)*a6;
                    v23 = lpWindowName;
                    v8 = *(char *)v38;
                    v9 = *v12;
                    nWidth = (int32_t)v10;
                    windowHandle2 = CreateWindowExA((int32_t)v2, str, lpWindowName, (int32_t)v8, (int32_t)v9, Y, nWidth, (int32_t)v11, (int32_t *)v30, NULL, (int32_t *)g35, (int32_t *)8);
                    g131 = 0;
                    *(int32_t **)g130 = windowHandle2;
                    if (windowHandle2 == NULL) {
                        // 0x4072bc
                        UnregisterClassA(str, (int32_t *)g35);
                        v22 = v46;
                        v14 = (char *)g112;
                        v23 = v14;
                        function_409c5b((int32_t)*v14);
                        v20 = NULL;
                        // branch -> 0x4072df
                    } else {
                        // 0x407201
                        SetPropA();
                        v45 = (int32_t)v25;
                        dwFlags = v45;
                        if (v45 != g131) {
                            // 0x407217
                            if (v15 != 0x1000000) {
                                // 0x40721f
                                // branch -> 0x407231
                            }
                            // 0x407231
                            ShowWindow((int32_t *)*(int32_t *)g130, nWidth);
                            dwFlags = g131;
                            // branch -> 0x407239
                        }
                        // 0x407239
                        *(int32_t *)(g130 + 44) = (int32_t)((v15 & 0x21000000) != 0);
                        v4->e4 = 2;
                        v22 = (char *)0x40725e;
                        v18 = HeapAlloc((int32_t)*(char *)g34, dwFlags, 12);
                        *(int16_t *)(v18 + 2) = 9;
                        v4->e1 = (int32_t *)3;
                        v4->e3 = 2;
                        g124 = (int32_t)v4->e1;
                        v4->e2 = (int32_t *)7;
                        v21 = (char *)0x40729b;
                        CreateAcceleratorTableA();
                        v4->e5 = -1;
                        v4->e2 = (int32_t *)g124;
                        v4->e7 = g131;
                        if (v39 != g131) {
                            // 0x4072aa
                            v13 = (char *)*(int32_t *)g130;
                            v21 = v13;
                            v22 = (char *)0x4072b1;
                            function_40af95(v13, (char *)v4->e1);
                            // branch -> 0x4072b1
                        }
                        // 0x4072b1
                        v33 = g130;
                        if ((int32_t)v46 != v33) {
                            // 0x4072b8
                            v20 = (struct struct_17 *)*(int32_t *)v33;
                            // branch -> 0x4072df
                        } else {
                            v20 = (struct struct_17 *)v46;
                        }
                    }
                    // 0x4072df
                    g131 = (int32_t)*v23;
                    g130 = (int32_t)*v22;
                    g127 = (int32_t)*v21;
                    return (int32_t)v20;
                }
                v49 = v11;
                v50 = v10;
                Y = Y2;
            } else {
                // 0x40713a
                v16 = GetSystemMetrics(8);
                v44 = v10;
                if (v27 > v16) {
                    // 0x407147
                    v44 = (int32_t *)v16;
                    // branch -> 0x40714a
                }
                // 0x40714a
                v28 = v16 - (int32_t)v44;
                g131 = (v28 - v28 / -0x80000000) / 2;
                v17 = GetSystemMetrics(8);
                v43 = v11;
                if (v26 > v17) {
                    // 0x407161
                    v43 = (int32_t *)v17;
                    // branch -> 0x407164
                }
                // 0x407164
                v29 = v17 - (int32_t)v43;
                v19 = v29 / -0x80000000;
                g126 = v19;
                v49 = v43;
                v50 = v44;
                Y = (v29 - v19) / 2;
                // branch -> 0x4071c7
            }
            // 0x4071c7
            v38 = v15 & -8;
            v15 = v38;
            v30 = (int32_t)*a8;
            v12 = (char *)g131;
            v21 = v12;
            lpWindowName = (char *)(int32_t)*a6;
            v23 = lpWindowName;
            v8 = *(char *)v38;
            v9 = *v12;
            nWidth = (int32_t)v50;
            windowHandle2 = CreateWindowExA((int32_t)v2, str, lpWindowName, (int32_t)v8, (int32_t)v9, Y, nWidth, (int32_t)v49, (int32_t *)v30, NULL, (int32_t *)g35, (int32_t *)8);
            g131 = 0;
            *(int32_t **)g130 = windowHandle2;
            if (windowHandle2 == NULL) {
                // 0x4072bc
                UnregisterClassA(str, (int32_t *)g35);
                v22 = v46;
                v14 = (char *)g112;
                v23 = v14;
                function_409c5b((int32_t)*v14);
                v20 = NULL;
                // branch -> 0x4072df
            } else {
                // 0x407201
                SetPropA();
                v45 = (int32_t)v25;
                dwFlags = v45;
                if (v45 != g131) {
                    // 0x407217
                    if (v15 != 0x1000000) {
                        // 0x40721f
                        // branch -> 0x407231
                    }
                    // 0x407231
                    ShowWindow((int32_t *)*(int32_t *)g130, nWidth);
                    dwFlags = g131;
                    // branch -> 0x407239
                }
                // 0x407239
                *(int32_t *)(g130 + 44) = (int32_t)((v15 & 0x21000000) != 0);
                v4->e4 = 2;
                v22 = (char *)0x40725e;
                v18 = HeapAlloc((int32_t)*(char *)g34, dwFlags, 12);
                *(int16_t *)(v18 + 2) = 9;
                v4->e1 = (int32_t *)3;
                v4->e3 = 2;
                g124 = (int32_t)v4->e1;
                v4->e2 = (int32_t *)7;
                v21 = (char *)0x40729b;
                CreateAcceleratorTableA();
                v4->e5 = -1;
                v4->e2 = (int32_t *)g124;
                v4->e7 = g131;
                if (v39 != g131) {
                    // 0x4072aa
                    v13 = (char *)*(int32_t *)g130;
                    v21 = v13;
                    v22 = (char *)0x4072b1;
                    function_40af95(v13, (char *)v4->e1);
                    // branch -> 0x4072b1
                }
                // 0x4072b1
                v33 = g130;
                if ((int32_t)v46 != v33) {
                    // 0x4072b8
                    v20 = (struct struct_17 *)*(int32_t *)v33;
                    // branch -> 0x4072df
                } else {
                    v20 = (struct struct_17 *)v46;
                }
            }
            // 0x4072df
            g131 = (int32_t)*v23;
            g130 = (int32_t)*v22;
            g127 = (int32_t)*v21;
            return (int32_t)v20;
        }
        v5 = v48;
    }
    // 0x40701f
    v46 = v5;
    // branch -> 0x407022
    // 0x407022
    sprintf(str, "WindowClass_%d", (int32_t)(struct struct_17 *)v5);
    v47 = g131;
    if (*a6 == (char)v47) {
        // 0x40703b
        a6 = (char *)0x40c02d;
        // branch -> 0x407042
    }
    // 0x407042
    memset(v24, (int32_t)*(char *)v47, 40);
    RegisterClassA((int32_t *)8);
    v40 = (int32_t)a7;
    v41 = g131;
    v39 = a7 == (int32_t *)8 ? 1 : v41;
    v37 = v40 & -9;
    v15 = v37;
    v32 = v37;
    v25 = (int32_t *)1;
    if ((v40 & 0x10000000) != 0) {
        // 0x4070b9
        v34 = v40 & -0x10000009;
        v15 = v34;
        v32 = v34;
        v25 = (int32_t *)v41;
        // branch -> 0x4070cb
    }
    // 0x4070cb
    if ((v32 & 4) == 0) {
        // 0x4070cb
        v31 = v32;
        // branch -> 0x4070df
    } else {
        // 0x4070d0
        v35 = v32 & -0x21c30009 | 0xc00000;
        v15 = v35;
        v2 = (struct struct_17 *)128;
        v31 = v35;
        // branch -> 0x4070df
    }
    // 0x4070df
    v6 = *(char *)(v31 & -8);
    v7 = *(char *)v41;
    AdjustWindowRectEx((int32_t *)v41, (int32_t)v6, v7 % 2 != 0, 8);
    v27 = (int32_t)a4 - v41;
    g131 = (int32_t)a2;
    v10 = (int32_t *)v27;
    v26 = (int32_t)a5 - v41;
    v11 = (int32_t *)v26;
    v36 = v15;
    Y2 = v1;
    if ((a2 == (char *)-0xffff || a3 == (int32_t *)-0xffff) && v36 % 4 == 0) {
        // 0x40712d
        g131 = -0x80000000;
        Y2 = -0x80000000;
        // branch -> 0x407135
    }
    // 0x407135
    if (v36 % 2 != 0) {
        // 0x40713a
        v16 = GetSystemMetrics(8);
        v44 = v10;
        if (v27 > v16) {
            // 0x407147
            v44 = (int32_t *)v16;
            // branch -> 0x40714a
        }
        // 0x40714a
        v28 = v16 - (int32_t)v44;
        g131 = (v28 - v28 / -0x80000000) / 2;
        v17 = GetSystemMetrics(8);
        v43 = v11;
        if (v26 > v17) {
            // 0x407161
            v43 = (int32_t *)v17;
            // branch -> 0x407164
        }
        // 0x407164
        v29 = v17 - (int32_t)v43;
        v19 = v29 / -0x80000000;
        g126 = v19;
        Y = (v29 - v19) / 2;
        // branch -> 0x4071c7
        // 0x4071c7
        v38 = v15 & -8;
        v15 = v38;
        v30 = (int32_t)*a8;
        v12 = (char *)g131;
        lpWindowName = (char *)(int32_t)*a6;
        v8 = *(char *)v38;
        v9 = *v12;
        nWidth = (int32_t)v44;
        windowHandle2 = CreateWindowExA((int32_t)v2, str, lpWindowName, (int32_t)v8, (int32_t)v9, Y, nWidth, (int32_t)v43, (int32_t *)v30, NULL, (int32_t *)g35, (int32_t *)8);
        g131 = 0;
        *(int32_t **)g130 = windowHandle2;
        if (windowHandle2 == NULL) {
            // 0x4072bc
            UnregisterClassA(str, (int32_t *)g35);
            v14 = (char *)g112;
            function_409c5b((int32_t)*v14);
            // branch -> 0x4072df
            // 0x4072df
            g131 = (int32_t)*v14;
            g130 = (int32_t)*v46;
            g127 = (int32_t)*v12;
            return (int32_t)NULL;
        }
        // 0x407201
        SetPropA();
        v45 = (int32_t)v25;
        dwFlags = v45;
        if (v45 != g131) {
            // 0x407217
            if (v15 != 0x1000000) {
                // 0x40721f
                // branch -> 0x407231
            }
            // 0x407231
            ShowWindow((int32_t *)*(int32_t *)g130, nWidth);
            dwFlags = g131;
            // branch -> 0x407239
        }
        // 0x407239
        *(int32_t *)(g130 + 44) = (int32_t)((v15 & 0x21000000) != 0);
        v4->e4 = 2;
        v22 = (char *)0x40725e;
        v18 = HeapAlloc((int32_t)*(char *)g34, dwFlags, 12);
        *(int16_t *)(v18 + 2) = 9;
        v4->e1 = (int32_t *)3;
        v4->e3 = 2;
        g124 = (int32_t)v4->e1;
        v4->e2 = (int32_t *)7;
        v21 = (char *)0x40729b;
        CreateAcceleratorTableA();
        v4->e5 = -1;
        v4->e2 = (int32_t *)g124;
        v4->e7 = g131;
        if (v39 != g131) {
            // 0x4072aa
            v13 = (char *)*(int32_t *)g130;
            v21 = v13;
            v22 = (char *)0x4072b1;
            function_40af95(v13, (char *)v4->e1);
            // branch -> 0x4072b1
        }
        // 0x4072b1
        v33 = g130;
        if ((int32_t)v46 != v33) {
            // 0x4072b8
            v20 = (struct struct_17 *)*(int32_t *)v33;
            // branch -> 0x4072df
        } else {
            v20 = (struct struct_17 *)v46;
        }
        // 0x4072df
        g131 = (int32_t)*lpWindowName;
        g130 = (int32_t)*v22;
        g127 = (int32_t)*v21;
        return (int32_t)v20;
    }
    // 0x407171
    if ((v36 & 2) == 0) {
        // 0x4071c7
        v38 = v15 & -8;
        v15 = v38;
        v30 = (int32_t)*a8;
        v12 = (char *)g131;
        v21 = v12;
        lpWindowName = (char *)(int32_t)*a6;
        v23 = lpWindowName;
        v8 = *(char *)v38;
        v9 = *v12;
        nWidth = (int32_t)v10;
        windowHandle2 = CreateWindowExA((int32_t)v2, str, lpWindowName, (int32_t)v8, (int32_t)v9, Y2, nWidth, (int32_t)v11, (int32_t *)v30, NULL, (int32_t *)g35, (int32_t *)8);
        g131 = 0;
        *(int32_t **)g130 = windowHandle2;
        if (windowHandle2 == NULL) {
            // 0x4072bc
            UnregisterClassA(str, (int32_t *)g35);
            v22 = v46;
            v14 = (char *)g112;
            v23 = v14;
            function_409c5b((int32_t)*v14);
            v20 = NULL;
            // branch -> 0x4072df
        } else {
            // 0x407201
            SetPropA();
            v45 = (int32_t)v25;
            dwFlags = v45;
            if (v45 != g131) {
                // 0x407217
                if (v15 != 0x1000000) {
                    // 0x40721f
                    // branch -> 0x407231
                }
                // 0x407231
                ShowWindow((int32_t *)*(int32_t *)g130, nWidth);
                dwFlags = g131;
                // branch -> 0x407239
            }
            // 0x407239
            *(int32_t *)(g130 + 44) = (int32_t)((v15 & 0x21000000) != 0);
            v4->e4 = 2;
            v22 = (char *)0x40725e;
            v18 = HeapAlloc((int32_t)*(char *)g34, dwFlags, 12);
            *(int16_t *)(v18 + 2) = 9;
            v4->e1 = (int32_t *)3;
            v4->e3 = 2;
            g124 = (int32_t)v4->e1;
            v4->e2 = (int32_t *)7;
            v21 = (char *)0x40729b;
            CreateAcceleratorTableA();
            v4->e5 = -1;
            v4->e2 = (int32_t *)g124;
            v4->e7 = g131;
            if (v39 != g131) {
                // 0x4072aa
                v13 = (char *)*(int32_t *)g130;
                v21 = v13;
                v22 = (char *)0x4072b1;
                function_40af95(v13, (char *)v4->e1);
                // branch -> 0x4072b1
            }
            // 0x4072b1
            v33 = g130;
            if ((int32_t)v46 != v33) {
                // 0x4072b8
                v20 = (struct struct_17 *)*(int32_t *)v33;
                // branch -> 0x4072df
            } else {
                v20 = (struct struct_17 *)v46;
            }
        }
        // 0x4072df
        g131 = (int32_t)*v23;
        g130 = (int32_t)*v22;
        g127 = (int32_t)*v21;
        return (int32_t)v20;
    }
    // 0x407176
    v42 = *a8;
    if (v42 == 0) {
        // 0x40717d
        windowHandle = GetActiveWindow();
        if (windowHandle != NULL) {
            // 0x407187
            GetWindowRect(windowHandle, (struct _RECT *)v41);
            g131 = v41;
            g126 = 0;
            if (v41 <= 0xffffffff) {
                // 0x4071c3
                g131 = 0;
                Y = 0;
                // branch -> 0x4071c7
            } else {
                Y = v41;
            }
        } else {
            Y = Y2;
        }
    } else {
        // 0x407187
        GetWindowRect((int32_t *)(int32_t)v42, (struct _RECT *)v41);
        g131 = v41;
        g126 = 0;
        if (v41 <= 0xffffffff) {
            // 0x4071c3
            g131 = 0;
            Y = 0;
            // branch -> 0x4071c7
        } else {
            Y = v41;
        }
    }
    // 0x4071c7
    v38 = v15 & -8;
    v15 = v38;
    v30 = (int32_t)*a8;
    v12 = (char *)g131;
    v21 = v12;
    lpWindowName = (char *)(int32_t)*a6;
    v23 = lpWindowName;
    v8 = *(char *)v38;
    v9 = *v12;
    nWidth = (int32_t)v10;
    windowHandle2 = CreateWindowExA((int32_t)v2, str, lpWindowName, (int32_t)v8, (int32_t)v9, Y, nWidth, (int32_t)v11, (int32_t *)v30, NULL, (int32_t *)g35, (int32_t *)8);
    g131 = 0;
    *(int32_t **)g130 = windowHandle2;
    if (windowHandle2 == NULL) {
        // 0x4072bc
        UnregisterClassA(str, (int32_t *)g35);
        v22 = v46;
        v14 = (char *)g112;
        v23 = v14;
        function_409c5b((int32_t)*v14);
        v20 = NULL;
        // branch -> 0x4072df
    } else {
        // 0x407201
        SetPropA();
        v45 = (int32_t)v25;
        dwFlags = v45;
        if (v45 != g131) {
            // 0x407217
            if (v15 != 0x1000000) {
                // 0x40721f
                // branch -> 0x407231
            }
            // 0x407231
            ShowWindow((int32_t *)*(int32_t *)g130, nWidth);
            dwFlags = g131;
            // branch -> 0x407239
        }
        // 0x407239
        *(int32_t *)(g130 + 44) = (int32_t)((v15 & 0x21000000) != 0);
        v4->e4 = 2;
        v22 = (char *)0x40725e;
        v18 = HeapAlloc((int32_t)*(char *)g34, dwFlags, 12);
        *(int16_t *)(v18 + 2) = 9;
        v4->e1 = (int32_t *)3;
        v4->e3 = 2;
        g124 = (int32_t)v4->e1;
        v4->e2 = (int32_t *)7;
        v21 = (char *)0x40729b;
        CreateAcceleratorTableA();
        v4->e5 = -1;
        v4->e2 = (int32_t *)g124;
        v4->e7 = g131;
        if (v39 != g131) {
            // 0x4072aa
            v13 = (char *)*(int32_t *)g130;
            v21 = v13;
            v22 = (char *)0x4072b1;
            function_40af95(v13, (char *)v4->e1);
            // branch -> 0x4072b1
        }
        // 0x4072b1
        v33 = g130;
        if ((int32_t)v46 != v33) {
            // 0x4072b8
            v20 = (struct struct_17 *)*(int32_t *)v33;
            // branch -> 0x4072df
        } else {
            v20 = (struct struct_17 *)v46;
        }
    }
    // 0x4072df
    g131 = (int32_t)*v23;
    g130 = (int32_t)*v22;
    g127 = (int32_t)*v21;
    return (int32_t)v20;
}

// Address range: 0x4072e6 - 0x407306
void function_4072e6(struct struct_17 * a1, char * a2, int32_t * a3, int32_t * a4, int32_t * a5, char * a6, int32_t * a7) {
    // 0x4072e6
    function_406fd5(a1, a2, a3, a4, a5, (char *)(int32_t)*a6, a7, NULL);
    g129 = (int32_t)a1;
}

// Address range: 0x407309 - 0x407322
int32_t function_407309(int32_t a1) {
    // 0x407309
    function_409bf5((int32_t)*(char *)g112, a1);
    int32_t result;
    if (g124 != 0) {
        // 0x40731c
        result = *(int32_t *)g124;
        // branch -> 0x407322
    } else {
        result = 0;
    }
    // 0x407322
    return result;
}

// Address range: 0x407325 - 0x407387
void function_407325(void) {
    struct struct_18 * v1 = NULL;
    int32_t * hWnd;
    g131 = (int32_t)hWnd;
    IsWindowEnabled(hWnd);
    int32_t v2;
    if (g124 == 0 || IsWindowVisible((int32_t *)g131) == false) {
        // 0x407383
        g131 = v2;
        return;
    }
    // 0x407344
    GetWindowLongA();
    int32_t v3 = (int32_t)v1; // 0x407355
    g130 = v3;
    if (*(int32_t *)(v3 + 8) != 0) {
        // 0x40735f
        SetFocus();
        // branch -> 0x40737f
        // 0x40737f
        *(int32_t *)(g130 + 8) = 0;
        // branch -> 0x407382
        // 0x407382
        g130 = (int32_t)(int32_t *)0x407366;
        // branch -> 0x407383
        // 0x407383
        return;
    }
    int32_t v4 = v1->e0; // 0x40736a
    int32_t v5 = g131; // 0x407370
    int32_t * v6; // 0x407382_01
    if (v4 == 0) {
        // 0x407370
        SetFocus();
        v6 = (int32_t *)v5;
        // branch -> 0x407382
    } else {
        // 0x40737b
        int32_t * v7;
        if (v4 == v5) {
            // 0x40737b
            // branch -> 0x40737f
            // 0x40737f
            *(int32_t *)(v3 + 8) = 1;
            v6 = v7;
            // branch -> 0x407382
        } else {
            v6 = v7;
        }
    }
    // 0x407382
    g130 = (int32_t)v6;
    // branch -> 0x407383
    // 0x407383
    g131 = v2;
}

// Address range: 0x40738a - 0x4073dd
void function_40738a(void) {
    struct struct_19 * v1 = NULL;
    int32_t * hWnd;
    int32_t v2 = (int32_t)hWnd;
    g131 = 1;
    IsWindowEnabled(hWnd);
    if (g124 == 0 || IsWindowVisible((int32_t *)v2) == false) {
        // 0x4073d9
        int32_t * v3;
        g131 = (int32_t)v3;
        return;
    }
    // 0x4073a9
    GetWindowLongA();
    int32_t * v4 = (int32_t *)g130; // 0x4073b9_0
    g130 = (int32_t)v1;
    int32_t v5 = v1->e0; // 0x4073be
    int32_t v6;
    if (v5 != v2) {
        // 0x4073d5
        v1->e1 = v2;
        g130 = v6;
        // branch -> 0x4073d9
        // 0x4073d9
        g131 = (int32_t)v4;
        return;
    }
    int32_t v7 = v1->e1; // 0x4073c2
    int32_t v8; // 0x4073d5
    if (v7 != 0) {
        // 0x4073c9
        SetFocus();
        v1->e3 = g131;
        g131 = 0;
        v8 = v2;
        // branch -> 0x4073d5
    } else {
        v8 = v5;
        v7 = v6;
    }
    // 0x4073d5
    v1->e1 = v8;
    g130 = v7;
    // branch -> 0x4073d9
    // 0x4073d9
    g131 = (int32_t)v4;
}

// Address range: 0x4073e0 - 0x4074e5
void function_4073e0(void) {
    // 0x4073e0
    GetActiveWindow();
    int32_t * v1 = (int32_t *)g124; // 0x4073ef_0
    int32_t * windowHandle = GetFocus(); // 0x4073f2
    int32_t v2 = 0;
    IsChild();
    int32_t v3 = (int32_t)windowHandle; // 0x40740f_0
    int32_t * v4;
    void (*v5)();
    int32_t * v6;
    int32_t * v7; // 0x4074e1_03
    void (*v8)(); // 0x4074e2_04
    if (windowHandle == NULL) {
        // 0x407492
        // branch -> 0x407495
        // 0x407495
        if ((int32_t)v4 != v2) {
            // 0x40749e
            EnumChildWindows();
            // branch -> 0x4074e1
            // 0x4074e1
            g131 = (int32_t)v6;
            g130 = (int32_t)v5;
            return;
        }
        // 0x4074c1
        g130 = g29;
        g131 = (int32_t)function_407325;
        EnumChildWindows();
        if (v2 != 0) {
            // 0x4074d7
            EnumChildWindows();
            v8 = function_407325;
            v7 = v1;
            // branch -> 0x4074e1
        } else {
            v8 = v5;
            v7 = v6;
        }
        // 0x4074e1
        g131 = (int32_t)v7;
        g130 = (int32_t)v8;
        return;
    }
    // 0x407413
    if (v3 == v2) {
        // 0x407495
        if ((int32_t)v4 == v3) {
            // 0x4074c1
            g130 = g29;
            g131 = (int32_t)function_407325;
            EnumChildWindows();
            if (v2 != 0) {
                // 0x4074d7
                EnumChildWindows();
                v8 = function_407325;
                v7 = v1;
                // branch -> 0x4074e1
            } else {
                v8 = v5;
                v7 = v6;
            }
        } else {
            // 0x40749e
            EnumChildWindows();
            v8 = v5;
            v7 = v6;
            // branch -> 0x4074e1
        }
        // 0x4074e1
        g131 = (int32_t)v7;
        g130 = (int32_t)v8;
        return;
    }
    int32_t * v9 = v1; // bp+012
    int32_t v10; // 0x40748c
    int32_t * v11; // bp+011
    while (true) {
        // 0x40741c
        char * lpClassName;
        GetClassNameA(windowHandle, lpClassName, 50);
        int32_t * v12; // 0x407484
        if (strcmp(lpClassName, "MDI_ChildClass") == 0) {
            // 0x40743d
            v11 = windowHandle;
            // branch -> 0x407483
        } else {
            // 0x407449
            if (strcmp(lpClassName, "ComboBoxEx32") == 0) {
                // 0x40745d
                GetWindowLongA();
                // branch -> 0x407480
            } else {
                // 0x40746c
                if (strcmp(lpClassName, "SysIPAddress32") != 0) {
                    v11 = v9;
                  lab_0x4c423e0:
                    // 0x407483
                    v12 = GetParent(windowHandle);
                    v10 = v2;
                    if ((int32_t)v12 == v10) {
                        // break -> 0x407495
                        break;
                    }
                    v9 = v11;
                    windowHandle = v12;
                    // continue -> 0x40741c
                    continue;
                }
            }
            // 0x407480
            v11 = v9;
            // branch -> 0x407483
            goto lab_0x4c423e0;
        }
        // 0x407483
        v12 = GetParent(windowHandle);
        v10 = v2;
        if ((int32_t)v12 == v10) {
            // break -> 0x407495
            break;
        }
        v9 = v11;
        windowHandle = v12;
        // continue -> 0x40741c
    }
    // 0x407495
    if ((int32_t)v4 == v10) {
        // 0x4074c1
        g130 = g29;
        g131 = (int32_t)function_407325;
        EnumChildWindows();
        if (v2 != 0) {
            // 0x4074d7
            EnumChildWindows();
            v8 = function_407325;
            v7 = v11;
            // branch -> 0x4074e1
        } else {
            v8 = v5;
            v7 = v6;
        }
    } else {
        // 0x40749e
        EnumChildWindows();
        v8 = v5;
        v7 = v6;
        // branch -> 0x4074e1
    }
    // 0x4074e1
    g131 = (int32_t)v7;
    g130 = (int32_t)v8;
}

// Address range: 0x4074e8 - 0x407537
int32_t function_4074e8(int32_t * hWnd, int32_t * a2) {
    int32_t v1 = g131; // 0x4074ec
    g131 = g23;
    g130 = 0;
    SendMessageA(hWnd, -1, 0, 0);
    uint32_t v2 = (int32_t)a2; // 0x407501
    int32_t v3 = g130; // 0x407501
    uint32_t v4 = g124 % 4; // 0x407512
    int32_t v5; // 0x40752e_5
    int32_t result; // 0x407537_12
    uint32_t v6; // 0x407529
    if (v2 == v3) {
        // 0x407512
        if (v4 != 3) {
            // 0x407519
            // branch -> 0x40751f
            // 0x40751f
            SendMessageA(hWnd, 296, (int32_t)(int32_t *)0x30001, (int32_t)(v2 % 2 != 0));
            v6 = g130;
            v5 = InvalidateRect(hWnd, (int32_t *)v6, v6 % 2 != 0);
            result = v5;
            // branch -> 0x407534
        } else {
            result = 3;
        }
        // 0x407534
        g131 = 0;
        g130 = 0;
        g129 = v1;
        return result;
    }
    // 0x407506
    int32_t v7; // 0x4075345
    if (v4 != 0) {
        // 0x40751f
        SendMessageA(hWnd, 296, (int32_t)hWnd, (int32_t)true);
        v6 = g130;
        v5 = InvalidateRect(hWnd, (int32_t *)v6, v6 % 2 != 0);
        v7 = 0x30002;
        result = v5;
        // branch -> 0x407534
    } else {
        v3 = 0;
        v7 = 0;
    }
    // 0x407534
    g131 = v7;
    g130 = v3;
    g129 = v1;
    return result;
}

// Address range: 0x40753a - 0x40763d
int32_t function_40753a(char * a1) {
    GetFocus();
    g130 = g30;
    int32_t v1 = g124; // 0x40754c
    g131 = v1;
    int32_t v2 = g127 & -256 | 128;
    int32_t * v3; // 0x4075d8_0
    int32_t * v4; // 0x40761f_0
    int32_t v5; // 0x4075d0
    int32_t v6; // 0x4075d9
    int32_t v7; // 0x407626
    int32_t * v8;
    char * v9;
    int32_t * v10;
    int32_t result;
    int32_t * v11; // 0x407637_06
    int32_t v12; // 0x40762f2
    int32_t v13; // 0x40762f3
    int32_t v14; // 0x40761e
    char v15; // 0x4075b6
    int32_t * v16; // 0x40761811
    if (v1 == 0) {
        // 0x4075b5
        v15 = *a1;
        g129 = v15;
        v16 = v8;
        v12 = v13;
        if (v15 != 0) {
            // 0x4075be
            if (GetKeyState(17) == v2) {
                // 0x4075c6
                if (GetKeyState(16) == v2) {
                    // 0x4075ce
                    v5 = GetKeyState(18);
                    if (v5 == v2) {
                        v12 = v5;
                        // 0x4075de
                        g130 = g20;
                        if (g131 != 0) {
                            // 0x4075e8
                            GetPropA();
                            if (v12 != 0) {
                                // 0x407636
                                // branch -> 0x407637
                                // 0x407637
                                g131 = (int32_t)v10;
                                g130 = (int32_t)*v9;
                                g127 = (int32_t)(int32_t *)0x4075f0;
                                return 0;
                            }
                        }
                        // 0x4075f4
                        GetPropA();
                        g130 = v12;
                        v11 = (int32_t *)0x4075fc;
                        result = 0;
                        if (v12 != 0) {
                            // 0x407602
                            if (GetWindowThreadProcessId((int32_t *)g129, (int32_t *)0x4075fc) != 0) {
                                // 0x407612
                                if ((int32_t)(int32_t *)0x4075d2 == GetCurrentProcessId()) {
                                    // 0x40761e
                                    v14 = g130 - 1;
                                    g130 = v14;
                                    v4 = (int32_t *)v14;
                                    v7 = function_409bf5((int32_t)*(char *)g112, v14);
                                    if (v7 != 0) {
                                        // 0x40762f
                                        v11 = v4;
                                        result = *(int32_t *)(v7 + 8);
                                        // branch -> 0x407636
                                    } else {
                                        v11 = v4;
                                        result = 0;
                                    }
                                } else {
                                    v11 = (int32_t *)0x407618;
                                    result = 0;
                                }
                            } else {
                                v11 = (int32_t *)0x4075fc;
                                result = 0;
                            }
                        }
                        // 0x407636
                        // branch -> 0x407637
                        // 0x407637
                        g131 = (int32_t)v11;
                        g130 = (int32_t)*(char *)g129;
                        g127 = (int32_t)(int32_t *)"PB_WindowID";
                        return result;
                    }
                }
            }
            // 0x4075d6
            v3 = (int32_t *)g129;
            v6 = function_4074e8(v3, (int32_t *)1);
            v16 = v3;
            v12 = v6;
            // branch -> 0x4075de
        }
        // 0x4075de
        g130 = g20;
        if (g131 == 0) {
            // 0x4075f4
            v9 = (char *)g129;
            GetPropA();
            g130 = v12;
            if (v12 == 0) {
                // 0x407636
                // branch -> 0x407637
                // 0x407637
                g131 = (int32_t)(int32_t *)0x4075fc;
                g130 = (int32_t)*v9;
                g127 = (int32_t)(int32_t *)"PB_WindowID";
                return 0;
            }
            // 0x407602
            if (GetWindowThreadProcessId((int32_t *)g129, (int32_t *)0x4075fc) != 0) {
                // 0x407612
                if ((int32_t)v16 == GetCurrentProcessId()) {
                    // 0x40761e
                    v14 = g130 - 1;
                    g130 = v14;
                    v7 = function_409bf5((int32_t)*(char *)g112, v14);
                    if (v7 != 0) {
                        // 0x40762f
                        result = *(int32_t *)(v7 + 8);
                        // branch -> 0x407636
                    } else {
                        result = 0;
                    }
                    // 0x407636
                    // branch -> 0x407637
                    // 0x407637
                    g131 = (int32_t)(int32_t *)v14;
                    g130 = (int32_t)*v9;
                    g127 = (int32_t)(int32_t *)"PB_WindowID";
                    return result;
                }
                v11 = (int32_t *)0x407618;
            } else {
                v11 = (int32_t *)0x4075fc;
            }
            // 0x407636
            // branch -> 0x407637
            // 0x407637
            g131 = (int32_t)v11;
            g130 = (int32_t)*v9;
            g127 = (int32_t)(int32_t *)"PB_WindowID";
            return 0;
        }
        // 0x4075e8
        GetPropA();
        if (v12 != 0) {
            // 0x407636
            // branch -> 0x407637
            // 0x407637
            g131 = (int32_t)v10;
            g130 = (int32_t)*v9;
            g127 = (int32_t)(int32_t *)0x4075f0;
            return 0;
        }
        // 0x4075f4
        GetPropA();
        g130 = v12;
        v11 = (int32_t *)0x4075fc;
        result = 0;
        if (v12 != 0) {
            // 0x407602
            if (GetWindowThreadProcessId((int32_t *)g129, (int32_t *)0x4075fc) != 0) {
                // 0x407612
                if ((int32_t)v16 == GetCurrentProcessId()) {
                    // 0x40761e
                    v14 = g130 - 1;
                    g130 = v14;
                    v4 = (int32_t *)v14;
                    v7 = function_409bf5((int32_t)*(char *)g112, v14);
                    if (v7 != 0) {
                        // 0x40762f
                        v11 = v4;
                        result = *(int32_t *)(v7 + 8);
                        // branch -> 0x407636
                    } else {
                        v11 = v4;
                        result = 0;
                    }
                } else {
                    v11 = (int32_t *)0x407618;
                    result = 0;
                }
            } else {
                v11 = (int32_t *)0x4075fc;
                result = 0;
            }
        }
        // 0x407636
        // branch -> 0x407637
        // 0x407637
        g131 = (int32_t)v11;
        g130 = (int32_t)*(char *)g129;
        g127 = (int32_t)(int32_t *)"PB_WindowID";
        return result;
    }
    int32_t v17 = GetKeyState(9); // 0x407556
    int32_t * v18; // 0x40761812
    if (v17 != v2) {
        int32_t v19 = GetKeyState(17); // 0x40755e
        if (v19 == v2) {
            int32_t v20 = GetKeyState(16); // 0x407566
            if (v20 == v2) {
                int32_t v21 = GetKeyState(18); // 0x40756e
                if (v21 == v2) {
                    int32_t * hWnd = (int32_t *)g131; // 0x40757b_0
                    char * lpClassName;
                    GetClassNameA(hWnd, lpClassName, 5);
                    int32_t strncmp_rc = strncmp(lpClassName, "Rich", 4); // 0x40758e
                    if (strncmp_rc == 0) {
                        int32_t * v22 = SendMessageA((int32_t *)g131, 1102, 0, 0); // 0x4075a2
                        if (v22 == (int32_t *)2048) {
                            // 0x407637
                            g131 = (int32_t)v10;
                            g130 = (int32_t)*v9;
                            int32_t * v23;
                            g127 = (int32_t)v23;
                            return 0;
                        }
                        v18 = (int32_t *)1102;
                        v13 = (int32_t)v22;
                    } else {
                        v18 = hWnd;
                        v13 = strncmp_rc;
                    }
                } else {
                    v18 = v8;
                    v13 = v21;
                }
            } else {
                v18 = v8;
                v13 = v20;
            }
        } else {
            v18 = v8;
            v13 = v19;
        }
    } else {
        v18 = v8;
        v13 = v17;
    }
    // 0x4075b5
    v15 = *a1;
    g129 = v15;
    v16 = v18;
    v12 = v13;
    if (v15 != 0) {
        // 0x4075be
        if (GetKeyState(17) == v2) {
            // 0x4075c6
            if (GetKeyState(16) == v2) {
                // 0x4075ce
                v5 = GetKeyState(18);
                if (v5 == v2) {
                    v12 = v5;
                    // 0x4075de
                    g130 = g20;
                    if (g131 != 0) {
                        // 0x4075e8
                        GetPropA();
                        if (v12 != 0) {
                            // 0x407636
                            // branch -> 0x407637
                            // 0x407637
                            g131 = (int32_t)v10;
                            g130 = (int32_t)*v9;
                            g127 = (int32_t)(int32_t *)0x4075f0;
                            return 0;
                        }
                    }
                    // 0x4075f4
                    GetPropA();
                    g130 = v12;
                    v11 = (int32_t *)0x4075fc;
                    result = 0;
                    if (v12 != 0) {
                        // 0x407602
                        if (GetWindowThreadProcessId((int32_t *)g129, (int32_t *)0x4075fc) != 0) {
                            // 0x407612
                            if ((int32_t)(int32_t *)0x4075d2 == GetCurrentProcessId()) {
                                // 0x40761e
                                v14 = g130 - 1;
                                g130 = v14;
                                v4 = (int32_t *)v14;
                                v7 = function_409bf5((int32_t)*(char *)g112, v14);
                                if (v7 != 0) {
                                    // 0x40762f
                                    v11 = v4;
                                    result = *(int32_t *)(v7 + 8);
                                    // branch -> 0x407636
                                } else {
                                    v11 = v4;
                                    result = 0;
                                }
                            } else {
                                v11 = (int32_t *)0x407618;
                                result = 0;
                            }
                        } else {
                            v11 = (int32_t *)0x4075fc;
                            result = 0;
                        }
                    }
                    // 0x407636
                    // branch -> 0x407637
                    // 0x407637
                    g131 = (int32_t)v11;
                    g130 = (int32_t)*(char *)g129;
                    g127 = (int32_t)(int32_t *)"PB_WindowID";
                    return result;
                }
            }
        }
        // 0x4075d6
        v3 = (int32_t *)g129;
        v6 = function_4074e8(v3, (int32_t *)1);
        v16 = v3;
        v12 = v6;
        // branch -> 0x4075de
    }
    // 0x4075de
    g130 = g20;
    if (g131 != 0) {
        // 0x4075e8
        GetPropA();
        if (v12 != 0) {
            // 0x407636
            // branch -> 0x407637
            // 0x407637
            g131 = (int32_t)v10;
            g130 = (int32_t)*v9;
            g127 = (int32_t)(int32_t *)0x4075f0;
            return 0;
        }
    }
    // 0x4075f4
    GetPropA();
    g130 = v12;
    v11 = (int32_t *)0x4075fc;
    result = 0;
    if (v12 != 0) {
        // 0x407602
        if (GetWindowThreadProcessId((int32_t *)g129, (int32_t *)0x4075fc) != 0) {
            // 0x407612
            if ((int32_t)v16 == GetCurrentProcessId()) {
                // 0x40761e
                v14 = g130 - 1;
                g130 = v14;
                v4 = (int32_t *)v14;
                v7 = function_409bf5((int32_t)*(char *)g112, v14);
                if (v7 != 0) {
                    // 0x40762f
                    v11 = v4;
                    result = *(int32_t *)(v7 + 8);
                    // branch -> 0x407636
                } else {
                    v11 = v4;
                    result = 0;
                }
            } else {
                v11 = (int32_t *)0x407618;
                result = 0;
            }
        } else {
            v11 = (int32_t *)0x4075fc;
            result = 0;
        }
    }
    // 0x407636
    // branch -> 0x407637
    // 0x407637
    g131 = (int32_t)v11;
    g130 = (int32_t)*(char *)g129;
    g127 = (int32_t)(int32_t *)"PB_WindowID";
    return result;
}

// Address range: 0x407640 - 0x407650
int32_t function_407640(void) {
    // 0x407640
    function_409ce6(92, 0);
    g75 = g124;
    return g124;
}

// Address range: 0x407651 - 0x40767e
void function_407651(void) {
    // 0x407651
    SetCursorPos();
    uint16_t v1;
    int32_t v2 = v1; // 0x40765f
    g125 = v2;
    SetCursor(LoadImageA(NULL, (char *)v2, 2, 0, 0, 0x8040));
}

// Address range: 0x40767f - 0x407760
void function_40767f(void) {
    int32_t v1 = *(int32_t *)(g124 + 48); // 0x407680
    int32_t v2 = g130; // 0x407686
    int32_t v3 = g131; // 0x407687
    g131 = g125;
    switch (v1) {
        case 1: {
            // 0x407696
            *(int32_t *)(g124 + 16) = g125;
            // branch -> 0x4076a4
            break;
        }
        case 4: {
            // 0x40769e
            *(int32_t *)(g124 + 16) = g125;
            *(int32_t *)(g124 + 16) = g131 - 2;
            // branch -> 0x4076a4
            break;
        }
        case 7: {
            // 0x4076a4
            *(int32_t *)(g124 + 16) = g125;
            // branch -> 0x4076a4
            break;
        }
    }
    // 0x4076bf
    int32_t v4; // 0x4076e7
    int32_t v5; // 0x407758
    int32_t v6; // 0x4076fe_0
    int32_t v7;
    int32_t * v8; // 0x407715_0
    int32_t v9;
    uint32_t v10; // 0x4076da
    uint32_t v11; // 0x40774b
    uint32_t v12; // 0x407715
    int32_t v13; // 0x4076e7
    int32_t v14; // 0x407758
    int32_t v15; // 0x4076da
    int32_t v16; // 0x4076dc
    int32_t v17; // 0x40771c
    int32_t v18; // 0x40774b
    int32_t v19; // 0x40774d
    int32_t v20; // 0x4076ce
    int32_t v21;
    int32_t v22; // 0x40770d
    int32_t v23; // 0x40773f
    int32_t v24;
    int32_t v25; // 0x4076d4
    int32_t v26; // 0x407745
    int32_t v27; // 0x4076e0
    int32_t v28; // 0x40770d
    int32_t v29; // 0x407710
    int32_t v30; // 0x407723
    int32_t v31; // 0x407751
    switch (v1) {
        case 2: {
            // 0x4076ce
            v20 = g124;
            g126 = *(int32_t *)(v20 + 16);
            g130 = *(int32_t *)(v20 + 76);
            v25 = g131 + 2;
            *(int32_t *)(v20 + 24) = v25;
            v15 = g126;
            v10 = v25 - v15;
            v16 = g130;
            v21 = g124;
            v13 = v16;
            if (v10 >= v16) {
                // 0x4076e0
                v27 = *(int32_t *)(v21 + 84);
                g130 = v27;
                if (v10 <= v27) {
                    // 0x4076ec
                    switch (v1) {
                        default: {
                            // 0x40772c
                            g131 = &v9;
                            // branch -> 0x407730
                            // 0x407730
                            if (v1 < 9) {
                                // 0x40773f
                                v23 = g124;
                                g126 = *(int32_t *)(v23 + 20);
                                g130 = *(int32_t *)(v23 + 80);
                                v26 = g131 + 2;
                                *(int32_t *)(v23 + 28) = v26;
                                v18 = g126;
                                v11 = v26 - v18;
                                v19 = g130;
                                v24 = g124;
                                v14 = v19;
                                if (v11 >= v19) {
                                    // 0x407751
                                    v31 = *(int32_t *)(v24 + 88);
                                    g130 = v31;
                                    if (v11 <= v31) {
                                        // 0x40775d
                                        g131 = v3;
                                        g130 = v2;
                                        return;
                                    }
                                    v14 = v31;
                                }
                                // 0x407758
                                v5 = v14 + v18;
                                g130 = v5;
                                *(int32_t *)(v24 + 28) = v5;
                                // branch -> 0x40775d
                            }
                            // 0x40775d
                            g131 = v3;
                            g130 = v2;
                            return;
                        }
                        case 3: {
                            // 0x4076fb
                            v6 = &v9;
                            g131 = v6;
                            *(int32_t *)(g124 + 20) = v6;
                            // branch -> 0x40770d
                            break;
                        }
                        case 5: {
                            // 0x4076fb
                            v6 = &v9;
                            g131 = v6;
                            *(int32_t *)(g124 + 20) = v6;
                            // branch -> 0x40770d
                            break;
                        }
                        case 4: {
                            // 0x407707
                            v7 = &v9;
                            g131 = v7;
                            *(int32_t *)(g124 + 20) = v7;
                            *(int32_t *)(g124 + 20) = g131 - 2;
                            // branch -> 0x40770d
                            break;
                        }
                    }
                    // 0x40770d
                    v22 = g124;
                    v28 = *(int32_t *)(v22 + 28);
                    v29 = *(int32_t *)(v22 + 80);
                    g130 = v29;
                    v8 = (int32_t *)(v22 + 20);
                    v12 = v28 - *v8;
                    g126 = v12;
                    v17 = v29;
                    if (v12 >= v29) {
                        // 0x407723
                        v30 = *(int32_t *)(v22 + 88);
                        g130 = v30;
                        if (v12 <= v30) {
                            // 0x407730
                            if (v1 < 9) {
                                // 0x40773f
                                v23 = g124;
                                g126 = *(int32_t *)(v23 + 20);
                                g130 = *(int32_t *)(v23 + 80);
                                v26 = g131 + 2;
                                *(int32_t *)(v23 + 28) = v26;
                                v18 = g126;
                                v11 = v26 - v18;
                                v19 = g130;
                                v24 = g124;
                                v14 = v19;
                                if (v11 >= v19) {
                                    // 0x407751
                                    v31 = *(int32_t *)(v24 + 88);
                                    g130 = v31;
                                    if (v11 <= v31) {
                                        // 0x40775d
                                        g131 = v3;
                                        g130 = v2;
                                        return;
                                    }
                                    v14 = v31;
                                }
                                // 0x407758
                                v5 = v14 + v18;
                                g130 = v5;
                                *(int32_t *)(v24 + 28) = v5;
                                // branch -> 0x40775d
                            }
                            // 0x40775d
                            g131 = v3;
                            g130 = v2;
                            return;
                        }
                        v17 = v30;
                    }
                    // 0x40771c
                    *v8 = v28 - v17;
                    // branch -> 0x407730
                    // 0x407730
                    if (v1 < 9) {
                        // 0x40773f
                        v23 = g124;
                        g126 = *(int32_t *)(v23 + 20);
                        g130 = *(int32_t *)(v23 + 80);
                        v26 = g131 + 2;
                        *(int32_t *)(v23 + 28) = v26;
                        v18 = g126;
                        v11 = v26 - v18;
                        v19 = g130;
                        v24 = g124;
                        v14 = v19;
                        if (v11 >= v19) {
                            // 0x407751
                            v31 = *(int32_t *)(v24 + 88);
                            g130 = v31;
                            if (v11 <= v31) {
                                // 0x40775d
                                g131 = v3;
                                g130 = v2;
                                return;
                            }
                            v14 = v31;
                        }
                        // 0x407758
                        v5 = v14 + v18;
                        g130 = v5;
                        *(int32_t *)(v24 + 28) = v5;
                        // branch -> 0x40775d
                    }
                    // 0x40775d
                    g131 = v3;
                    g130 = v2;
                    return;
                }
                v13 = v27;
            }
            // 0x4076e7
            v4 = v13 + v15;
            g130 = v4;
            *(int32_t *)(v21 + 24) = v4;
            // branch -> 0x4076ec
            break;
        }
        case 5: {
            // 0x4076ce
            v20 = g124;
            g126 = *(int32_t *)(v20 + 16);
            g130 = *(int32_t *)(v20 + 76);
            v25 = g131 + 2;
            *(int32_t *)(v20 + 24) = v25;
            v15 = g126;
            v10 = v25 - v15;
            v16 = g130;
            v21 = g124;
            v13 = v16;
            if (v10 >= v16) {
                // 0x4076e0
                v27 = *(int32_t *)(v21 + 84);
                g130 = v27;
                if (v10 <= v27) {
                    // 0x4076ec
                    switch (v1) {
                        default: {
                            // 0x40772c
                            g131 = &v9;
                            // branch -> 0x407730
                            // 0x407730
                            if (v1 < 9) {
                                // 0x40773f
                                v23 = g124;
                                g126 = *(int32_t *)(v23 + 20);
                                g130 = *(int32_t *)(v23 + 80);
                                v26 = g131 + 2;
                                *(int32_t *)(v23 + 28) = v26;
                                v18 = g126;
                                v11 = v26 - v18;
                                v19 = g130;
                                v24 = g124;
                                v14 = v19;
                                if (v11 >= v19) {
                                    // 0x407751
                                    v31 = *(int32_t *)(v24 + 88);
                                    g130 = v31;
                                    if (v11 <= v31) {
                                        // 0x40775d
                                        g131 = v3;
                                        g130 = v2;
                                        return;
                                    }
                                    v14 = v31;
                                }
                                // 0x407758
                                v5 = v14 + v18;
                                g130 = v5;
                                *(int32_t *)(v24 + 28) = v5;
                                // branch -> 0x40775d
                            }
                            // 0x40775d
                            g131 = v3;
                            g130 = v2;
                            return;
                        }
                        case 3: {
                            // 0x4076fb
                            v6 = &v9;
                            g131 = v6;
                            *(int32_t *)(g124 + 20) = v6;
                            // branch -> 0x40770d
                            break;
                        }
                        case 5: {
                            // 0x4076fb
                            v6 = &v9;
                            g131 = v6;
                            *(int32_t *)(g124 + 20) = v6;
                            // branch -> 0x40770d
                            break;
                        }
                        case 4: {
                            // 0x407707
                            v7 = &v9;
                            g131 = v7;
                            *(int32_t *)(g124 + 20) = v7;
                            *(int32_t *)(g124 + 20) = g131 - 2;
                            // branch -> 0x40770d
                            break;
                        }
                    }
                    // 0x40770d
                    v22 = g124;
                    v28 = *(int32_t *)(v22 + 28);
                    v29 = *(int32_t *)(v22 + 80);
                    g130 = v29;
                    v8 = (int32_t *)(v22 + 20);
                    v12 = v28 - *v8;
                    g126 = v12;
                    v17 = v29;
                    if (v12 >= v29) {
                        // 0x407723
                        v30 = *(int32_t *)(v22 + 88);
                        g130 = v30;
                        if (v12 <= v30) {
                            // 0x407730
                            if (v1 < 9) {
                                // 0x40773f
                                v23 = g124;
                                g126 = *(int32_t *)(v23 + 20);
                                g130 = *(int32_t *)(v23 + 80);
                                v26 = g131 + 2;
                                *(int32_t *)(v23 + 28) = v26;
                                v18 = g126;
                                v11 = v26 - v18;
                                v19 = g130;
                                v24 = g124;
                                v14 = v19;
                                if (v11 >= v19) {
                                    // 0x407751
                                    v31 = *(int32_t *)(v24 + 88);
                                    g130 = v31;
                                    if (v11 <= v31) {
                                        // 0x40775d
                                        g131 = v3;
                                        g130 = v2;
                                        return;
                                    }
                                    v14 = v31;
                                }
                                // 0x407758
                                v5 = v14 + v18;
                                g130 = v5;
                                *(int32_t *)(v24 + 28) = v5;
                                // branch -> 0x40775d
                            }
                            // 0x40775d
                            g131 = v3;
                            g130 = v2;
                            return;
                        }
                        v17 = v30;
                    }
                    // 0x40771c
                    *v8 = v28 - v17;
                    // branch -> 0x407730
                    // 0x407730
                    if (v1 < 9) {
                        // 0x40773f
                        v23 = g124;
                        g126 = *(int32_t *)(v23 + 20);
                        g130 = *(int32_t *)(v23 + 80);
                        v26 = g131 + 2;
                        *(int32_t *)(v23 + 28) = v26;
                        v18 = g126;
                        v11 = v26 - v18;
                        v19 = g130;
                        v24 = g124;
                        v14 = v19;
                        if (v11 >= v19) {
                            // 0x407751
                            v31 = *(int32_t *)(v24 + 88);
                            g130 = v31;
                            if (v11 <= v31) {
                                // 0x40775d
                                g131 = v3;
                                g130 = v2;
                                return;
                            }
                            v14 = v31;
                        }
                        // 0x407758
                        v5 = v14 + v18;
                        g130 = v5;
                        *(int32_t *)(v24 + 28) = v5;
                        // branch -> 0x40775d
                    }
                    // 0x40775d
                    g131 = v3;
                    g130 = v2;
                    return;
                }
                v13 = v27;
            }
            // 0x4076e7
            v4 = v13 + v15;
            g130 = v4;
            *(int32_t *)(v21 + 24) = v4;
            // branch -> 0x4076ec
            break;
        }
        case 8: {
            // 0x4076ce
            v20 = g124;
            g126 = *(int32_t *)(v20 + 16);
            g130 = *(int32_t *)(v20 + 76);
            v25 = g131 + 2;
            *(int32_t *)(v20 + 24) = v25;
            v15 = g126;
            v10 = v25 - v15;
            v16 = g130;
            v21 = g124;
            v13 = v16;
            if (v10 >= v16) {
                // 0x4076e0
                v27 = *(int32_t *)(v21 + 84);
                g130 = v27;
                if (v10 <= v27) {
                    // 0x4076ec
                    switch (v1) {
                        default: {
                            // 0x40772c
                            g131 = &v9;
                            // branch -> 0x407730
                            // 0x407730
                            if (v1 < 9) {
                                // 0x40773f
                                v23 = g124;
                                g126 = *(int32_t *)(v23 + 20);
                                g130 = *(int32_t *)(v23 + 80);
                                v26 = g131 + 2;
                                *(int32_t *)(v23 + 28) = v26;
                                v18 = g126;
                                v11 = v26 - v18;
                                v19 = g130;
                                v24 = g124;
                                v14 = v19;
                                if (v11 >= v19) {
                                    // 0x407751
                                    v31 = *(int32_t *)(v24 + 88);
                                    g130 = v31;
                                    if (v11 <= v31) {
                                        // 0x40775d
                                        g131 = v3;
                                        g130 = v2;
                                        return;
                                    }
                                    v14 = v31;
                                }
                                // 0x407758
                                v5 = v14 + v18;
                                g130 = v5;
                                *(int32_t *)(v24 + 28) = v5;
                                // branch -> 0x40775d
                            }
                            // 0x40775d
                            g131 = v3;
                            g130 = v2;
                            return;
                        }
                        case 3: {
                            // 0x4076fb
                            v6 = &v9;
                            g131 = v6;
                            *(int32_t *)(g124 + 20) = v6;
                            // branch -> 0x40770d
                            break;
                        }
                        case 5: {
                            // 0x4076fb
                            v6 = &v9;
                            g131 = v6;
                            *(int32_t *)(g124 + 20) = v6;
                            // branch -> 0x40770d
                            break;
                        }
                        case 4: {
                            // 0x407707
                            v7 = &v9;
                            g131 = v7;
                            *(int32_t *)(g124 + 20) = v7;
                            *(int32_t *)(g124 + 20) = g131 - 2;
                            // branch -> 0x40770d
                            break;
                        }
                    }
                    // 0x40770d
                    v22 = g124;
                    v28 = *(int32_t *)(v22 + 28);
                    v29 = *(int32_t *)(v22 + 80);
                    g130 = v29;
                    v8 = (int32_t *)(v22 + 20);
                    v12 = v28 - *v8;
                    g126 = v12;
                    v17 = v29;
                    if (v12 >= v29) {
                        // 0x407723
                        v30 = *(int32_t *)(v22 + 88);
                        g130 = v30;
                        if (v12 <= v30) {
                            // 0x407730
                            if (v1 < 9) {
                                // 0x40773f
                                v23 = g124;
                                g126 = *(int32_t *)(v23 + 20);
                                g130 = *(int32_t *)(v23 + 80);
                                v26 = g131 + 2;
                                *(int32_t *)(v23 + 28) = v26;
                                v18 = g126;
                                v11 = v26 - v18;
                                v19 = g130;
                                v24 = g124;
                                v14 = v19;
                                if (v11 >= v19) {
                                    // 0x407751
                                    v31 = *(int32_t *)(v24 + 88);
                                    g130 = v31;
                                    if (v11 <= v31) {
                                        // 0x40775d
                                        g131 = v3;
                                        g130 = v2;
                                        return;
                                    }
                                    v14 = v31;
                                }
                                // 0x407758
                                v5 = v14 + v18;
                                g130 = v5;
                                *(int32_t *)(v24 + 28) = v5;
                                // branch -> 0x40775d
                            }
                            // 0x40775d
                            g131 = v3;
                            g130 = v2;
                            return;
                        }
                        v17 = v30;
                    }
                    // 0x40771c
                    *v8 = v28 - v17;
                    // branch -> 0x407730
                    // 0x407730
                    if (v1 < 9) {
                        // 0x40773f
                        v23 = g124;
                        g126 = *(int32_t *)(v23 + 20);
                        g130 = *(int32_t *)(v23 + 80);
                        v26 = g131 + 2;
                        *(int32_t *)(v23 + 28) = v26;
                        v18 = g126;
                        v11 = v26 - v18;
                        v19 = g130;
                        v24 = g124;
                        v14 = v19;
                        if (v11 >= v19) {
                            // 0x407751
                            v31 = *(int32_t *)(v24 + 88);
                            g130 = v31;
                            if (v11 <= v31) {
                                // 0x40775d
                                g131 = v3;
                                g130 = v2;
                                return;
                            }
                            v14 = v31;
                        }
                        // 0x407758
                        v5 = v14 + v18;
                        g130 = v5;
                        *(int32_t *)(v24 + 28) = v5;
                        // branch -> 0x40775d
                    }
                    // 0x40775d
                    g131 = v3;
                    g130 = v2;
                    return;
                }
                v13 = v27;
            }
            // 0x4076e7
            v4 = v13 + v15;
            g130 = v4;
            *(int32_t *)(v21 + 24) = v4;
            // branch -> 0x4076ec
            break;
        }
    }
    // 0x4076ec
    switch (v1) {
        default: {
            // 0x40772c
            g131 = &v9;
            // branch -> 0x407730
            // 0x407730
            if (v1 < 9) {
                // 0x40773f
                v23 = g124;
                g126 = *(int32_t *)(v23 + 20);
                g130 = *(int32_t *)(v23 + 80);
                v26 = g131 + 2;
                *(int32_t *)(v23 + 28) = v26;
                v18 = g126;
                v11 = v26 - v18;
                v19 = g130;
                v24 = g124;
                v14 = v19;
                if (v11 >= v19) {
                    // 0x407751
                    v31 = *(int32_t *)(v24 + 88);
                    g130 = v31;
                    if (v11 <= v31) {
                        // 0x40775d
                        g131 = v3;
                        g130 = v2;
                        return;
                    }
                    v14 = v31;
                }
                // 0x407758
                v5 = v14 + v18;
                g130 = v5;
                *(int32_t *)(v24 + 28) = v5;
                // branch -> 0x40775d
            }
            // 0x40775d
            g131 = v3;
            g130 = v2;
            return;
        }
        case 3: {
            // 0x4076fb
            v6 = &v9;
            g131 = v6;
            *(int32_t *)(g124 + 20) = v6;
            // branch -> 0x40770d
            break;
        }
        case 5: {
            // 0x4076fb
            v6 = &v9;
            g131 = v6;
            *(int32_t *)(g124 + 20) = v6;
            // branch -> 0x40770d
            break;
        }
        case 4: {
            // 0x407707
            v7 = &v9;
            g131 = v7;
            *(int32_t *)(g124 + 20) = v7;
            *(int32_t *)(g124 + 20) = g131 - 2;
            // branch -> 0x40770d
            break;
        }
    }
    // 0x40770d
    v22 = g124;
    v28 = *(int32_t *)(v22 + 28);
    v29 = *(int32_t *)(v22 + 80);
    g130 = v29;
    v8 = (int32_t *)(v22 + 20);
    v12 = v28 - *v8;
    g126 = v12;
    if (v12 >= v29) {
        // 0x407723
        v30 = *(int32_t *)(v22 + 88);
        g130 = v30;
        if (v12 <= v30) {
            // 0x407730
            if (v1 < 9) {
                // 0x40773f
                v23 = g124;
                g126 = *(int32_t *)(v23 + 20);
                g130 = *(int32_t *)(v23 + 80);
                v26 = g131 + 2;
                *(int32_t *)(v23 + 28) = v26;
                v18 = g126;
                v11 = v26 - v18;
                v19 = g130;
                v24 = g124;
                v14 = v19;
                if (v11 >= v19) {
                    // 0x407751
                    v31 = *(int32_t *)(v24 + 88);
                    g130 = v31;
                    if (v11 <= v31) {
                        // 0x40775d
                        g131 = v3;
                        g130 = v2;
                        return;
                    }
                    v14 = v31;
                }
                // 0x407758
                v5 = v14 + v18;
                g130 = v5;
                *(int32_t *)(v24 + 28) = v5;
                // branch -> 0x40775d
            }
            // 0x40775d
            g131 = v3;
            g130 = v2;
            return;
        }
        // 0x40771c
        *v8 = v28 - v30;
        // branch -> 0x407730
        // 0x407730
        if (v1 < 9) {
            // 0x40773f
            v23 = g124;
            g126 = *(int32_t *)(v23 + 20);
            g130 = *(int32_t *)(v23 + 80);
            v26 = g131 + 2;
            *(int32_t *)(v23 + 28) = v26;
            v18 = g126;
            v11 = v26 - v18;
            v19 = g130;
            v24 = g124;
            v14 = v19;
            if (v11 >= v19) {
                // 0x407751
                v31 = *(int32_t *)(v24 + 88);
                g130 = v31;
                if (v11 <= v31) {
                    // 0x40775d
                    g131 = v3;
                    g130 = v2;
                    return;
                }
                v14 = v31;
            }
            // 0x407758
            v5 = v14 + v18;
            g130 = v5;
            *(int32_t *)(v24 + 28) = v5;
            // branch -> 0x40775d
        }
        // 0x40775d
        g131 = v3;
        g130 = v2;
        return;
    }
    // 0x40771c
    *v8 = v28 - v29;
    // branch -> 0x407730
    // 0x407730
    if (v1 < 9) {
        // 0x40773f
        v23 = g124;
        g126 = *(int32_t *)(v23 + 20);
        g130 = *(int32_t *)(v23 + 80);
        v26 = g131 + 2;
        *(int32_t *)(v23 + 28) = v26;
        v18 = g126;
        v11 = v26 - v18;
        v19 = g130;
        v24 = g124;
        v14 = v19;
        if (v11 >= v19) {
            // 0x407751
            v31 = *(int32_t *)(v24 + 88);
            g130 = v31;
            if (v11 <= v31) {
                // 0x40775d
                g131 = v3;
                g130 = v2;
                return;
            }
            v14 = v31;
        }
        // 0x407758
        v5 = v14 + v18;
        g130 = v5;
        *(int32_t *)(v24 + 28) = v5;
        // branch -> 0x40775d
    }
    // Detected a possible infinite recursion (goto support failed); quitting...
}

// Address range: 0x407761 - 0x4077ae
void function_407761(void) {
    // 0x407761
    GetWindowLongA();
    if (g124 != 0x40000000) {
        // 0x407776
        int32_t * hWnd;
        GetParent(hWnd);
        MapWindowPoints();
        // branch -> 0x40778e
    }
    // 0x40778e
    MoveWindow();
}

// Address range: 0x4077af - 0x4077fc
void function_4077af(void) {
    // 0x4077af
    g131 = g124;
    SetCursorPos();
    int32_t v1;
    g125 = v1;
    g124 = g131;
    function_40767f();
    int32_t * v2;
    int32_t v3 = (int32_t)v2; // 0x4077cf
    g125 = v3;
    int32_t v4 = g131; // 0x4077d0
    int32_t lParam = v4 + 16; // 0x4077d0
    g130 = lParam;
    int32_t * hWnd;
    SendMessageA(hWnd, 532, *(int32_t *)(v4 + 48), lParam);
    g130 += 16;
    function_407761();
    g131 = v1;
    g130 = v3;
}

// Address range: 0x4077fd - 0x407be0
void function_4077fd(void) {
    struct _RECT * v1 = NULL; // bp-160
    int32_t v2 = g75; // bp-36
    function_409cdf((char *)&v2);
    int32_t v3 = g124; // 0x407811
    g131 = v3;
    g127 = 0;
    struct _RECT * v4 = (struct _RECT *)-0x2f2f2f2f; // bp-8
    int32_t * hWnd;
    int32_t v5;
    int32_t * v6;
    int32_t * v7;
    if (*(int32_t *)v3 != 0) {
        int32_t * v8 = v6; // 0x407bdd_06
        int32_t * v9 = v7; // 0x407bdc_03
        switch (v5) {
            case 512: {
                // 0x407986
                *(int32_t *)(v3 + 4) = 0;
                MapWindowPoints();
                int32_t v10;
                g125 = 0x10000 * v10 / 0x10000;
                g124 = g131;
                function_40767f();
                g125 = v10 / 0x10000;
                int32_t v11 = g131; // 0x4079b9
                int32_t lParam = v11 + 16; // 0x4079b9
                g130 = lParam;
                SendMessageA(hWnd, 532, *(int32_t *)(v11 + 48), lParam);
                g130 += 16;
                function_407761();
                // branch -> 0x407bd6
                // 0x407bd6
                v4 = (struct _RECT *)g127;
                v8 = v6;
                v9 = v7;
                // branch -> 0x407bd9
                break;
            }
            case 256: {
                // 0x4079f2
            }
            case 514: {
                // 0x407b9d
                ReleaseCapture();
                // branch -> 0x407bd6
                // 0x407bd6
                v4 = (struct _RECT *)g127;
                v8 = (int32_t *)0x407ba3;
                v9 = v7;
                // branch -> 0x407bd9
                break;
            }
            case 533: {
                // 0x407bb3
                PostMessageA(hWnd, 562, 0, 0);
                int32_t * v12;
                int32_t * v13;
                int32_t * v14; // 0x407bdc_05
                if ((int32_t)v13 != g127) {
                    // 0x407bca
                    SetCursorPos();
                    v14 = &NULL->e0;
                    // branch -> 0x407bd6
                } else {
                    v12 = NULL;
                    v14 = NULL;
                }
                // 0x407bd6
                v4 = (struct _RECT *)g127;
                v8 = v12;
                v9 = v14;
                // branch -> 0x407bd9
                break;
            }
        }
        // 0x407bd9
        g124 = (int32_t)v4;
        g131 = (int32_t)v9;
        g130 = (int32_t)v8;
        g127 = (int32_t)v1;
        return;
    }
    // 0x407824
    if (v5 == 274) {
        // 0x407831
        char * v15;
        int32_t v16 = (int32_t)v15; // 0x407831
        g130 = v16;
        if ((v16 & 0xfff0) == 0xf000) {
            // 0x407846
            int32_t * pvParam;
            SystemParametersInfoA(38, 0, pvParam, 0);
            if ((int32_t)pvParam != g127) {
                int32_t v17 = g131; // 0x40785d
                *(int32_t *)(v17 + 48) = g130 % 16;
                g130 = g28;
                *(int32_t *)g131 = 1;
                GetWindowRect(hWnd, (struct _RECT *)(v17 + 16));
                int32_t v18 = g131 + 32; // 0x407878
                GetWindowRect(hWnd, (struct _RECT *)v18);
                g130 = g26;
                *(int32_t *)(g131 + 52) = g127;
                *(int32_t *)(g131 + 56) = g127;
                *(int32_t *)(g131 + 60) = GetSystemMetrics((int32_t)(struct _RECT *)61);
                int32_t v19 = GetSystemMetrics((int32_t)(struct _RECT *)62); // 0x407896
                *(int32_t *)(g131 + 64) = v19;
                GetWindowLongA();
                int32_t * v20; // 0x407b32_09
                if (v19 == 0x800000) {
                    // 0x4078b5
                    GetWindowLongA();
                    GetSystemMetrics(45);
                    v20 = (int32_t *)46;
                    // branch -> 0x4078cc
                } else {
                    // 0x4078ad
                    GetSystemMetrics(5);
                    int32_t * v21;
                    v20 = v21;
                    // branch -> 0x4078cc
                }
                // 0x4078cc
                *(int32_t *)(g131 + 68) = v18;
                *(int32_t *)(g131 + 72) = GetSystemMetrics((int32_t)v20);
                *(int32_t *)(g131 + 76) = GetSystemMetrics(34);
                *(int32_t *)(g131 + 80) = GetSystemMetrics(35);
                *(int32_t *)(g131 + 84) = GetSystemMetrics(59);
                int32_t v22 = GetSystemMetrics(60); // 0x4078f3
                g130 = g23;
                *(int32_t *)(g131 + 88) = v22;
                SendMessageA(hWnd, 36, g127, g131 + 52);
                if (GetKeyState(1) == 0) {
                    // 0x407917
                    SendMessageA(hWnd, 513, 1, g127);
                    // branch -> 0x407924
                }
                // 0x407924
                SetCapture();
                PostMessageA(hWnd, 561, g127, g127);
                int32_t v23 = g131; // 0x40793d
                int32_t * v24 = (int32_t *)(v23 + 4); // 0x407942_0
                if (*(int32_t *)(v23 + 48) == g127) {
                    // 0x407942
                    *v24 = 1;
                    int32_t v25 = g131 + 8; // 0x407949
                    g131 = v25;
                    GetCursorPos((int32_t *)v25);
                    SetCursor(LoadImageA((int32_t *)g127, (char *)0x7f86, 2, g127, g127, 0x8040));
                    // branch -> 0x407bd6
                } else {
                    // 0x407974
                    *v24 = g127;
                    // branch -> 0x407bd6
                }
                // 0x407bd6
                v4 = (struct _RECT *)g127;
                // branch -> 0x407bd9
            }
        }
    }
    // 0x407bd9
    g124 = (int32_t)v4;
    g131 = (int32_t)v7;
    g130 = (int32_t)v6;
    g127 = (int32_t)v1;
}

// Address range: 0x407be3 - 0x407c42
void function_407be3(void) {
    // 0x407be3
    g130 = -0x2f2f2f2f;
    int32_t v1;
    int32_t v2;
    int32_t v3;
    if (v1 == 0) {
        // 0x407c3e
        g124 = -0x2f2f2f2f;
        g130 = v3;
        g129 = v2;
        return;
    }
    // 0x407bf2
    GetPropA();
    g131 = g124;
    GetWindowLongA();
    int32_t v4 = g131; // 0x407c0e
    int32_t v5;
    if (v4 != g124) {
        // 0x407c3d
        g131 = v5;
        // branch -> 0x407c3e
        // 0x407c3e
        g124 = g130;
        g130 = v3;
        g129 = v2;
        return;
    }
    int32_t v6 = function_409bf5((int32_t)*(char *)g110, v4); // 0x407c19
    if (v6 == 0) {
        // 0x407c3d
        g131 = v5;
        // branch -> 0x407c3e
        // 0x407c3e
        g124 = g130;
        g130 = v3;
        g129 = v2;
        return;
    }
    int32_t v7 = *(int32_t *)(*(int32_t *)(v6 + 4) + 8); // 0x407c25
    g125 = v7;
    int32_t v8;
    int32_t v9;
    if (v7 != 0) {
        // 0x407c2c
        int32_t v10;
        int32_t * v11;
        ((int32_t (*)(int32_t, int32_t, int32_t, int32_t, int32_t))v7)(v6, v9, v8, v10, (int32_t)v11);
        g130 = g124;
        // branch -> 0x407c3d
    } else {
        v8 = v2;
        v9 = v3;
        v6 = v5;
    }
    // 0x407c3d
    g131 = v6;
    // branch -> 0x407c3e
    // 0x407c3e
    g124 = g130;
    g130 = v9;
    g129 = v8;
}

// Address range: 0x407c43 - 0x407c56
void function_407c43(void) {
    // 0x407c43
    int32_t * hWnd;
    SendMessageA(hWnd, 21, 0, 0);
}

// Address range: 0x407c59 - 0x40810c
void function_407c59(void) {
    struct struct_21 * v1 = NULL; // bp-232
    struct struct_21 * v2 = NULL; // bp-220
    struct struct_21 * v3 = NULL; // bp-168
    struct struct_21 * v4 = NULL; // bp-164
    struct struct_21 * v5 = NULL; // bp-160
    struct struct_21 * v6 = NULL; // bp-156
    struct struct_21 * v7 = NULL;
    struct struct_21 * v8 = NULL; // bp+12
    int32_t v9 = g113; // bp-44
    g131 = 0;
    function_409cdf((char *)&v9);
    g130 = g124;
    function_4077fd();
    if (g124 == -0x2f2f2f2f) {
        // 0x407c8e
        int32_t * hWnd;
        int32_t hWnd2 = (int32_t)hWnd; // 0x407c91_0
        struct struct_21 * v10 = (struct struct_21 *)hWnd; // bp-12
        int32_t v11; // 0x407ebd
        int32_t v12; // 0x407ea4_0
        int32_t v13;
        struct struct_20 * v14;
        struct struct_21 * v15; // bp+16
        int32_t * lpRect;
        int32_t v16;
        int32_t v17; // 0x407d50
        int32_t v18; // 0x407e14
        int32_t v19; // 0x407e6d
        uint32_t v20; // 0x407fb2
        uint32_t v21; // 0x40801e
        int32_t v22; // 0x407fce
        int32_t v23; // 0x407fe1
        int32_t v24; // 0x40807d
        int32_t v25; // 0x407cdf
        int32_t v26; // 0x407cfe
        int32_t v27; // 0x407d19
        uint32_t v28; // 0x407d28
        int32_t v29; // 0x407fdb
        int32_t v30; // 0x407d44
        int32_t v31; // 0x407ded
        int32_t v32; // 0x407df0
        int32_t v33; // 0x408086
        int32_t v34; // 0x408089
        int32_t v35; // 0x40808d
        int32_t v36; // 0x4080cd
        int32_t v37; // 0x407cdf
        int32_t v38; // 0x407cfe
        struct struct_21 * v39; // 0x407d05_0
        int32_t v40; // 0x407d08
        int32_t v41; // 0x407de5
        struct struct_21 * v42; // 0x407de5_0
        int16_t v43; // 0x407ea4
        uint16_t v44; // 0x407f11
        uint16_t v45; // 0x407f38
        uint16_t v46; // 0x407f47
        uint16_t v47; // 0x407f56
        int32_t v48; // 0x407f11
        int32_t v49; // 0x407f38
        int32_t v50; // 0x407f47
        int32_t v51; // 0x407f56
        int32_t v52; // 0x407eca
        int32_t v53; // 0x407ed3
        int32_t v54; // 0x407ed8
        uint32_t v55;
        if (hWnd == NULL) {
            // 0x407c8e
            v16 = g131;
            // branch -> 0x407cd7
        } else {
            int32_t * v56 = hWnd; // 0x407cb81
            struct struct_21 * v57; // 0x407e14_0
            int32_t v58; // 0x407cce
            struct struct_21 * v59; // 0x407e59
            int32_t v60; // 0x407cbd
            struct struct_21 * v61; // 0x407cbd_0
            struct struct_21 * v62; // 0x407e15_0
            int32_t v63; // 0x407cc2
            while (true) {
                // 0x407c98
                GetPropA();
                v15 = (struct struct_21 *)v56;
                struct struct_21 * v64 = v10; // 0x407cad_0
                v61 = v64;
                if (v56 == NULL) {
                    int32_t * v65 = GetParent(&v64->e0); // 0x407cb0
                    v10 = (struct struct_21 *)v65;
                    if (v65 == NULL) {
                        v61 = (struct struct_21 *)v65;
                        // break -> 0x407cbd
                        break;
                    }
                    v56 = v65;
                    // continue -> 0x407c98
                    continue;
                }
                // 0x407cbd
                v60 = (int32_t)v61;
                if (v60 != g131) {
                    // 0x407cc2
                    v63 = (int32_t)v15 - 1;
                    v15 = (struct struct_21 *)v63;
                    v58 = function_409bf5((int32_t)*(char *)g112, v63);
                    g131 = v58;
                    v25 = v58;
                    v14 = (struct struct_20 *)v58;
                    // branch -> 0x407cdb
                    // 0x407cdb
                    if (v25 != 0) {
                        // 0x407cdf
                        v37 = *(int32_t *)(v25 + 12);
                        g124 = v37;
                        if (v37 != 0) {
                            // 0x407ce6
                            ((int32_t (*)(int32_t, int32_t, int32_t, int32_t))v37)(hWnd2, (int32_t)v7, (int32_t)v8, g127);
                            if (g124 == -0x1f1f1f1f) {
                                // 0x407ce6
                                // branch -> 0x407d05
                                // 0x407d05
                                v39 = v7;
                                g125 = (int32_t)v39;
                                v40 = (int32_t)v15;
                                g126 = v40;
                                g124 = 273;
                                struct struct_21 * v66 = (struct struct_21 *)-0x2f2f2f2f; // bp-8
                                *(int32_t *)(g130 + 4) = v40;
                                int32_t * v67;
                                int32_t v68;
                                if (v39 > (struct struct_21 *)273) {
                                    // 0x408019
                                    g124 = 0x30d5;
                                    v21 = g125;
                                    if (v21 > 0x30d5) {
                                        // 0x4080c4
                                        g124 = 0x3331;
                                        if (v21 == 0x3331) {
                                            // 0x4080fb
                                            *(int32_t *)(g130 + 12) = 0x3331;
                                            // branch -> 0x4080fe
                                            // 0x4080fe
                                            *(int32_t *)(g130 + 68) = g127;
                                            // branch -> 0x408101
                                            // 0x408101
                                            // branch -> 0x408105
                                            // 0x408105
                                            g124 = (int32_t)NULL;
                                            // branch -> 0x408108
                                            // 0x408108
                                            g131 = v68;
                                            g130 = (int32_t)v67;
                                            g127 = (int32_t)v2;
                                            return;
                                        }
                                        // 0x4080cd
                                        v36 = v21 - 0x3332;
                                        if (v36 == 0) {
                                            // 0x4080ed
                                            *(int32_t *)(g130 + 12) = 0x3332;
                                            *(int32_t *)g130 = (int32_t)v8;
                                            // branch -> 0x4080fe
                                            // 0x4080fe
                                            *(int32_t *)(g130 + 68) = g127;
                                            // branch -> 0x408101
                                            // 0x408101
                                            // branch -> 0x408105
                                            // 0x408105
                                            g124 = (int32_t)NULL;
                                            // branch -> 0x408108
                                            // 0x408108
                                            g131 = v68;
                                            g130 = (int32_t)v67;
                                            g127 = (int32_t)v2;
                                            return;
                                        }
                                        // 0x4080d0
                                        if (v36 == 14) {
                                            // 0x4080d5
                                            // branch -> 0x4080e0
                                            // 0x4080e0
                                            function_407be3();
                                            // branch -> 0x408105
                                            // 0x408105
                                            g124 = (int32_t)(struct struct_21 *)g124;
                                            // branch -> 0x408108
                                            // 0x408108
                                            g131 = v68;
                                            g130 = (int32_t)v67;
                                            g127 = (int32_t)v2;
                                            return;
                                        }
                                        // 0x408105
                                        g124 = (int32_t)v66;
                                        // branch -> 0x408108
                                        // 0x408108
                                        g131 = v68;
                                        g130 = (int32_t)v67;
                                        g127 = (int32_t)v2;
                                        return;
                                    }
                                    // 0x408026
                                    if (v21 != 0x30d5) {
                                        // 0x408028
                                        g124 = 275;
                                        if (v21 == 275) {
                                            // 0x408064
                                            if (g131 != 0) {
                                                // 0x40806c
                                                *(int32_t *)(g130 + 12) = 0x3336;
                                                *(int32_t *)g130 = (int32_t)v8;
                                                // branch -> 0x408101
                                                // 0x408101
                                                // branch -> 0x408105
                                                // 0x408105
                                                g124 = (int32_t)NULL;
                                                // branch -> 0x408108
                                                // 0x408108
                                                g131 = v68;
                                                g130 = (int32_t)v67;
                                                g127 = (int32_t)v2;
                                                return;
                                            }
                                        } else {
                                            // 0x408031
                                            if (v21 >= 276) {
                                                // 0x408037
                                                if (v21 < 278) {
                                                    // 0x4080d5
                                                    // branch -> 0x4080e0
                                                    // 0x4080e0
                                                    function_407be3();
                                                    // branch -> 0x408105
                                                    // 0x408105
                                                    g124 = (int32_t)(struct struct_21 *)g124;
                                                    // branch -> 0x408108
                                                    // 0x408108
                                                    g131 = v68;
                                                    g130 = (int32_t)v67;
                                                    g127 = (int32_t)v2;
                                                    return;
                                                }
                                                // 0x408043
                                                if (v21 >= 307) {
                                                    // 0x40804f
                                                    if (v21 < 310 || v21 == 312) {
                                                        // 0x4080d5
                                                        // branch -> 0x4080e0
                                                        // 0x4080e0
                                                        function_407be3();
                                                        // branch -> 0x408105
                                                        // 0x408105
                                                        g124 = (int32_t)(struct struct_21 *)g124;
                                                        // branch -> 0x408108
                                                        // 0x408108
                                                        g131 = v68;
                                                        g130 = (int32_t)v67;
                                                        g127 = (int32_t)v2;
                                                        return;
                                                    }
                                                }
                                                // 0x408105
                                                g124 = (int32_t)v66;
                                                // branch -> 0x408108
                                                // 0x408108
                                                g131 = v68;
                                                g130 = (int32_t)v67;
                                                g127 = (int32_t)v2;
                                                return;
                                            }
                                        }
                                        // 0x408105
                                        g124 = (int32_t)v66;
                                        // branch -> 0x408108
                                        // 0x408108
                                        g131 = v68;
                                        g130 = (int32_t)v67;
                                        g127 = (int32_t)v2;
                                        return;
                                    }
                                    // 0x40807d
                                    v24 = g127;
                                    g127 = v24 - 513;
                                    if (v24 == 513) {
                                        // 0x40809c
                                        // branch -> 0x40809e
                                        // 0x40809e
                                        function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)NULL);
                                        // branch -> 0x4080b1
                                        // 0x4080b1
                                        g130 = 0;
                                        PostMessageA(hWnd, 0, 0, 0);
                                        // branch -> 0x408105
                                        // 0x408105
                                        g124 = (int32_t)(struct struct_21 *)g130;
                                        // branch -> 0x408108
                                        // 0x408108
                                        g131 = v68;
                                        g130 = (int32_t)v67;
                                        g127 = (int32_t)v2;
                                        return;
                                    }
                                    // 0x408085
                                    v33 = v24 - 515;
                                    g127 = v33;
                                    int32_t v69; // 0x4081086
                                    int32_t * v70; // bp+011
                                    if (v33 != 0) {
                                        // 0x408089
                                        v34 = v24 - 516;
                                        g127 = v34;
                                        if (v34 != 0) {
                                            // 0x40808c
                                            v35 = v24 - 518;
                                            g127 = v35;
                                            if (v35 != 0) {
                                                // 0x4080b1
                                                g130 = 0;
                                                PostMessageA(hWnd, 0, 0, 0);
                                                // branch -> 0x408105
                                                // 0x408105
                                                g124 = (int32_t)(struct struct_21 *)g130;
                                                // branch -> 0x408108
                                                // 0x408108
                                                g131 = v68;
                                                g130 = (int32_t)v67;
                                                g127 = (int32_t)v2;
                                                return;
                                            }
                                            // 0x408090
                                            // branch -> 0x40809e
                                            // 0x40809e
                                            function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                                            // branch -> 0x4080b1
                                            // 0x4080b1
                                            g130 = 0;
                                            PostMessageA(hWnd, 0, 0, 0);
                                            // branch -> 0x408105
                                            // 0x408105
                                            g124 = (int32_t)(struct struct_21 *)g130;
                                            // branch -> 0x408108
                                            // 0x408108
                                            g131 = v68;
                                            g130 = (int32_t)v67;
                                            g127 = (int32_t)(struct struct_21 *)3;
                                            return;
                                        }
                                        v70 = (int32_t *)1;
                                        v69 = v68;
                                    } else {
                                        v70 = v67;
                                        v69 = 2;
                                    }
                                    // 0x40809e
                                    function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                                    // branch -> 0x4080b1
                                    // 0x4080b1
                                    g130 = 0;
                                    PostMessageA(hWnd, 0, 0, 0);
                                    // branch -> 0x408105
                                    // 0x408105
                                    g124 = (int32_t)(struct struct_21 *)g130;
                                    // branch -> 0x408108
                                    // 0x408108
                                    g131 = v69;
                                    g130 = (int32_t)v70;
                                    g127 = (int32_t)v2;
                                    return;
                                }
                                // 0x407d22
                                if (v39 == (struct struct_21 *)273) {
                                    // 0x407f95
                                    g131 = (int32_t)v8;
                                    v2 = (struct struct_21 *)g127;
                                    function_407be3();
                                    if (g124 != -0x2f2f2f2f) {
                                        // 0x408101
                                        // branch -> 0x408105
                                        // 0x408105
                                        g124 = (int32_t)NULL;
                                        // branch -> 0x408108
                                        // 0x408108
                                        g131 = v68;
                                        g130 = (int32_t)(int32_t *)0x407fa4;
                                        g127 = (int32_t)v2;
                                        return;
                                    }
                                    // 0x407fb2
                                    v20 = g131;
                                    g124 = v20 / 0x10000;
                                    if (g127 != 0) {
                                        // 0x407fbb
                                        *(int32_t *)(g130 + 12) = 0x332c;
                                        *(int32_t *)(g130 + 8) = g124;
                                        GetWindowLongA();
                                        v22 = g124;
                                        *(int32_t *)g130 = v22;
                                        if (v22 != -0x2710) {
                                            // 0x408101
                                            // branch -> 0x408105
                                            // 0x408105
                                            g124 = (int32_t)NULL;
                                            // branch -> 0x408108
                                            // 0x408108
                                            g131 = v68;
                                            g130 = (int32_t)(int32_t *)0x407fa4;
                                            g127 = (int32_t)v2;
                                            return;
                                        }
                                        // 0x407fdb
                                        v29 = g131 % 0x10000;
                                        g131 = v29;
                                        // branch -> 0x407fe1
                                        // 0x407fe1
                                        *(int32_t *)g130 = v29;
                                        // branch -> 0x40800d
                                        // 0x40800d
                                        *(int32_t *)(g130 + 12) = 0x332d;
                                        // branch -> 0x408101
                                        // 0x408101
                                        // branch -> 0x408105
                                        // 0x408105
                                        g124 = (int32_t)NULL;
                                        // branch -> 0x408108
                                        // 0x408108
                                        g131 = v68;
                                        g130 = (int32_t)(int32_t *)0x407fa4;
                                        g127 = (int32_t)v2;
                                        return;
                                    }
                                    // 0x407fe5
                                    if (v20 >= 0x10000) {
                                        // 0x407fea
                                        switch (v20) {
                                            default: {
                                                // 0x408008
                                                *(int32_t *)g130 = v20 % 0x10000;
                                                // branch -> 0x40800d
                                                // 0x40800d
                                                *(int32_t *)(g130 + 12) = 0x332d;
                                                // branch -> 0x408101
                                                // 0x408101
                                                // branch -> 0x408105
                                                // 0x408105
                                                g124 = (int32_t)NULL;
                                                // branch -> 0x408108
                                                // 0x408108
                                                g131 = v68;
                                                g130 = (int32_t)(int32_t *)0x407fa4;
                                                g127 = (int32_t)v2;
                                                return;
                                            }
                                            case -1535: {
                                                // 0x407ff1
                                                // branch -> 0x407ff3
                                            }
                                            case -1534: {
                                                // 0x407ff3
                                                function_4073e0();
                                                // branch -> 0x408101
                                                // 0x408101
                                                // branch -> 0x408105
                                                // 0x408105
                                                g124 = (int32_t)NULL;
                                                // branch -> 0x408108
                                                // 0x408108
                                                g131 = v68;
                                                g130 = (int32_t)(int32_t *)0x407fa4;
                                                g127 = (int32_t)v2;
                                                return;
                                            }
                                        }
                                    }
                                    // 0x407fe1
                                    *(int32_t *)g130 = v20;
                                    // branch -> 0x40800d
                                    // 0x40800d
                                    *(int32_t *)(g130 + 12) = 0x332d;
                                    // branch -> 0x408101
                                    // 0x408101
                                    // branch -> 0x408105
                                    // 0x408105
                                    g124 = (int32_t)NULL;
                                    // branch -> 0x408108
                                    // 0x408108
                                    g131 = v68;
                                    g130 = (int32_t)(int32_t *)0x407fa4;
                                    g127 = (int32_t)v2;
                                    return;
                                }
                                // 0x407d28
                                v28 = g125;
                                if (v28 > 20) {
                                    // 0x407eca
                                    v52 = v28 - 21;
                                    if (v28 == 21) {
                                        // 0x407f6e
                                        if (g131 != 0) {
                                            // 0x407f76
                                            if (v14->e6 == 0) {
                                                // 0x407f80
                                                EnumChildWindows();
                                                // branch -> 0x408105
                                                // 0x408105
                                                g124 = (int32_t)v66;
                                                // branch -> 0x408108
                                                // 0x408108
                                                g131 = v68;
                                                g130 = (int32_t)v67;
                                                g127 = (int32_t)v2;
                                                return;
                                            }
                                        }
                                    } else {
                                        // 0x407ed3
                                        v53 = v28 - 36;
                                        if (v52 == 15) {
                                            // 0x407f09
                                            if (g131 != 0) {
                                                // 0x407f11
                                                v44 = v14->e8;
                                                v48 = v44;
                                                if (v44 == 0) {
                                                    // 0x407f22
                                                    GetWindowLongA();
                                                    if (v48 <= 0) {
                                                        // 0x407f31
                                                        *(int32_t *)(g127 + 24) = 1;
                                                        // branch -> 0x407f38
                                                    }
                                                } else {
                                                    // 0x407f1a
                                                    *(int32_t *)(g127 + 24) = v48;
                                                    // branch -> 0x407f38
                                                }
                                                // 0x407f38
                                                v45 = v14->e8;
                                                if (v45 != 0) {
                                                    // 0x407f41
                                                    *(int32_t *)(g127 + 28) = (int32_t)v45;
                                                    // branch -> 0x407f47
                                                }
                                                // 0x407f47
                                                v46 = v14->e9;
                                                if (v46 != 0) {
                                                    // 0x407f50
                                                    *(int32_t *)(g127 + 32) = (int32_t)v46;
                                                    // branch -> 0x407f56
                                                }
                                                // 0x407f56
                                                v47 = v14->e9;
                                                if (v47 != 0) {
                                                    // 0x407f63
                                                    *(int32_t *)(g127 + 36) = (int32_t)v47;
                                                    // branch -> 0x408101
                                                }
                                                // 0x408101
                                                // branch -> 0x408105
                                                // 0x408105
                                                g124 = (int32_t)NULL;
                                                // branch -> 0x408108
                                                // 0x408108
                                                g131 = v68;
                                                g130 = (int32_t)v67;
                                                g127 = (int32_t)v2;
                                                return;
                                            }
                                        } else {
                                            // 0x407ed8
                                            if (v53 == 42) {
                                                // 0x407ef9
                                                // branch -> 0x4080e0
                                                // 0x4080e0
                                                function_407be3();
                                                // branch -> 0x408105
                                                // 0x408105
                                                g124 = (int32_t)(struct struct_21 *)g124;
                                                // branch -> 0x408108
                                                // 0x408108
                                                g131 = v68;
                                                g130 = (int32_t)v67;
                                                g127 = (int32_t)v2;
                                                return;
                                            }
                                            // 0x407edd
                                            if (v28 == 130) {
                                                // 0x407ee6
                                                v6 = (struct struct_21 *)"PB_Focus";
                                                v5 = (struct struct_21 *)hWnd;
                                                v4 = (struct struct_21 *)0x407ef4;
                                                RemovePropA();
                                                // branch -> 0x407dc8
                                                // 0x407dc8
                                                // branch -> 0x408105
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                } else {
                                    // 0x407d31
                                    if (v28 == 20) {
                                        // 0x407e6d
                                        v19 = g131;
                                        if (v19 != 0) {
                                            // 0x407e71
                                            if (v14->e5 == 0) {
                                                // 0x407e9d
                                                g124 = hWnd2;
                                                if (*(int32_t *)v19 == hWnd2) {
                                                    // 0x407ea4
                                                    v43 = v14->e7;
                                                    v12 = v43;
                                                    g131 = v12;
                                                    if (v43 != 0) {
                                                        // 0x407eab
                                                        ((int32_t (*)(int32_t, int32_t))v12)((int32_t)v8, hWnd2);
                                                        // branch -> 0x407eb4
                                                        // 0x407eb4
                                                        v11 = (int32_t)lpRect;
                                                        function_408227(15, 0, v11, v11);
                                                        // branch -> 0x408105
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                }
                                            } else {
                                                // 0x407e77
                                                GetClientRect(hWnd2, lpRect);
                                                FillRect((int32_t)v8, lpRect, (int32_t)lpRect);
                                                // branch -> 0x407eb4
                                                // 0x407eb4
                                                v11 = (int32_t)lpRect;
                                                function_408227(15, 0, v11, v11);
                                                // branch -> 0x408105
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                            // 0x407eb4
                                            v11 = (int32_t)lpRect;
                                            function_408227(15, 0, v11, v11);
                                            // branch -> 0x408105
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // 0x407eb4
                                        v6 = NULL;
                                        v5 = v15;
                                        v4 = NULL;
                                        v3 = (struct struct_21 *)15;
                                        v11 = (int32_t)lpRect;
                                        function_408227(15, 0, v11, v11);
                                        // branch -> 0x408105
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    } else {
                                        // 0x407d37
                                        if (v28 == 3) {
                                            // 0x407d50
                                            v17 = g131;
                                            if (v17 != 0) {
                                                // 0x407d58
                                                g124 = hWnd2;
                                                if (hWnd2 == *(int32_t *)v17) {
                                                    // 0x407d63
                                                    // branch -> 0x407e60
                                                    // 0x407e60
                                                    function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                    // branch -> 0x408101
                                                    // 0x408101
                                                    // branch -> 0x408105
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                            }
                                            // 0x408101
                                            // branch -> 0x408105
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        } else {
                                            // 0x407d3c
                                            if (v28 == 5) {
                                                // 0x407dd4
                                                if (v10 == (struct struct_21 *)hWnd) {
                                                    // 0x407ddc
                                                    if (g126 != -1) {
                                                        // 0x407de5
                                                        v42 = v8;
                                                        v41 = (int32_t)v42;
                                                        g124 = v41;
                                                        if (v42 == NULL) {
                                                            // 0x407e3d
                                                            g130 = 0;
                                                            if (v14->e10 != NULL) {
                                                                // 0x407e44
                                                                v14->e10 = NULL;
                                                                function_408227(0x3335, g130, (int32_t)v15, (int32_t)NULL);
                                                                v59 = (struct struct_21 *)g130;
                                                                // branch -> 0x407e59
                                                            } else {
                                                                v59 = NULL;
                                                            }
                                                            // 0x407e59
                                                            v6 = v59;
                                                            v5 = v15;
                                                            v4 = v59;
                                                            // branch -> 0x407e5e
                                                            // 0x407e5e
                                                            v3 = (struct struct_21 *)5;
                                                            // branch -> 0x407e60
                                                            // 0x407e60
                                                            function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                            // branch -> 0x408101
                                                            // 0x408101
                                                            // branch -> 0x408105
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        } else {
                                                            // 0x407ded
                                                            v31 = v41 - 1;
                                                            g124 = v31;
                                                            if (v31 == 0) {
                                                                // 0x407e28
                                                                v14->e10 = (int32_t *)1;
                                                                // branch -> 0x407e60
                                                                // 0x407e60
                                                                function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                                // branch -> 0x408101
                                                                // 0x408101
                                                                // branch -> 0x408105
                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                            } else {
                                                                // 0x407df0
                                                                v32 = v41 - 2;
                                                                g124 = v32;
                                                                if (v32 == 0) {
                                                                    // 0x407dfc
                                                                    g130 = 0;
                                                                    v14->e10 = (int32_t *)1;
                                                                    function_408227(0x3334, g130, (int32_t)v15, (int32_t)NULL);
                                                                    v18 = g130;
                                                                    v57 = (struct struct_21 *)v18;
                                                                    v6 = v57;
                                                                    v62 = v15;
                                                                    v5 = v62;
                                                                    v4 = v57;
                                                                    v3 = (struct struct_21 *)5;
                                                                    function_408227(5, v18, (int32_t)v62, v18);
                                                                    // branch -> 0x408101
                                                                    // 0x408101
                                                                    // branch -> 0x408105
                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                } else {
                                                                    // 0x407df3
                                                                    // branch -> 0x407e5e
                                                                    // 0x407e5e
                                                                    v3 = (struct struct_21 *)5;
                                                                    // branch -> 0x407e60
                                                                    // 0x407e60
                                                                    function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                                    // branch -> 0x408101
                                                                    // 0x408101
                                                                    // branch -> 0x408105
                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                }
                                                                // 0x408101
                                                                // branch -> 0x408105
                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                            }
                                                            // 0x408101
                                                            // branch -> 0x408105
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        }
                                                        // 0x407e60
                                                        function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                        // branch -> 0x408101
                                                        // 0x408101
                                                        // branch -> 0x408105
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            } else {
                                                // 0x407d44
                                                v30 = v28 - 6;
                                                if (v30 == 0) {
                                                    // 0x407d73
                                                    if ((int32_t)v8 % 0x10000 == 0) {
                                                        // 0x407da9
                                                        GetFocus();
                                                        SetPropA();
                                                        function_4074e8(hWnd, NULL);
                                                        // branch -> 0x407dc8
                                                        // 0x407dc8
                                                        // branch -> 0x408105
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    } else {
                                                        // 0x407d7a
                                                        GetPropA();
                                                        if (g124 != 0) {
                                                            // 0x407d8c
                                                            SetFocus();
                                                            // branch -> 0x407d93
                                                        }
                                                        // 0x407d93
                                                        function_408227(0x3330, 0, (int32_t)v15, 0);
                                                        // branch -> 0x407dc8
                                                        // 0x407dc8
                                                        // branch -> 0x408105
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                    // 0x407dc8
                                                    // branch -> 0x408105
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                } else {
                                                    // 0x407d47
                                                    if (v30 == 10) {
                                                        // 0x407d50
                                                        v17 = g131;
                                                        if (v17 != 0) {
                                                            // 0x407d58
                                                            g124 = hWnd2;
                                                            if (hWnd2 == *(int32_t *)v17) {
                                                                // 0x407d63
                                                                // branch -> 0x407e60
                                                                // 0x407e60
                                                                function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                                // branch -> 0x408101
                                                                // 0x408101
                                                                // branch -> 0x408105
                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                            }
                                                        }
                                                        // 0x408101
                                                        // branch -> 0x408105
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                                // Detected a possible infinite recursion (goto support failed); quitting...
                                // 0x408101
                                // branch -> 0x408105
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                    }
                    // 0x407cfe
                    v26 = g130;
                    v38 = *(int32_t *)(v26 + 64);
                    g124 = v38;
                    v27 = v26;
                    if (v38 != 0) {
                        // 0x407ce6
                        ((int32_t (*)(int32_t, int32_t, int32_t, int32_t))v38)(hWnd2, (int32_t)v7, (int32_t)v8, g127);
                        if (g124 == -0x1f1f1f1f) {
                            // 0x407ce6
                            v27 = g130;
                            // branch -> 0x407d05
                            // 0x407d05
                            v39 = v7;
                            g125 = (int32_t)v39;
                            v40 = (int32_t)v15;
                            g126 = v40;
                            g124 = 273;
                            *(int32_t *)(v27 + 4) = v40;
                            if (v39 > (struct struct_21 *)273) {
                                // 0x408019
                                g124 = 0x30d5;
                                v21 = g125;
                                if (v21 > 0x30d5) {
                                    // 0x4080c4
                                    g124 = 0x3331;
                                    if (v21 == 0x3331) {
                                        // 0x4080fb
                                        *(int32_t *)(g130 + 12) = 0x3331;
                                        // branch -> 0x4080fe
                                        // 0x4080fe
                                        *(int32_t *)(g130 + 68) = g127;
                                        // branch -> 0x408101
                                        // 0x408101
                                        // branch -> 0x408105
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    } else {
                                        // 0x4080cd
                                        v36 = v21 - 0x3332;
                                        if (v36 == 0) {
                                            // 0x4080ed
                                            *(int32_t *)(g130 + 12) = 0x3332;
                                            *(int32_t *)g130 = (int32_t)v8;
                                            // branch -> 0x4080fe
                                            // 0x4080fe
                                            *(int32_t *)(g130 + 68) = g127;
                                            // branch -> 0x408101
                                            // 0x408101
                                            // branch -> 0x408105
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        } else {
                                            // 0x4080d0
                                            if (v36 == 14) {
                                                // 0x4080d5
                                                v1 = (struct struct_21 *)g127;
                                                // branch -> 0x4080e0
                                                // 0x4080e0
                                                function_407be3();
                                                // branch -> 0x408105
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // 0x4080fe
                                    *(int32_t *)(g130 + 68) = g127;
                                    // branch -> 0x408101
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                } else {
                                    // 0x408026
                                    if (v21 == 0x30d5) {
                                        // 0x40807d
                                        v24 = g127;
                                        g127 = v24 - 513;
                                        if (v24 == 513) {
                                            // 0x40809c
                                            // branch -> 0x40809e
                                            // 0x40809e
                                            function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)NULL);
                                            // branch -> 0x4080b1
                                            // 0x4080b1
                                            g130 = 0;
                                            PostMessageA(hWnd, 0, 0, 0);
                                            // branch -> 0x408105
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        } else {
                                            // 0x408085
                                            v33 = v24 - 515;
                                            g127 = v33;
                                            if (v33 != 0) {
                                                // 0x408089
                                                v34 = v24 - 516;
                                                g127 = v34;
                                                if (v34 != 0) {
                                                    // 0x40808c
                                                    v35 = v24 - 518;
                                                    g127 = v35;
                                                    if (v35 == 0) {
                                                        // 0x408090
                                                        // branch -> 0x40809e
                                                        // 0x40809e
                                                        function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                                                        // branch -> 0x4080b1
                                                        // 0x4080b1
                                                        g130 = 0;
                                                        PostMessageA(hWnd, 0, 0, 0);
                                                        // branch -> 0x408105
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                    // 0x4080b1
                                                    g130 = 0;
                                                    PostMessageA(hWnd, 0, 0, 0);
                                                    // branch -> 0x408105
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                            }
                                        }
                                        // 0x40809e
                                        function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)NULL);
                                        // branch -> 0x4080b1
                                        // 0x4080b1
                                        g130 = 0;
                                        v1 = NULL;
                                        PostMessageA(hWnd, 0, 0, 0);
                                        // branch -> 0x408105
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    } else {
                                        // 0x408028
                                        g124 = 275;
                                        if (v21 == 275) {
                                            // 0x408064
                                            if (g131 != 0) {
                                                // 0x40806c
                                                *(int32_t *)(g130 + 12) = 0x3336;
                                                *(int32_t *)g130 = (int32_t)v8;
                                                // branch -> 0x408101
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        } else {
                                            // 0x408031
                                            if (v21 >= 276) {
                                                // 0x408037
                                                if (v21 < 278) {
                                                    // 0x4080d5
                                                    v1 = (struct struct_21 *)g127;
                                                    // branch -> 0x4080e0
                                                    // 0x4080e0
                                                    function_407be3();
                                                    // branch -> 0x408105
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                } else {
                                                    // 0x408043
                                                    if (v21 >= 307) {
                                                        // 0x40804f
                                                        if (v21 < 310 || v21 == 312) {
                                                            // 0x4080d5
                                                            v1 = (struct struct_21 *)g127;
                                                            // branch -> 0x4080e0
                                                            // 0x4080e0
                                                            function_407be3();
                                                            // branch -> 0x408105
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        }
                                                    }
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            } else {
                                // 0x407d22
                                if (v39 == (struct struct_21 *)273) {
                                    // 0x407f95
                                    g131 = (int32_t)v8;
                                    function_407be3();
                                    if (g124 == -0x2f2f2f2f) {
                                        // 0x407fb2
                                        v20 = g131;
                                        g124 = v20 / 0x10000;
                                        if (g127 == 0) {
                                            // 0x407fe5
                                            if (v20 >= 0x10000) {
                                                // 0x407fea
                                                v55 = v20 % 0x10000;
                                                switch (v20) {
                                                    default: {
                                                        // 0x408008
                                                        *(int32_t *)g130 = v55;
                                                        // branch -> 0x40800d
                                                        // 0x40800d
                                                        *(int32_t *)(g130 + 12) = 0x332d;
                                                        // branch -> 0x408101
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                        break;
                                                    }
                                                    case -1535: {
                                                        // 0x407ff1
                                                        // branch -> 0x407ff3
                                                    }
                                                    case -1534: {
                                                        // 0x407ff3
                                                        function_4073e0();
                                                        // branch -> 0x408101
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                        break;
                                                    }
                                                }
                                            } else {
                                                v23 = v20;
                                            }
                                        } else {
                                            // 0x407fbb
                                            *(int32_t *)(g130 + 12) = 0x332c;
                                            *(int32_t *)(g130 + 8) = g124;
                                            GetWindowLongA();
                                            v22 = g124;
                                            *(int32_t *)g130 = v22;
                                            if (v22 == -0x2710) {
                                                // 0x407fdb
                                                v29 = g131 % 0x10000;
                                                g131 = v29;
                                                v23 = v29;
                                                // branch -> 0x407fe1
                                                // 0x407fe1
                                                *(int32_t *)g130 = v23;
                                                // branch -> 0x40800d
                                                // 0x40800d
                                                *(int32_t *)(g130 + 12) = 0x332d;
                                                // branch -> 0x408101
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // 0x407fe1
                                        *(int32_t *)g130 = v23;
                                        // branch -> 0x40800d
                                        // 0x40800d
                                        *(int32_t *)(g130 + 12) = 0x332d;
                                        // branch -> 0x408101
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                } else {
                                    // 0x407d28
                                    v28 = g125;
                                    if (v28 > 20) {
                                        // 0x407eca
                                        v52 = v28 - 21;
                                        if (v28 == 21) {
                                            // 0x407f6e
                                            if (g131 != 0) {
                                                // 0x407f76
                                                if (v14->e6 == 0) {
                                                    // 0x407f80
                                                    EnumChildWindows();
                                                    // branch -> 0x408105
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                            }
                                        } else {
                                            // 0x407ed3
                                            v53 = v28 - 36;
                                            if (v52 == 15) {
                                                // 0x407f09
                                                if (g131 != 0) {
                                                    // 0x407f11
                                                    v44 = v14->e8;
                                                    v48 = v44;
                                                    v13 = v48;
                                                    if (v44 == 0) {
                                                        // 0x407f22
                                                        GetWindowLongA();
                                                        if (v13 <= 0) {
                                                            // 0x407f31
                                                            *(int32_t *)(g127 + 24) = 1;
                                                            // branch -> 0x407f38
                                                        }
                                                    } else {
                                                        // 0x407f1a
                                                        *(int32_t *)(g127 + 24) = v48;
                                                        // branch -> 0x407f38
                                                    }
                                                    // 0x407f38
                                                    v45 = v14->e8;
                                                    v49 = v45;
                                                    if (v45 != 0) {
                                                        // 0x407f41
                                                        *(int32_t *)(g127 + 28) = v49;
                                                        // branch -> 0x407f47
                                                    }
                                                    // 0x407f47
                                                    v46 = v14->e9;
                                                    v50 = v46;
                                                    if (v46 != 0) {
                                                        // 0x407f50
                                                        *(int32_t *)(g127 + 32) = v50;
                                                        // branch -> 0x407f56
                                                    }
                                                    // 0x407f56
                                                    v47 = v14->e9;
                                                    v51 = v47;
                                                    if (v47 != 0) {
                                                        // 0x407f63
                                                        *(int32_t *)(g127 + 36) = v51;
                                                        // branch -> 0x408101
                                                    }
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                            } else {
                                                // 0x407ed8
                                                v54 = v28 - 78;
                                                if (v53 == 42) {
                                                    // 0x407ef9
                                                    v4 = (struct struct_21 *)g127;
                                                    v3 = v8;
                                                    // branch -> 0x4080e0
                                                    // 0x4080e0
                                                    function_407be3();
                                                    // branch -> 0x408105
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                } else {
                                                    // 0x407edd
                                                    if (v54 == 52) {
                                                        // 0x407ee6
                                                        v6 = (struct struct_21 *)"PB_Focus";
                                                        v5 = (struct struct_21 *)hWnd;
                                                        v4 = (struct struct_21 *)0x407ef4;
                                                        RemovePropA();
                                                        // branch -> 0x407dc8
                                                        // 0x407dc8
                                                        // branch -> 0x408105
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    } else {
                                        // 0x407d31
                                        if (v28 == 20) {
                                            // 0x407e6d
                                            v19 = g131;
                                            if (v19 != 0) {
                                                // 0x407e71
                                                if (v14->e5 == 0) {
                                                    // 0x407e9d
                                                    g124 = hWnd2;
                                                    if (*(int32_t *)v19 == hWnd2) {
                                                        // 0x407ea4
                                                        v43 = v14->e7;
                                                        v12 = v43;
                                                        g131 = v12;
                                                        if (v43 != 0) {
                                                            // 0x407eab
                                                            ((int32_t (*)(int32_t, int32_t))v12)((int32_t)v8, hWnd2);
                                                            // branch -> 0x407eb4
                                                            // 0x407eb4
                                                            v11 = (int32_t)lpRect;
                                                            function_408227(15, 0, v11, v11);
                                                            // branch -> 0x408105
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        }
                                                    }
                                                } else {
                                                    // 0x407e77
                                                    GetClientRect(hWnd2, lpRect);
                                                    FillRect((int32_t)v8, lpRect, (int32_t)lpRect);
                                                    // branch -> 0x407eb4
                                                    // 0x407eb4
                                                    v11 = (int32_t)lpRect;
                                                    function_408227(15, 0, v11, v11);
                                                    // branch -> 0x408105
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                                // 0x407eb4
                                                v11 = (int32_t)lpRect;
                                                function_408227(15, 0, v11, v11);
                                                // branch -> 0x408105
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                            // 0x407eb4
                                            v6 = NULL;
                                            v5 = v15;
                                            v4 = NULL;
                                            v3 = (struct struct_21 *)15;
                                            v11 = (int32_t)lpRect;
                                            function_408227(15, 0, v11, v11);
                                            // branch -> 0x408105
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        } else {
                                            // 0x407d37
                                            if (v28 == 3) {
                                                // 0x407d50
                                                v17 = g131;
                                                if (v17 != 0) {
                                                    // 0x407d58
                                                    g124 = hWnd2;
                                                    if (hWnd2 == *(int32_t *)v17) {
                                                        // 0x407d63
                                                        // branch -> 0x407e60
                                                        // 0x407e60
                                                        function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                        // branch -> 0x408101
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            } else {
                                                // 0x407d3c
                                                if (v28 == 5) {
                                                    // 0x407dd4
                                                    if (v10 == (struct struct_21 *)hWnd) {
                                                        // 0x407ddc
                                                        if (g126 != -1) {
                                                            // 0x407de5
                                                            v42 = v8;
                                                            v41 = (int32_t)v42;
                                                            g124 = v41;
                                                            if (v42 == NULL) {
                                                                // 0x407e3d
                                                                g130 = 0;
                                                                if (v14->e10 != NULL) {
                                                                    // 0x407e44
                                                                    v14->e10 = NULL;
                                                                    function_408227(0x3335, g130, (int32_t)v15, (int32_t)NULL);
                                                                    v59 = (struct struct_21 *)g130;
                                                                    // branch -> 0x407e59
                                                                } else {
                                                                    v59 = NULL;
                                                                }
                                                                // 0x407e59
                                                                v6 = v59;
                                                                v5 = v15;
                                                                v4 = v59;
                                                                // branch -> 0x407e5e
                                                                // 0x407e5e
                                                                v3 = (struct struct_21 *)5;
                                                                // branch -> 0x407e60
                                                                // 0x407e60
                                                                function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                                // branch -> 0x408101
                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                            } else {
                                                                // 0x407ded
                                                                v31 = v41 - 1;
                                                                g124 = v31;
                                                                if (v31 == 0) {
                                                                    // 0x407e28
                                                                    v14->e10 = (int32_t *)1;
                                                                    // branch -> 0x407e60
                                                                    // 0x407e60
                                                                    function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                                    // branch -> 0x408101
                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                } else {
                                                                    // 0x407df0
                                                                    v32 = v41 - 2;
                                                                    g124 = v32;
                                                                    if (v32 == 0) {
                                                                        // 0x407dfc
                                                                        g130 = 0;
                                                                        v14->e10 = (int32_t *)1;
                                                                        function_408227(0x3334, g130, (int32_t)v15, (int32_t)NULL);
                                                                        v18 = g130;
                                                                        v57 = (struct struct_21 *)v18;
                                                                        v6 = v57;
                                                                        v62 = v15;
                                                                        v5 = v62;
                                                                        v4 = v57;
                                                                        v3 = (struct struct_21 *)5;
                                                                        function_408227(5, v18, (int32_t)v62, v18);
                                                                        // branch -> 0x408101
                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                    } else {
                                                                        // 0x407df3
                                                                        // branch -> 0x407e5e
                                                                        // 0x407e5e
                                                                        v3 = (struct struct_21 *)5;
                                                                        // branch -> 0x407e60
                                                                        // 0x407e60
                                                                        function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                                        // branch -> 0x408101
                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                    }
                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                }
                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                            }
                                                            // 0x407e60
                                                            function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                            // branch -> 0x408101
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        }
                                                    }
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                } else {
                                                    // 0x407d44
                                                    v30 = v28 - 6;
                                                    if (v30 == 0) {
                                                        // 0x407d73
                                                        if ((int32_t)v8 % 0x10000 == 0) {
                                                            // 0x407da9
                                                            GetFocus();
                                                            SetPropA();
                                                            function_4074e8(hWnd, NULL);
                                                            // branch -> 0x407dc8
                                                            // 0x407dc8
                                                            // branch -> 0x408105
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        } else {
                                                            // 0x407d7a
                                                            GetPropA();
                                                            if (g124 != 0) {
                                                                // 0x407d8c
                                                                SetFocus();
                                                                // branch -> 0x407d93
                                                            }
                                                            // 0x407d93
                                                            function_408227(0x3330, 0, (int32_t)v15, 0);
                                                            // branch -> 0x407dc8
                                                            // 0x407dc8
                                                            // branch -> 0x408105
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        }
                                                        // 0x407dc8
                                                        // branch -> 0x408105
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    } else {
                                                        // 0x407d47
                                                        if (v30 == 10) {
                                                            // 0x407d50
                                                            v17 = g131;
                                                            if (v17 != 0) {
                                                                // 0x407d58
                                                                g124 = hWnd2;
                                                                if (hWnd2 == *(int32_t *)v17) {
                                                                    // 0x407d63
                                                                    // branch -> 0x407e60
                                                                    // 0x407e60
                                                                    function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                                    // branch -> 0x408101
                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                }
                                                            }
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        }
                                                    }
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // 0x407d05
                    v39 = v7;
                    g125 = (int32_t)v39;
                    v40 = (int32_t)v15;
                    g126 = v40;
                    g124 = 273;
                    *(int32_t *)(v27 + 4) = v40;
                    if (v39 > (struct struct_21 *)273) {
                        // 0x408019
                        g124 = 0x30d5;
                        v21 = g125;
                        if (v21 > 0x30d5) {
                            // 0x4080c4
                            g124 = 0x3331;
                            if (v21 == 0x3331) {
                                // 0x4080fb
                                *(int32_t *)(g130 + 12) = 0x3331;
                                // branch -> 0x4080fe
                                // 0x4080fe
                                *(int32_t *)(g130 + 68) = g127;
                                // branch -> 0x408101
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            } else {
                                // 0x4080cd
                                v36 = v21 - 0x3332;
                                if (v36 == 0) {
                                    // 0x4080ed
                                    *(int32_t *)(g130 + 12) = 0x3332;
                                    *(int32_t *)g130 = (int32_t)v8;
                                    // branch -> 0x4080fe
                                    // 0x4080fe
                                    *(int32_t *)(g130 + 68) = g127;
                                    // branch -> 0x408101
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                } else {
                                    // 0x4080d0
                                    if (v36 == 14) {
                                        // 0x4080d5
                                        v1 = (struct struct_21 *)g127;
                                        // branch -> 0x4080e0
                                        // 0x4080e0
                                        function_407be3();
                                        // branch -> 0x408105
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // 0x4080fe
                            *(int32_t *)(g130 + 68) = g127;
                            // branch -> 0x408101
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        } else {
                            // 0x408026
                            if (v21 == 0x30d5) {
                                // 0x40807d
                                v24 = g127;
                                g127 = v24 - 513;
                                if (v24 == 513) {
                                    // 0x40809c
                                    // branch -> 0x40809e
                                    // 0x40809e
                                    function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)NULL);
                                    // branch -> 0x4080b1
                                    // 0x4080b1
                                    g130 = 0;
                                    v1 = NULL;
                                    PostMessageA(hWnd, 0, 0, 0);
                                    // branch -> 0x408105
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                } else {
                                    // 0x408085
                                    v33 = v24 - 515;
                                    g127 = v33;
                                    if (v33 != 0) {
                                        // 0x408089
                                        v34 = v24 - 516;
                                        g127 = v34;
                                        if (v34 != 0) {
                                            // 0x40808c
                                            v35 = v24 - 518;
                                            g127 = v35;
                                            if (v35 == 0) {
                                                // 0x408090
                                                // branch -> 0x40809e
                                                // 0x40809e
                                                function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                                                // branch -> 0x4080b1
                                                // 0x4080b1
                                                g130 = 0;
                                                PostMessageA(hWnd, 0, 0, 0);
                                                // branch -> 0x408105
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                            // 0x4080b1
                                            g130 = 0;
                                            v1 = NULL;
                                            PostMessageA(hWnd, 0, 0, 0);
                                            // branch -> 0x408105
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                    }
                                }
                                // 0x40809e
                                function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                                // branch -> 0x4080b1
                                // 0x4080b1
                                g130 = 0;
                                v1 = NULL;
                                PostMessageA(hWnd, 0, 0, 0);
                                // branch -> 0x408105
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            } else {
                                // 0x408028
                                g124 = 275;
                                if (v21 == 275) {
                                    // 0x408064
                                    if (g131 != 0) {
                                        // 0x40806c
                                        *(int32_t *)(g130 + 12) = 0x3336;
                                        *(int32_t *)g130 = (int32_t)v8;
                                        // branch -> 0x408101
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                } else {
                                    // 0x408031
                                    if (v21 >= 276) {
                                        // 0x408037
                                        if (v21 < 278) {
                                            // 0x4080d5
                                            v1 = (struct struct_21 *)g127;
                                            // branch -> 0x4080e0
                                            // 0x4080e0
                                            function_407be3();
                                            // branch -> 0x408105
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        } else {
                                            // 0x408043
                                            if (v21 >= 307) {
                                                // 0x40804f
                                                if (v21 < 310 || v21 == 312) {
                                                    // 0x4080d5
                                                    v1 = (struct struct_21 *)g127;
                                                    // branch -> 0x4080e0
                                                    // 0x4080e0
                                                    function_407be3();
                                                    // branch -> 0x408105
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    } else {
                        // 0x407d22
                        if (v39 == (struct struct_21 *)273) {
                            // 0x407f95
                            g131 = (int32_t)v8;
                            function_407be3();
                            if (g124 == -0x2f2f2f2f) {
                                // 0x407fb2
                                v20 = g131;
                                g124 = v20 / 0x10000;
                                if (g127 == 0) {
                                    // 0x407fe5
                                    if (v20 >= 0x10000) {
                                        // 0x407fea
                                        v55 = v20 % 0x10000;
                                        switch (v20) {
                                            default: {
                                                // 0x408008
                                                *(int32_t *)g130 = v55;
                                                // branch -> 0x40800d
                                                // 0x40800d
                                                *(int32_t *)(g130 + 12) = 0x332d;
                                                // branch -> 0x408101
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                break;
                                            }
                                            case -1535: {
                                                // 0x407ff1
                                                // branch -> 0x407ff3
                                            }
                                            case -1534: {
                                                // 0x407ff3
                                                function_4073e0();
                                                // branch -> 0x408101
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                break;
                                            }
                                        }
                                    } else {
                                        v23 = v20;
                                    }
                                } else {
                                    // 0x407fbb
                                    *(int32_t *)(g130 + 12) = 0x332c;
                                    *(int32_t *)(g130 + 8) = g124;
                                    GetWindowLongA();
                                    v22 = g124;
                                    *(int32_t *)g130 = v22;
                                    if (v22 == -0x2710) {
                                        // 0x407fdb
                                        v29 = g131 % 0x10000;
                                        g131 = v29;
                                        v23 = v29;
                                        // branch -> 0x407fe1
                                        // 0x407fe1
                                        *(int32_t *)g130 = v23;
                                        // branch -> 0x40800d
                                        // 0x40800d
                                        *(int32_t *)(g130 + 12) = 0x332d;
                                        // branch -> 0x408101
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // 0x407fe1
                                *(int32_t *)g130 = v23;
                                // branch -> 0x40800d
                                // 0x40800d
                                *(int32_t *)(g130 + 12) = 0x332d;
                                // branch -> 0x408101
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        } else {
                            // 0x407d28
                            v28 = g125;
                            if (v28 > 20) {
                                // 0x407eca
                                v52 = v28 - 21;
                                if (v28 == 21) {
                                    // 0x407f6e
                                    if (g131 != 0) {
                                        // 0x407f76
                                        if (v14->e6 == 0) {
                                            // 0x407f80
                                            EnumChildWindows();
                                            // branch -> 0x408105
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                    }
                                } else {
                                    // 0x407ed3
                                    v53 = v28 - 36;
                                    if (v52 == 15) {
                                        // 0x407f09
                                        if (g131 != 0) {
                                            // 0x407f11
                                            v44 = v14->e8;
                                            v48 = v44;
                                            v13 = v48;
                                            if (v44 == 0) {
                                                // 0x407f22
                                                GetWindowLongA();
                                                if (v13 <= 0) {
                                                    // 0x407f31
                                                    *(int32_t *)(g127 + 24) = 1;
                                                    // branch -> 0x407f38
                                                }
                                            } else {
                                                // 0x407f1a
                                                *(int32_t *)(g127 + 24) = v48;
                                                // branch -> 0x407f38
                                            }
                                            // 0x407f38
                                            v45 = v14->e8;
                                            v49 = v45;
                                            if (v45 != 0) {
                                                // 0x407f41
                                                *(int32_t *)(g127 + 28) = v49;
                                                // branch -> 0x407f47
                                            }
                                            // 0x407f47
                                            v46 = v14->e9;
                                            v50 = v46;
                                            if (v46 != 0) {
                                                // 0x407f50
                                                *(int32_t *)(g127 + 32) = v50;
                                                // branch -> 0x407f56
                                            }
                                            // 0x407f56
                                            v47 = v14->e9;
                                            v51 = v47;
                                            if (v47 != 0) {
                                                // 0x407f63
                                                *(int32_t *)(g127 + 36) = v51;
                                                // branch -> 0x408101
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                    } else {
                                        // 0x407ed8
                                        v54 = v28 - 78;
                                        if (v53 == 42) {
                                            // 0x407ef9
                                            v4 = (struct struct_21 *)g127;
                                            v3 = v8;
                                            // branch -> 0x4080e0
                                            // 0x4080e0
                                            function_407be3();
                                            // branch -> 0x408105
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        } else {
                                            // 0x407edd
                                            if (v54 == 52) {
                                                // 0x407ee6
                                                v6 = (struct struct_21 *)"PB_Focus";
                                                v5 = (struct struct_21 *)hWnd;
                                                v4 = (struct struct_21 *)0x407ef4;
                                                RemovePropA();
                                                // branch -> 0x407dc8
                                                // 0x407dc8
                                                // branch -> 0x408105
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            } else {
                                // 0x407d31
                                if (v28 == 20) {
                                    // 0x407e6d
                                    v19 = g131;
                                    if (v19 != 0) {
                                        // 0x407e71
                                        if (v14->e5 == 0) {
                                            // 0x407e9d
                                            g124 = hWnd2;
                                            if (*(int32_t *)v19 == hWnd2) {
                                                // 0x407ea4
                                                v43 = v14->e7;
                                                v12 = v43;
                                                g131 = v12;
                                                if (v43 != 0) {
                                                    // 0x407eab
                                                    ((int32_t (*)(int32_t, int32_t))v12)((int32_t)v8, hWnd2);
                                                    // branch -> 0x407eb4
                                                    // 0x407eb4
                                                    v11 = (int32_t)lpRect;
                                                    function_408227(15, 0, v11, v11);
                                                    // branch -> 0x408105
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                            }
                                        } else {
                                            // 0x407e77
                                            GetClientRect(hWnd2, lpRect);
                                            FillRect((int32_t)v8, lpRect, (int32_t)lpRect);
                                            // branch -> 0x407eb4
                                            // 0x407eb4
                                            v11 = (int32_t)lpRect;
                                            function_408227(15, 0, v11, v11);
                                            // branch -> 0x408105
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // 0x407eb4
                                        v11 = (int32_t)lpRect;
                                        function_408227(15, 0, v11, v11);
                                        // branch -> 0x408105
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // 0x407eb4
                                    v6 = NULL;
                                    v5 = v15;
                                    v4 = NULL;
                                    v3 = (struct struct_21 *)15;
                                    v11 = (int32_t)lpRect;
                                    function_408227(15, 0, v11, v11);
                                    // branch -> 0x408105
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                } else {
                                    // 0x407d37
                                    if (v28 == 3) {
                                        // 0x407d50
                                        v17 = g131;
                                        if (v17 != 0) {
                                            // 0x407d58
                                            g124 = hWnd2;
                                            if (hWnd2 == *(int32_t *)v17) {
                                                // 0x407d63
                                                // branch -> 0x407e60
                                                // 0x407e60
                                                function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                // branch -> 0x408101
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    } else {
                                        // 0x407d3c
                                        if (v28 == 5) {
                                            // 0x407dd4
                                            if (v10 == (struct struct_21 *)hWnd) {
                                                // 0x407ddc
                                                if (g126 != -1) {
                                                    // 0x407de5
                                                    v42 = v8;
                                                    v41 = (int32_t)v42;
                                                    g124 = v41;
                                                    if (v42 == NULL) {
                                                        // 0x407e3d
                                                        g130 = 0;
                                                        if (v14->e10 != NULL) {
                                                            // 0x407e44
                                                            v14->e10 = NULL;
                                                            function_408227(0x3335, g130, (int32_t)v15, (int32_t)NULL);
                                                            v59 = (struct struct_21 *)g130;
                                                            // branch -> 0x407e59
                                                        } else {
                                                            v59 = NULL;
                                                        }
                                                        // 0x407e59
                                                        v6 = v59;
                                                        v5 = v15;
                                                        v4 = v59;
                                                        // branch -> 0x407e5e
                                                        // 0x407e5e
                                                        v3 = (struct struct_21 *)5;
                                                        // branch -> 0x407e60
                                                        // 0x407e60
                                                        function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                        // branch -> 0x408101
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    } else {
                                                        // 0x407ded
                                                        v31 = v41 - 1;
                                                        g124 = v31;
                                                        if (v31 == 0) {
                                                            // 0x407e28
                                                            v14->e10 = (int32_t *)1;
                                                            // branch -> 0x407e60
                                                            // 0x407e60
                                                            function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                            // branch -> 0x408101
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        } else {
                                                            // 0x407df0
                                                            v32 = v41 - 2;
                                                            g124 = v32;
                                                            if (v32 == 0) {
                                                                // 0x407dfc
                                                                g130 = 0;
                                                                v14->e10 = (int32_t *)1;
                                                                function_408227(0x3334, g130, (int32_t)v15, (int32_t)NULL);
                                                                v18 = g130;
                                                                v57 = (struct struct_21 *)v18;
                                                                v6 = v57;
                                                                v62 = v15;
                                                                v5 = v62;
                                                                v4 = v57;
                                                                v3 = (struct struct_21 *)5;
                                                                function_408227(5, v18, (int32_t)v62, v18);
                                                                // branch -> 0x408101
                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                            } else {
                                                                // 0x407df3
                                                                // branch -> 0x407e5e
                                                                // 0x407e5e
                                                                v3 = (struct struct_21 *)5;
                                                                // branch -> 0x407e60
                                                                // 0x407e60
                                                                function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                                // branch -> 0x408101
                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                            }
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        }
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                    // 0x407e60
                                                    function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                    // branch -> 0x408101
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        } else {
                                            // 0x407d44
                                            v30 = v28 - 6;
                                            if (v30 == 0) {
                                                // 0x407d73
                                                if ((int32_t)v8 % 0x10000 == 0) {
                                                    // 0x407da9
                                                    GetFocus();
                                                    SetPropA();
                                                    function_4074e8(hWnd, NULL);
                                                    // branch -> 0x407dc8
                                                    // 0x407dc8
                                                    // branch -> 0x408105
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                } else {
                                                    // 0x407d7a
                                                    GetPropA();
                                                    if (g124 != 0) {
                                                        // 0x407d8c
                                                        SetFocus();
                                                        // branch -> 0x407d93
                                                    }
                                                    // 0x407d93
                                                    function_408227(0x3330, 0, (int32_t)v15, 0);
                                                    // branch -> 0x407dc8
                                                    // 0x407dc8
                                                    // branch -> 0x408105
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                                // 0x407dc8
                                                // branch -> 0x408105
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            } else {
                                                // 0x407d47
                                                if (v30 == 10) {
                                                    // 0x407d50
                                                    v17 = g131;
                                                    if (v17 != 0) {
                                                        // 0x407d58
                                                        g124 = hWnd2;
                                                        if (hWnd2 == *(int32_t *)v17) {
                                                            // 0x407d63
                                                            // branch -> 0x407e60
                                                            // 0x407e60
                                                            function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                            // branch -> 0x408101
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        }
                                                    }
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                } else {
                    v16 = v60;
                }
            }
            // 0x407cbd
            v60 = (int32_t)v61;
            if (v60 != g131) {
                // 0x407cc2
                v63 = (int32_t)v15 - 1;
                v15 = (struct struct_21 *)v63;
                v58 = function_409bf5((int32_t)*(char *)g112, v63);
                g131 = v58;
                v25 = v58;
                v14 = (struct struct_20 *)v58;
                // branch -> 0x407cdb
                // 0x407cdb
                if (v25 != 0) {
                    // 0x407cdf
                    v37 = *(int32_t *)(v25 + 12);
                    g124 = v37;
                    if (v37 != 0) {
                        // 0x407ce6
                        ((int32_t (*)(int32_t, int32_t, int32_t, int32_t))v37)(hWnd2, (int32_t)v7, (int32_t)v8, g127);
                        if (g124 == -0x1f1f1f1f) {
                            // 0x407ce6
                            // branch -> 0x407d05
                            // 0x407d05
                            v39 = v7;
                            g125 = (int32_t)v39;
                            v40 = (int32_t)v15;
                            g126 = v40;
                            g124 = 273;
                            *(int32_t *)(g130 + 4) = v40;
                            if (v39 > (struct struct_21 *)273) {
                                // 0x408019
                                g124 = 0x30d5;
                                v21 = g125;
                                if (v21 > 0x30d5) {
                                    // 0x4080c4
                                    g124 = 0x3331;
                                    if (v21 == 0x3331) {
                                        // 0x4080fb
                                        *(int32_t *)(g130 + 12) = 0x3331;
                                        // branch -> 0x4080fe
                                    } else {
                                        // 0x4080cd
                                        v36 = v21 - 0x3332;
                                        if (v36 == 0) {
                                            // 0x4080ed
                                            *(int32_t *)(g130 + 12) = 0x3332;
                                            *(int32_t *)g130 = (int32_t)v8;
                                            // branch -> 0x4080fe
                                            // 0x4080fe
                                            *(int32_t *)(g130 + 68) = g127;
                                            // branch -> 0x408101
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        } else {
                                            // 0x4080d0
                                            if (v36 == 14) {
                                                // 0x4080d5
                                                v1 = (struct struct_21 *)g127;
                                                // branch -> 0x4080e0
                                                // 0x4080e0
                                                function_407be3();
                                                // branch -> 0x408105
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // 0x4080fe
                                    *(int32_t *)(g130 + 68) = g127;
                                    // branch -> 0x408101
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                } else {
                                    // 0x408026
                                    if (v21 == 0x30d5) {
                                        // 0x40807d
                                        v24 = g127;
                                        g127 = v24 - 513;
                                        if (v24 == 513) {
                                            // 0x40809c
                                            v1 = NULL;
                                            // branch -> 0x40809e
                                        } else {
                                            // 0x408085
                                            v33 = v24 - 515;
                                            g127 = v33;
                                            if (v33 != 0) {
                                                // 0x408089
                                                v34 = v24 - 516;
                                                g127 = v34;
                                                if (v34 != 0) {
                                                    // 0x40808c
                                                    v35 = v24 - 518;
                                                    g127 = v35;
                                                    if (v35 == 0) {
                                                        // 0x408090
                                                        // branch -> 0x40809e
                                                        // 0x40809e
                                                        function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                                                        // branch -> 0x4080b1
                                                    }
                                                    // 0x4080b1
                                                    g130 = 0;
                                                    v1 = NULL;
                                                    PostMessageA(hWnd, 0, 0, 0);
                                                    // branch -> 0x408105
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                            }
                                        }
                                        // 0x40809e
                                        function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                                        // branch -> 0x4080b1
                                        // 0x4080b1
                                        g130 = 0;
                                        v1 = NULL;
                                        PostMessageA(hWnd, 0, 0, 0);
                                        // branch -> 0x408105
                                    } else {
                                        // 0x408028
                                        g124 = 275;
                                        if (v21 == 275) {
                                            // 0x408064
                                            if (g131 != 0) {
                                                // 0x40806c
                                                *(int32_t *)(g130 + 12) = 0x3336;
                                                *(int32_t *)g130 = (int32_t)v8;
                                                // branch -> 0x408101
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        } else {
                                            // 0x408031
                                            if (v21 >= 276) {
                                                // 0x408037
                                                if (v21 < 278) {
                                                    // 0x4080d5
                                                    v1 = (struct struct_21 *)g127;
                                                    // branch -> 0x4080e0
                                                    // 0x4080e0
                                                    function_407be3();
                                                    // branch -> 0x408105
                                                } else {
                                                    // 0x408043
                                                    if (v21 >= 307) {
                                                        // 0x40804f
                                                        if (v21 < 310 || v21 == 312) {
                                                            // 0x4080d5
                                                            v1 = (struct struct_21 *)g127;
                                                            // branch -> 0x4080e0
                                                            // 0x4080e0
                                                            function_407be3();
                                                            // branch -> 0x408105
                                                        }
                                                    }
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            } else {
                                // 0x407d22
                                if (v39 == (struct struct_21 *)273) {
                                    // 0x407f95
                                    g131 = (int32_t)v8;
                                    function_407be3();
                                    if (g124 == -0x2f2f2f2f) {
                                        // 0x407fb2
                                        v20 = g131;
                                        g124 = v20 / 0x10000;
                                        if (g127 == 0) {
                                            // 0x407fe5
                                            if (v20 >= 0x10000) {
                                                // 0x407fea
                                                v55 = v20 % 0x10000;
                                                switch (v20) {
                                                    default: {
                                                        // 0x408008
                                                        *(int32_t *)g130 = v55;
                                                        // branch -> 0x40800d
                                                        // 0x40800d
                                                        *(int32_t *)(g130 + 12) = 0x332d;
                                                        // branch -> 0x408101
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                        break;
                                                    }
                                                    case -1535: {
                                                        // 0x407ff1
                                                        // branch -> 0x407ff3
                                                    }
                                                    case -1534: {
                                                        // 0x407ff3
                                                        function_4073e0();
                                                        // branch -> 0x408101
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                        break;
                                                    }
                                                }
                                            } else {
                                                v23 = v20;
                                            }
                                        } else {
                                            // 0x407fbb
                                            *(int32_t *)(g130 + 12) = 0x332c;
                                            *(int32_t *)(g130 + 8) = g124;
                                            GetWindowLongA();
                                            v22 = g124;
                                            *(int32_t *)g130 = v22;
                                            if (v22 == -0x2710) {
                                                // 0x407fdb
                                                v29 = g131 % 0x10000;
                                                g131 = v29;
                                                v23 = v29;
                                                // branch -> 0x407fe1
                                                // 0x407fe1
                                                *(int32_t *)g130 = v23;
                                                // branch -> 0x40800d
                                                // 0x40800d
                                                *(int32_t *)(g130 + 12) = 0x332d;
                                                // branch -> 0x408101
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // 0x407fe1
                                        *(int32_t *)g130 = v23;
                                        // branch -> 0x40800d
                                        // 0x40800d
                                        *(int32_t *)(g130 + 12) = 0x332d;
                                        // branch -> 0x408101
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                } else {
                                    // 0x407d28
                                    v28 = g125;
                                    if (v28 > 20) {
                                        // 0x407eca
                                        v52 = v28 - 21;
                                        if (v28 == 21) {
                                            // 0x407f6e
                                            if (g131 != 0) {
                                                // 0x407f76
                                                if (v14->e6 == 0) {
                                                    // 0x407f80
                                                    EnumChildWindows();
                                                    // branch -> 0x408105
                                                }
                                            }
                                        } else {
                                            // 0x407ed3
                                            v53 = v28 - 36;
                                            if (v52 == 15) {
                                                // 0x407f09
                                                if (g131 != 0) {
                                                    // 0x407f11
                                                    v44 = v14->e8;
                                                    v48 = v44;
                                                    v13 = v48;
                                                    if (v44 == 0) {
                                                        // 0x407f22
                                                        GetWindowLongA();
                                                        if (v13 <= 0) {
                                                            // 0x407f31
                                                            *(int32_t *)(g127 + 24) = 1;
                                                            // branch -> 0x407f38
                                                        }
                                                    } else {
                                                        // 0x407f1a
                                                        *(int32_t *)(g127 + 24) = v48;
                                                        // branch -> 0x407f38
                                                    }
                                                    // 0x407f38
                                                    v45 = v14->e8;
                                                    v49 = v45;
                                                    if (v45 != 0) {
                                                        // 0x407f41
                                                        *(int32_t *)(g127 + 28) = v49;
                                                        // branch -> 0x407f47
                                                    }
                                                    // 0x407f47
                                                    v46 = v14->e9;
                                                    v50 = v46;
                                                    if (v46 != 0) {
                                                        // 0x407f50
                                                        *(int32_t *)(g127 + 32) = v50;
                                                        // branch -> 0x407f56
                                                    }
                                                    // 0x407f56
                                                    v47 = v14->e9;
                                                    v51 = v47;
                                                    if (v47 != 0) {
                                                        // 0x407f63
                                                        *(int32_t *)(g127 + 36) = v51;
                                                        // branch -> 0x408101
                                                    }
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                            } else {
                                                // 0x407ed8
                                                v54 = v28 - 78;
                                                if (v53 == 42) {
                                                    // 0x407ef9
                                                    v4 = (struct struct_21 *)g127;
                                                    v3 = v8;
                                                    // branch -> 0x4080e0
                                                    // 0x4080e0
                                                    function_407be3();
                                                    // branch -> 0x408105
                                                } else {
                                                    // 0x407edd
                                                    if (v54 == 52) {
                                                        // 0x407ee6
                                                        v6 = (struct struct_21 *)"PB_Focus";
                                                        v5 = (struct struct_21 *)hWnd;
                                                        v4 = (struct struct_21 *)0x407ef4;
                                                        RemovePropA();
                                                        // branch -> 0x407dc8
                                                        // 0x407dc8
                                                        // branch -> 0x408105
                                                    }
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    } else {
                                        // 0x407d31
                                        if (v28 == 20) {
                                            // 0x407e6d
                                            v19 = g131;
                                            if (v19 != 0) {
                                                // 0x407e71
                                                if (v14->e5 == 0) {
                                                    // 0x407e9d
                                                    g124 = hWnd2;
                                                    if (*(int32_t *)v19 == hWnd2) {
                                                        // 0x407ea4
                                                        v43 = v14->e7;
                                                        v12 = v43;
                                                        g131 = v12;
                                                        if (v43 != 0) {
                                                            // 0x407eab
                                                            ((int32_t (*)(int32_t, int32_t))v12)((int32_t)v8, hWnd2);
                                                            // branch -> 0x407eb4
                                                        }
                                                    }
                                                } else {
                                                    // 0x407e77
                                                    GetClientRect(hWnd2, lpRect);
                                                    FillRect((int32_t)v8, lpRect, (int32_t)lpRect);
                                                    // branch -> 0x407eb4
                                                }
                                                // 0x407eb4
                                                v11 = (int32_t)lpRect;
                                                function_408227(15, 0, v11, v11);
                                                // branch -> 0x408105
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                            // 0x407eb4
                                            v6 = NULL;
                                            v5 = v15;
                                            v4 = NULL;
                                            v3 = (struct struct_21 *)15;
                                            v11 = (int32_t)lpRect;
                                            function_408227(15, 0, v11, v11);
                                            // branch -> 0x408105
                                        } else {
                                            // 0x407d37
                                            if (v28 == 3) {
                                                // 0x407d50
                                                v17 = g131;
                                                if (v17 != 0) {
                                                    // 0x407d58
                                                    g124 = hWnd2;
                                                    if (hWnd2 == *(int32_t *)v17) {
                                                        // 0x407d63
                                                        // branch -> 0x407e60
                                                        // 0x407e60
                                                        function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                        // branch -> 0x408101
                                                    }
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            } else {
                                                // 0x407d3c
                                                if (v28 == 5) {
                                                    // 0x407dd4
                                                    if (v10 == (struct struct_21 *)hWnd) {
                                                        // 0x407ddc
                                                        if (g126 != -1) {
                                                            // 0x407de5
                                                            v42 = v8;
                                                            v41 = (int32_t)v42;
                                                            g124 = v41;
                                                            if (v42 == NULL) {
                                                                // 0x407e3d
                                                                g130 = 0;
                                                                if (v14->e10 != NULL) {
                                                                    // 0x407e44
                                                                    v14->e10 = NULL;
                                                                    function_408227(0x3335, g130, (int32_t)v15, (int32_t)NULL);
                                                                    v59 = (struct struct_21 *)g130;
                                                                    // branch -> 0x407e59
                                                                } else {
                                                                    v59 = NULL;
                                                                }
                                                                // 0x407e59
                                                                v6 = v59;
                                                                v5 = v15;
                                                                v4 = v59;
                                                                // branch -> 0x407e5e
                                                                // 0x407e5e
                                                                v3 = (struct struct_21 *)5;
                                                                // branch -> 0x407e60
                                                            } else {
                                                                // 0x407ded
                                                                v31 = v41 - 1;
                                                                g124 = v31;
                                                                if (v31 == 0) {
                                                                    // 0x407e28
                                                                    v14->e10 = (int32_t *)1;
                                                                    // branch -> 0x407e60
                                                                    // 0x407e60
                                                                    function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                                    // branch -> 0x408101
                                                                } else {
                                                                    // 0x407df0
                                                                    v32 = v41 - 2;
                                                                    g124 = v32;
                                                                    if (v32 == 0) {
                                                                        // 0x407dfc
                                                                        g130 = 0;
                                                                        v14->e10 = (int32_t *)1;
                                                                        function_408227(0x3334, g130, (int32_t)v15, (int32_t)NULL);
                                                                        v18 = g130;
                                                                        v57 = (struct struct_21 *)v18;
                                                                        v6 = v57;
                                                                        v62 = v15;
                                                                        v5 = v62;
                                                                        v4 = v57;
                                                                        v3 = (struct struct_21 *)5;
                                                                        function_408227(5, v18, (int32_t)v62, v18);
                                                                        // branch -> 0x408101
                                                                    } else {
                                                                        // 0x407df3
                                                                        // branch -> 0x407e5e
                                                                        // 0x407e5e
                                                                        v3 = (struct struct_21 *)5;
                                                                        // branch -> 0x407e60
                                                                        // 0x407e60
                                                                        function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                                        // branch -> 0x408101
                                                                    }
                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                }
                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                            }
                                                            // 0x407e60
                                                            function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                            // branch -> 0x408101
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        }
                                                    }
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                } else {
                                                    // 0x407d44
                                                    v30 = v28 - 6;
                                                    if (v30 == 0) {
                                                        // 0x407d73
                                                        if ((int32_t)v8 % 0x10000 == 0) {
                                                            // 0x407da9
                                                            GetFocus();
                                                            SetPropA();
                                                            function_4074e8(hWnd, NULL);
                                                            // branch -> 0x407dc8
                                                        } else {
                                                            // 0x407d7a
                                                            GetPropA();
                                                            if (g124 != 0) {
                                                                // 0x407d8c
                                                                SetFocus();
                                                                // branch -> 0x407d93
                                                            }
                                                            // 0x407d93
                                                            function_408227(0x3330, 0, (int32_t)v15, 0);
                                                            // branch -> 0x407dc8
                                                        }
                                                        // 0x407dc8
                                                        // branch -> 0x408105
                                                    } else {
                                                        // 0x407d47
                                                        if (v30 == 10) {
                                                            // 0x407d50
                                                            v17 = g131;
                                                            if (v17 != 0) {
                                                                // 0x407d58
                                                                g124 = hWnd2;
                                                                if (hWnd2 == *(int32_t *)v17) {
                                                                    // 0x407d63
                                                                    // branch -> 0x407e60
                                                                    // 0x407e60
                                                                    function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                                    // branch -> 0x408101
                                                                }
                                                            }
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        }
                                                    }
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                }
                // 0x407cfe
                v26 = g130;
                v38 = *(int32_t *)(v26 + 64);
                g124 = v38;
                v27 = v26;
                if (v38 != 0) {
                    // 0x407ce6
                    ((int32_t (*)(int32_t, int32_t, int32_t, int32_t))v38)(hWnd2, (int32_t)v7, (int32_t)v8, g127);
                    if (g124 == -0x1f1f1f1f) {
                        // 0x407ce6
                        v27 = g130;
                        // branch -> 0x407d05
                        // 0x407d05
                        v39 = v7;
                        g125 = (int32_t)v39;
                        v40 = (int32_t)v15;
                        g126 = v40;
                        g124 = 273;
                        *(int32_t *)(v27 + 4) = v40;
                        if (v39 > (struct struct_21 *)273) {
                            // 0x408019
                            g124 = 0x30d5;
                            v21 = g125;
                            if (v21 > 0x30d5) {
                                // 0x4080c4
                                g124 = 0x3331;
                                if (v21 == 0x3331) {
                                    // 0x4080fb
                                    *(int32_t *)(g130 + 12) = 0x3331;
                                    // branch -> 0x4080fe
                                } else {
                                    // 0x4080cd
                                    v36 = v21 - 0x3332;
                                    if (v36 == 0) {
                                        // 0x4080ed
                                        *(int32_t *)(g130 + 12) = 0x3332;
                                        *(int32_t *)g130 = (int32_t)v8;
                                        // branch -> 0x4080fe
                                        // 0x4080fe
                                        *(int32_t *)(g130 + 68) = g127;
                                        // branch -> 0x408101
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    } else {
                                        // 0x4080d0
                                        if (v36 == 14) {
                                            // 0x4080d5
                                            v1 = (struct struct_21 *)g127;
                                            // branch -> 0x4080e0
                                            // 0x4080e0
                                            function_407be3();
                                            // branch -> 0x408105
                                        }
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // 0x4080fe
                                *(int32_t *)(g130 + 68) = g127;
                                // branch -> 0x408101
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            } else {
                                // 0x408026
                                if (v21 == 0x30d5) {
                                    // 0x40807d
                                    v24 = g127;
                                    g127 = v24 - 513;
                                    if (v24 == 513) {
                                        // 0x40809c
                                        v1 = NULL;
                                        // branch -> 0x40809e
                                    } else {
                                        // 0x408085
                                        v33 = v24 - 515;
                                        g127 = v33;
                                        if (v33 != 0) {
                                            // 0x408089
                                            v34 = v24 - 516;
                                            g127 = v34;
                                            if (v34 != 0) {
                                                // 0x40808c
                                                v35 = v24 - 518;
                                                g127 = v35;
                                                if (v35 == 0) {
                                                    // 0x408090
                                                    // branch -> 0x40809e
                                                    // 0x40809e
                                                    function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                                                    // branch -> 0x4080b1
                                                }
                                                // 0x4080b1
                                                g130 = 0;
                                                v1 = NULL;
                                                PostMessageA(hWnd, 0, 0, 0);
                                                // branch -> 0x408105
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        }
                                    }
                                    // 0x40809e
                                    function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                                    // branch -> 0x4080b1
                                    // 0x4080b1
                                    g130 = 0;
                                    v1 = NULL;
                                    PostMessageA(hWnd, 0, 0, 0);
                                    // branch -> 0x408105
                                } else {
                                    // 0x408028
                                    g124 = 275;
                                    if (v21 == 275) {
                                        // 0x408064
                                        if (g131 != 0) {
                                            // 0x40806c
                                            *(int32_t *)(g130 + 12) = 0x3336;
                                            *(int32_t *)g130 = (int32_t)v8;
                                            // branch -> 0x408101
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                    } else {
                                        // 0x408031
                                        if (v21 >= 276) {
                                            // 0x408037
                                            if (v21 < 278) {
                                                // 0x4080d5
                                                v1 = (struct struct_21 *)g127;
                                                // branch -> 0x4080e0
                                                // 0x4080e0
                                                function_407be3();
                                                // branch -> 0x408105
                                            } else {
                                                // 0x408043
                                                if (v21 >= 307) {
                                                    // 0x40804f
                                                    if (v21 < 310 || v21 == 312) {
                                                        // 0x4080d5
                                                        v1 = (struct struct_21 *)g127;
                                                        // branch -> 0x4080e0
                                                        // 0x4080e0
                                                        function_407be3();
                                                        // branch -> 0x408105
                                                    }
                                                }
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        } else {
                            // 0x407d22
                            if (v39 == (struct struct_21 *)273) {
                                // 0x407f95
                                g131 = (int32_t)v8;
                                function_407be3();
                                if (g124 == -0x2f2f2f2f) {
                                    // 0x407fb2
                                    v20 = g131;
                                    g124 = v20 / 0x10000;
                                    if (g127 == 0) {
                                        // 0x407fe5
                                        if (v20 >= 0x10000) {
                                            // 0x407fea
                                            v55 = v20 % 0x10000;
                                            switch (v20) {
                                                default: {
                                                    // 0x408008
                                                    *(int32_t *)g130 = v55;
                                                    // branch -> 0x40800d
                                                    // 0x40800d
                                                    *(int32_t *)(g130 + 12) = 0x332d;
                                                    // branch -> 0x408101
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                    break;
                                                }
                                                case -1535: {
                                                    // 0x407ff1
                                                    // branch -> 0x407ff3
                                                }
                                                case -1534: {
                                                    // 0x407ff3
                                                    function_4073e0();
                                                    // branch -> 0x408101
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                    break;
                                                }
                                            }
                                        } else {
                                            v23 = v20;
                                        }
                                    } else {
                                        // 0x407fbb
                                        *(int32_t *)(g130 + 12) = 0x332c;
                                        *(int32_t *)(g130 + 8) = g124;
                                        GetWindowLongA();
                                        v22 = g124;
                                        *(int32_t *)g130 = v22;
                                        if (v22 == -0x2710) {
                                            // 0x407fdb
                                            v29 = g131 % 0x10000;
                                            g131 = v29;
                                            v23 = v29;
                                            // branch -> 0x407fe1
                                            // 0x407fe1
                                            *(int32_t *)g130 = v23;
                                            // branch -> 0x40800d
                                            // 0x40800d
                                            *(int32_t *)(g130 + 12) = 0x332d;
                                            // branch -> 0x408101
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // 0x407fe1
                                    *(int32_t *)g130 = v23;
                                    // branch -> 0x40800d
                                    // 0x40800d
                                    *(int32_t *)(g130 + 12) = 0x332d;
                                    // branch -> 0x408101
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            } else {
                                // 0x407d28
                                v28 = g125;
                                if (v28 > 20) {
                                    // 0x407eca
                                    v52 = v28 - 21;
                                    if (v28 == 21) {
                                        // 0x407f6e
                                        if (g131 != 0) {
                                            // 0x407f76
                                            if (v14->e6 == 0) {
                                                // 0x407f80
                                                EnumChildWindows();
                                                // branch -> 0x408105
                                            }
                                        }
                                    } else {
                                        // 0x407ed3
                                        v53 = v28 - 36;
                                        if (v52 == 15) {
                                            // 0x407f09
                                            if (g131 != 0) {
                                                // 0x407f11
                                                v44 = v14->e8;
                                                v48 = v44;
                                                v13 = v48;
                                                if (v44 == 0) {
                                                    // 0x407f22
                                                    GetWindowLongA();
                                                    if (v13 <= 0) {
                                                        // 0x407f31
                                                        *(int32_t *)(g127 + 24) = 1;
                                                        // branch -> 0x407f38
                                                    }
                                                } else {
                                                    // 0x407f1a
                                                    *(int32_t *)(g127 + 24) = v48;
                                                    // branch -> 0x407f38
                                                }
                                                // 0x407f38
                                                v45 = v14->e8;
                                                v49 = v45;
                                                if (v45 != 0) {
                                                    // 0x407f41
                                                    *(int32_t *)(g127 + 28) = v49;
                                                    // branch -> 0x407f47
                                                }
                                                // 0x407f47
                                                v46 = v14->e9;
                                                v50 = v46;
                                                if (v46 != 0) {
                                                    // 0x407f50
                                                    *(int32_t *)(g127 + 32) = v50;
                                                    // branch -> 0x407f56
                                                }
                                                // 0x407f56
                                                v47 = v14->e9;
                                                v51 = v47;
                                                if (v47 != 0) {
                                                    // 0x407f63
                                                    *(int32_t *)(g127 + 36) = v51;
                                                    // branch -> 0x408101
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        } else {
                                            // 0x407ed8
                                            v54 = v28 - 78;
                                            if (v53 == 42) {
                                                // 0x407ef9
                                                // branch -> 0x4080e0
                                                // 0x4080e0
                                                function_407be3();
                                                // branch -> 0x408105
                                            } else {
                                                // 0x407edd
                                                if (v54 == 52) {
                                                    // 0x407ee6
                                                    RemovePropA();
                                                    // branch -> 0x407dc8
                                                    // 0x407dc8
                                                    // branch -> 0x408105
                                                }
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                } else {
                                    // 0x407d31
                                    if (v28 == 20) {
                                        // 0x407e6d
                                        v19 = g131;
                                        if (v19 != 0) {
                                            // 0x407e71
                                            if (v14->e5 == 0) {
                                                // 0x407e9d
                                                g124 = hWnd2;
                                                if (*(int32_t *)v19 == hWnd2) {
                                                    // 0x407ea4
                                                    v43 = v14->e7;
                                                    v12 = v43;
                                                    g131 = v12;
                                                    if (v43 != 0) {
                                                        // 0x407eab
                                                        ((int32_t (*)(int32_t, int32_t))v12)((int32_t)v8, hWnd2);
                                                        // branch -> 0x407eb4
                                                    }
                                                }
                                            } else {
                                                // 0x407e77
                                                GetClientRect(hWnd2, lpRect);
                                                FillRect((int32_t)v8, lpRect, (int32_t)lpRect);
                                                // branch -> 0x407eb4
                                            }
                                            // 0x407eb4
                                            v11 = (int32_t)lpRect;
                                            function_408227(15, 0, v11, v11);
                                            // branch -> 0x408105
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // 0x407eb4
                                        v11 = (int32_t)lpRect;
                                        function_408227(15, 0, v11, v11);
                                        // branch -> 0x408105
                                    } else {
                                        // 0x407d37
                                        if (v28 == 3) {
                                            // 0x407d50
                                            v17 = g131;
                                            if (v17 != 0) {
                                                // 0x407d58
                                                g124 = hWnd2;
                                                if (hWnd2 == *(int32_t *)v17) {
                                                    // 0x407d63
                                                    // branch -> 0x407e60
                                                    // 0x407e60
                                                    function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                    // branch -> 0x408101
                                                }
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        } else {
                                            // 0x407d3c
                                            if (v28 == 5) {
                                                // 0x407dd4
                                                if (v10 == (struct struct_21 *)hWnd) {
                                                    // 0x407ddc
                                                    if (g126 != -1) {
                                                        // 0x407de5
                                                        v42 = v8;
                                                        v41 = (int32_t)v42;
                                                        g124 = v41;
                                                        if (v42 == NULL) {
                                                            // 0x407e3d
                                                            g130 = 0;
                                                            if (v14->e10 != NULL) {
                                                                // 0x407e44
                                                                v14->e10 = NULL;
                                                                function_408227(0x3335, g130, (int32_t)v15, (int32_t)NULL);
                                                                // branch -> 0x407e59
                                                            }
                                                            // 0x407e59
                                                            // branch -> 0x407e5e
                                                            // 0x407e5e
                                                            // branch -> 0x407e60
                                                        } else {
                                                            // 0x407ded
                                                            v31 = v41 - 1;
                                                            g124 = v31;
                                                            if (v31 == 0) {
                                                                // 0x407e28
                                                                v14->e10 = (int32_t *)1;
                                                                // branch -> 0x407e60
                                                                // 0x407e60
                                                                function_408227((int32_t)v3, (int32_t)v4, (int32_t)v5, (int32_t)v6);
                                                                // branch -> 0x408101
                                                            } else {
                                                                // 0x407df0
                                                                v32 = v41 - 2;
                                                                g124 = v32;
                                                                if (v32 == 0) {
                                                                    // 0x407dfc
                                                                    g130 = 0;
                                                                    v14->e10 = (int32_t *)1;
                                                                    function_408227(0x3334, g130, (int32_t)v15, (int32_t)NULL);
                                                                    v18 = g130;
                                                                    function_408227(5, v18, (int32_t)v15, v18);
                                                                    // branch -> 0x408101
                                                                }
                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                            }
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        }
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            } else {
                                                // 0x407d44
                                                v30 = v28 - 6;
                                                if (v30 == 0) {
                                                    // 0x407d73
                                                    if ((int32_t)v8 % 0x10000 == 0) {
                                                        // 0x407da9
                                                        GetFocus();
                                                        SetPropA();
                                                        function_4074e8(hWnd, NULL);
                                                        // branch -> 0x407dc8
                                                    } else {
                                                        // 0x407d7a
                                                        GetPropA();
                                                        if (g124 != 0) {
                                                            // 0x407d8c
                                                            SetFocus();
                                                            // branch -> 0x407d93
                                                        }
                                                        // 0x407d93
                                                        function_408227(0x3330, 0, (int32_t)v15, 0);
                                                        // branch -> 0x407dc8
                                                    }
                                                    // 0x407dc8
                                                    // branch -> 0x408105
                                                } else {
                                                    // 0x407d47
                                                    if (v30 == 10) {
                                                        // 0x407d50
                                                        v17 = g131;
                                                        if (v17 != 0) {
                                                            // 0x407d58
                                                            g124 = hWnd2;
                                                            if (hWnd2 == *(int32_t *)v17) {
                                                                // 0x407d63
                                                                // branch -> 0x407e60
                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                            }
                                                        }
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // 0x407d05
                v39 = v7;
                g125 = (int32_t)v39;
                v40 = (int32_t)v15;
                g126 = v40;
                g124 = 273;
                *(int32_t *)(v27 + 4) = v40;
                if (v39 > (struct struct_21 *)273) {
                    // 0x408019
                    g124 = 0x30d5;
                    v21 = g125;
                    if (v21 > 0x30d5) {
                        // 0x4080c4
                        g124 = 0x3331;
                        if (v21 == 0x3331) {
                            // 0x4080fb
                            *(int32_t *)(g130 + 12) = 0x3331;
                            // branch -> 0x4080fe
                        } else {
                            // 0x4080cd
                            v36 = v21 - 0x3332;
                            if (v36 == 0) {
                                // 0x4080ed
                                *(int32_t *)(g130 + 12) = 0x3332;
                                *(int32_t *)g130 = (int32_t)v8;
                                // branch -> 0x4080fe
                                // 0x4080fe
                                *(int32_t *)(g130 + 68) = g127;
                                // branch -> 0x408101
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            } else {
                                // 0x4080d0
                                if (v36 == 14) {
                                    // 0x4080d5
                                    v1 = (struct struct_21 *)g127;
                                    // branch -> 0x4080e0
                                    // 0x4080e0
                                    function_407be3();
                                    // branch -> 0x408105
                                }
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // 0x4080fe
                        *(int32_t *)(g130 + 68) = g127;
                        // branch -> 0x408101
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    } else {
                        // 0x408026
                        if (v21 == 0x30d5) {
                            // 0x40807d
                            v24 = g127;
                            g127 = v24 - 513;
                            if (v24 == 513) {
                                // 0x40809c
                                v1 = NULL;
                                // branch -> 0x40809e
                            } else {
                                // 0x408085
                                v33 = v24 - 515;
                                g127 = v33;
                                if (v33 != 0) {
                                    // 0x408089
                                    v34 = v24 - 516;
                                    g127 = v34;
                                    if (v34 != 0) {
                                        // 0x40808c
                                        v35 = v24 - 518;
                                        g127 = v35;
                                        if (v35 == 0) {
                                            // 0x408090
                                            // branch -> 0x40809e
                                            // 0x40809e
                                            function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                                            // branch -> 0x4080b1
                                        }
                                        // 0x4080b1
                                        g130 = 0;
                                        v1 = NULL;
                                        PostMessageA(hWnd, 0, 0, 0);
                                        // branch -> 0x408105
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                }
                            }
                            // 0x40809e
                            function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                            // branch -> 0x4080b1
                            // 0x4080b1
                            g130 = 0;
                            v1 = NULL;
                            PostMessageA(hWnd, 0, 0, 0);
                            // branch -> 0x408105
                        } else {
                            // 0x408028
                            g124 = 275;
                            if (v21 == 275) {
                                // 0x408064
                                if (g131 != 0) {
                                    // 0x40806c
                                    *(int32_t *)(g130 + 12) = 0x3336;
                                    *(int32_t *)g130 = (int32_t)v8;
                                    // branch -> 0x408101
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                            } else {
                                // 0x408031
                                if (v21 >= 276) {
                                    // 0x408037
                                    if (v21 < 278) {
                                        // 0x4080d5
                                        v1 = (struct struct_21 *)g127;
                                        // branch -> 0x4080e0
                                        // 0x4080e0
                                        function_407be3();
                                        // branch -> 0x408105
                                    } else {
                                        // 0x408043
                                        if (v21 >= 307) {
                                            // 0x40804f
                                            if (v21 < 310 || v21 == 312) {
                                                // 0x4080d5
                                                v1 = (struct struct_21 *)g127;
                                                // branch -> 0x4080e0
                                                // 0x4080e0
                                                function_407be3();
                                                // branch -> 0x408105
                                            }
                                        }
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                } else {
                    // 0x407d22
                    if (v39 == (struct struct_21 *)273) {
                        // 0x407f95
                        g131 = (int32_t)v8;
                        function_407be3();
                        if (g124 == -0x2f2f2f2f) {
                            // 0x407fb2
                            v20 = g131;
                            g124 = v20 / 0x10000;
                            if (g127 == 0) {
                                // 0x407fe5
                                if (v20 >= 0x10000) {
                                    // 0x407fea
                                    v55 = v20 % 0x10000;
                                    switch (v20) {
                                        default: {
                                            // 0x408008
                                            *(int32_t *)g130 = v55;
                                            // branch -> 0x40800d
                                            // 0x40800d
                                            *(int32_t *)(g130 + 12) = 0x332d;
                                            // branch -> 0x408101
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                            break;
                                        }
                                        case -1535: {
                                            // 0x407ff1
                                            // branch -> 0x407ff3
                                        }
                                        case -1534: {
                                            // 0x407ff3
                                            function_4073e0();
                                            // branch -> 0x408101
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                            break;
                                        }
                                    }
                                } else {
                                    v23 = v20;
                                }
                            } else {
                                // 0x407fbb
                                *(int32_t *)(g130 + 12) = 0x332c;
                                *(int32_t *)(g130 + 8) = g124;
                                GetWindowLongA();
                                v22 = g124;
                                *(int32_t *)g130 = v22;
                                if (v22 == -0x2710) {
                                    // 0x407fdb
                                    v29 = g131 % 0x10000;
                                    g131 = v29;
                                    v23 = v29;
                                    // branch -> 0x407fe1
                                    // 0x407fe1
                                    *(int32_t *)g130 = v23;
                                    // branch -> 0x40800d
                                    // 0x40800d
                                    *(int32_t *)(g130 + 12) = 0x332d;
                                    // branch -> 0x408101
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // 0x407fe1
                            *(int32_t *)g130 = v23;
                            // branch -> 0x40800d
                            // 0x40800d
                            *(int32_t *)(g130 + 12) = 0x332d;
                            // branch -> 0x408101
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    } else {
                        // 0x407d28
                        v28 = g125;
                        if (v28 > 20) {
                            // 0x407eca
                            v52 = v28 - 21;
                            if (v28 == 21) {
                                // 0x407f6e
                                if (g131 != 0) {
                                    // 0x407f76
                                    if (v14->e6 == 0) {
                                        // 0x407f80
                                        EnumChildWindows();
                                        // branch -> 0x408105
                                    }
                                }
                            } else {
                                // 0x407ed3
                                v53 = v28 - 36;
                                if (v52 == 15) {
                                    // 0x407f09
                                    if (g131 != 0) {
                                        // 0x407f11
                                        v44 = v14->e8;
                                        v48 = v44;
                                        v13 = v48;
                                        if (v44 == 0) {
                                            // 0x407f22
                                            GetWindowLongA();
                                            if (v13 <= 0) {
                                                // 0x407f31
                                                *(int32_t *)(g127 + 24) = 1;
                                                // branch -> 0x407f38
                                            }
                                        } else {
                                            // 0x407f1a
                                            *(int32_t *)(g127 + 24) = v48;
                                            // branch -> 0x407f38
                                        }
                                        // 0x407f38
                                        v45 = v14->e8;
                                        v49 = v45;
                                        if (v45 != 0) {
                                            // 0x407f41
                                            *(int32_t *)(g127 + 28) = v49;
                                            // branch -> 0x407f47
                                        }
                                        // 0x407f47
                                        v46 = v14->e9;
                                        v50 = v46;
                                        if (v46 != 0) {
                                            // 0x407f50
                                            *(int32_t *)(g127 + 32) = v50;
                                            // branch -> 0x407f56
                                        }
                                        // 0x407f56
                                        v47 = v14->e9;
                                        v51 = v47;
                                        if (v47 != 0) {
                                            // 0x407f63
                                            *(int32_t *)(g127 + 36) = v51;
                                            // branch -> 0x408101
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                } else {
                                    // 0x407ed8
                                    v54 = v28 - 78;
                                    if (v53 == 42) {
                                        // 0x407ef9
                                        // branch -> 0x4080e0
                                        // 0x4080e0
                                        function_407be3();
                                        // branch -> 0x408105
                                    } else {
                                        // 0x407edd
                                        if (v54 == 52) {
                                            // 0x407ee6
                                            RemovePropA();
                                            // branch -> 0x407dc8
                                            // 0x407dc8
                                            // branch -> 0x408105
                                        }
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        } else {
                            // 0x407d31
                            if (v28 == 20) {
                                // 0x407e6d
                                v19 = g131;
                                if (v19 != 0) {
                                    // 0x407e71
                                    if (v14->e5 == 0) {
                                        // 0x407e9d
                                        g124 = hWnd2;
                                        if (*(int32_t *)v19 == hWnd2) {
                                            // 0x407ea4
                                            v43 = v14->e7;
                                            v12 = v43;
                                            g131 = v12;
                                            if (v43 != 0) {
                                                // 0x407eab
                                                ((int32_t (*)(int32_t, int32_t))v12)((int32_t)v8, hWnd2);
                                                // branch -> 0x407eb4
                                            }
                                        }
                                    } else {
                                        // 0x407e77
                                        GetClientRect(hWnd2, lpRect);
                                        FillRect((int32_t)v8, lpRect, (int32_t)lpRect);
                                        // branch -> 0x407eb4
                                    }
                                    // 0x407eb4
                                    v11 = (int32_t)lpRect;
                                    function_408227(15, 0, v11, v11);
                                    // branch -> 0x408105
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // 0x407eb4
                                v11 = (int32_t)lpRect;
                                function_408227(15, 0, v11, v11);
                                // branch -> 0x408105
                            } else {
                                // 0x407d37
                                if (v28 == 3) {
                                    // 0x407d50
                                    v17 = g131;
                                    if (v17 != 0) {
                                        // 0x407d58
                                        g124 = hWnd2;
                                        if (hWnd2 == *(int32_t *)v17) {
                                            // 0x407d63
                                            // branch -> 0x407e60
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                } else {
                                    // 0x407d3c
                                    if (v28 == 5) {
                                        // 0x407dd4
                                        if (v10 == (struct struct_21 *)hWnd) {
                                            // 0x407ddc
                                            if (g126 != -1) {
                                                // 0x407de5
                                                v42 = v8;
                                                v41 = (int32_t)v42;
                                                g124 = v41;
                                                if (v42 == NULL) {
                                                    // 0x407e3d
                                                    g130 = 0;
                                                    if (v14->e10 != NULL) {
                                                        // 0x407e44
                                                        v14->e10 = NULL;
                                                        function_408227(0x3335, g130, (int32_t)v15, (int32_t)NULL);
                                                        // branch -> 0x407e59
                                                    }
                                                    // 0x407e59
                                                    // branch -> 0x407e5e
                                                    // 0x407e5e
                                                    // branch -> 0x407e60
                                                } else {
                                                    // 0x407ded
                                                    v31 = v41 - 1;
                                                    g124 = v31;
                                                    if (v31 == 0) {
                                                        // 0x407e28
                                                        v14->e10 = (int32_t *)1;
                                                        // branch -> 0x407e60
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    } else {
                                                        // 0x407df0
                                                        v32 = v41 - 2;
                                                        g124 = v32;
                                                        if (v32 == 0) {
                                                            // 0x407dfc
                                                            g130 = 0;
                                                            v14->e10 = (int32_t *)1;
                                                            function_408227(0x3334, g130, (int32_t)v15, (int32_t)NULL);
                                                            v18 = g130;
                                                            function_408227(5, v18, (int32_t)v15, v18);
                                                            // branch -> 0x408101
                                                        }
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    } else {
                                        // 0x407d44
                                        v30 = v28 - 6;
                                        if (v30 == 0) {
                                            // 0x407d73
                                            if ((int32_t)v8 % 0x10000 == 0) {
                                                // 0x407da9
                                                GetFocus();
                                                SetPropA();
                                                function_4074e8(hWnd, NULL);
                                                // branch -> 0x407dc8
                                            } else {
                                                // 0x407d7a
                                                GetPropA();
                                                if (g124 != 0) {
                                                    // 0x407d8c
                                                    SetFocus();
                                                    // branch -> 0x407d93
                                                }
                                                // 0x407d93
                                                function_408227(0x3330, 0, (int32_t)v15, 0);
                                                // branch -> 0x407dc8
                                            }
                                            // 0x407dc8
                                            // branch -> 0x408105
                                        } else {
                                            // 0x407d47
                                            if (v30 == 10) {
                                                // 0x407d50
                                                v17 = g131;
                                                if (v17 != 0) {
                                                    // 0x407d58
                                                    g124 = hWnd2;
                                                    if (hWnd2 == *(int32_t *)v17) {
                                                        // 0x407d63
                                                        // branch -> 0x407e60
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            } else {
                v16 = v60;
            }
        }
        // 0x407cd7
        v15 = (struct struct_21 *)-1;
        v25 = v16;
        // branch -> 0x407cdb
        // 0x407cdb
        if (v25 != 0) {
            // 0x407cdf
            v37 = *(int32_t *)(v25 + 12);
            g124 = v37;
            if (v37 != 0) {
                // 0x407ce6
                ((int32_t (*)(int32_t, int32_t, int32_t, int32_t))v37)(hWnd2, (int32_t)v7, (int32_t)v8, g127);
                if (g124 == -0x1f1f1f1f) {
                    // 0x407ce6
                    // branch -> 0x407d05
                    // 0x407d05
                    v39 = v7;
                    g125 = (int32_t)v39;
                    v40 = (int32_t)v15;
                    g126 = v40;
                    g124 = 273;
                    *(int32_t *)(g130 + 4) = v40;
                    if (v39 > (struct struct_21 *)273) {
                        // 0x408019
                        g124 = 0x30d5;
                        v21 = g125;
                        if (v21 > 0x30d5) {
                            // 0x4080c4
                            g124 = 0x3331;
                            if (v21 == 0x3331) {
                                // 0x4080fb
                                *(int32_t *)(g130 + 12) = 0x3331;
                                // branch -> 0x4080fe
                            } else {
                                // 0x4080cd
                                v36 = v21 - 0x3332;
                                if (v36 == 0) {
                                    // 0x4080ed
                                    *(int32_t *)(g130 + 12) = 0x3332;
                                    *(int32_t *)g130 = (int32_t)v8;
                                    // branch -> 0x4080fe
                                    // 0x4080fe
                                    *(int32_t *)(g130 + 68) = g127;
                                    // branch -> 0x408101
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                } else {
                                    // 0x4080d0
                                    if (v36 == 14) {
                                        // 0x4080d5
                                        v1 = (struct struct_21 *)g127;
                                        // branch -> 0x4080e0
                                        // 0x4080e0
                                        function_407be3();
                                        // branch -> 0x408105
                                    }
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // 0x4080fe
                            *(int32_t *)(g130 + 68) = g127;
                            // branch -> 0x408101
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        } else {
                            // 0x408026
                            if (v21 == 0x30d5) {
                                // 0x40807d
                                v24 = g127;
                                g127 = v24 - 513;
                                if (v24 == 513) {
                                    // 0x40809c
                                    v1 = NULL;
                                    // branch -> 0x40809e
                                } else {
                                    // 0x408085
                                    v33 = v24 - 515;
                                    g127 = v33;
                                    if (v33 != 0) {
                                        // 0x408089
                                        v34 = v24 - 516;
                                        g127 = v34;
                                        if (v34 != 0) {
                                            // 0x40808c
                                            v35 = v24 - 518;
                                            g127 = v35;
                                            if (v35 == 0) {
                                                // 0x408090
                                                // branch -> 0x40809e
                                                // 0x40809e
                                                function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                                                // branch -> 0x4080b1
                                            }
                                            // 0x4080b1
                                            g130 = 0;
                                            v1 = NULL;
                                            PostMessageA(hWnd, 0, 0, 0);
                                            // branch -> 0x408105
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                    }
                                }
                                // 0x40809e
                                function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                                // branch -> 0x4080b1
                                // 0x4080b1
                                g130 = 0;
                                v1 = NULL;
                                PostMessageA(hWnd, 0, 0, 0);
                                // branch -> 0x408105
                            } else {
                                // 0x408028
                                g124 = 275;
                                if (v21 == 275) {
                                    // 0x408064
                                    if (g131 != 0) {
                                        // 0x40806c
                                        *(int32_t *)(g130 + 12) = 0x3336;
                                        *(int32_t *)g130 = (int32_t)v8;
                                        // branch -> 0x408101
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                } else {
                                    // 0x408031
                                    if (v21 >= 276) {
                                        // 0x408037
                                        if (v21 < 278) {
                                            // 0x4080d5
                                            v1 = (struct struct_21 *)g127;
                                            // branch -> 0x4080e0
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        } else {
                                            // 0x408043
                                            if (v21 >= 307) {
                                                // 0x40804f
                                                if (v21 < 310 || v21 == 312) {
                                                    // 0x4080d5
                                                    v1 = (struct struct_21 *)g127;
                                                    // branch -> 0x4080e0
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    } else {
                        // 0x407d22
                        if (v39 == (struct struct_21 *)273) {
                            // 0x407f95
                            g131 = (int32_t)v8;
                            function_407be3();
                            if (g124 == -0x2f2f2f2f) {
                                // 0x407fb2
                                v20 = g131;
                                g124 = v20 / 0x10000;
                                if (g127 == 0) {
                                    // 0x407fe5
                                    if (v20 >= 0x10000) {
                                        // 0x407fea
                                        v55 = v20 % 0x10000;
                                        switch (v20) {
                                            default: {
                                                // 0x408008
                                                *(int32_t *)g130 = v55;
                                                // branch -> 0x40800d
                                                // 0x40800d
                                                *(int32_t *)(g130 + 12) = 0x332d;
                                                // branch -> 0x408101
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                break;
                                            }
                                            case -1535: {
                                                // 0x407ff1
                                                // branch -> 0x407ff3
                                            }
                                            case -1534: {
                                                // 0x407ff3
                                                function_4073e0();
                                                // branch -> 0x408101
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                break;
                                            }
                                        }
                                    } else {
                                        v23 = v20;
                                    }
                                } else {
                                    // 0x407fbb
                                    *(int32_t *)(g130 + 12) = 0x332c;
                                    *(int32_t *)(g130 + 8) = g124;
                                    GetWindowLongA();
                                    v22 = g124;
                                    *(int32_t *)g130 = v22;
                                    if (v22 == -0x2710) {
                                        // 0x407fdb
                                        v29 = g131 % 0x10000;
                                        g131 = v29;
                                        v23 = v29;
                                        // branch -> 0x407fe1
                                        // 0x407fe1
                                        *(int32_t *)g130 = v23;
                                        // branch -> 0x40800d
                                        // 0x40800d
                                        *(int32_t *)(g130 + 12) = 0x332d;
                                        // branch -> 0x408101
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // 0x407fe1
                                *(int32_t *)g130 = v23;
                                // branch -> 0x40800d
                                // 0x40800d
                                *(int32_t *)(g130 + 12) = 0x332d;
                                // branch -> 0x408101
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        } else {
                            // 0x407d28
                            v28 = g125;
                            if (v28 > 20) {
                                // 0x407eca
                                v52 = v28 - 21;
                                if (v28 == 21) {
                                    // 0x407f6e
                                    if (g131 != 0) {
                                        // 0x407f76
                                        if (v14->e6 == 0) {
                                            // 0x407f80
                                            EnumChildWindows();
                                            // branch -> 0x408105
                                        }
                                    }
                                } else {
                                    // 0x407ed3
                                    v53 = v28 - 36;
                                    if (v52 == 15) {
                                        // 0x407f09
                                        if (g131 != 0) {
                                            // 0x407f11
                                            v44 = v14->e8;
                                            v48 = v44;
                                            v13 = v48;
                                            if (v44 == 0) {
                                                // 0x407f22
                                                GetWindowLongA();
                                                if (v13 <= 0) {
                                                    // 0x407f31
                                                    *(int32_t *)(g127 + 24) = 1;
                                                    // branch -> 0x407f38
                                                }
                                            } else {
                                                // 0x407f1a
                                                *(int32_t *)(g127 + 24) = v48;
                                                // branch -> 0x407f38
                                            }
                                            // 0x407f38
                                            v45 = v14->e8;
                                            v49 = v45;
                                            if (v45 != 0) {
                                                // 0x407f41
                                                *(int32_t *)(g127 + 28) = v49;
                                                // branch -> 0x407f47
                                            }
                                            // 0x407f47
                                            v46 = v14->e9;
                                            v50 = v46;
                                            if (v46 != 0) {
                                                // 0x407f50
                                                *(int32_t *)(g127 + 32) = v50;
                                                // branch -> 0x407f56
                                            }
                                            // 0x407f56
                                            v47 = v14->e9;
                                            v51 = v47;
                                            if (v47 != 0) {
                                                // 0x407f63
                                                *(int32_t *)(g127 + 36) = v51;
                                                // branch -> 0x408101
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                    } else {
                                        // 0x407ed8
                                        v54 = v28 - 78;
                                        if (v53 == 42) {
                                            // 0x407ef9
                                            // branch -> 0x4080e0
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        } else {
                                            // 0x407edd
                                            if (v54 == 52) {
                                                // 0x407ee6
                                                RemovePropA();
                                                // branch -> 0x407dc8
                                                // 0x407dc8
                                                // branch -> 0x408105
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            } else {
                                // 0x407d31
                                if (v28 == 20) {
                                    // 0x407e6d
                                    v19 = g131;
                                    if (v19 != 0) {
                                        // 0x407e71
                                        if (v14->e5 == 0) {
                                            // 0x407e9d
                                            g124 = hWnd2;
                                            if (*(int32_t *)v19 == hWnd2) {
                                                // 0x407ea4
                                                v43 = v14->e7;
                                                v12 = v43;
                                                g131 = v12;
                                                if (v43 != 0) {
                                                    // 0x407eab
                                                    ((int32_t (*)(int32_t, int32_t))v12)((int32_t)v8, hWnd2);
                                                    // branch -> 0x407eb4
                                                }
                                            }
                                        } else {
                                            // 0x407e77
                                            GetClientRect(hWnd2, lpRect);
                                            FillRect((int32_t)v8, lpRect, (int32_t)lpRect);
                                            // branch -> 0x407eb4
                                        }
                                        // 0x407eb4
                                        v11 = (int32_t)lpRect;
                                        function_408227(15, 0, v11, v11);
                                        // branch -> 0x408105
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // 0x407eb4
                                    v11 = (int32_t)lpRect;
                                    function_408227(15, 0, v11, v11);
                                    // branch -> 0x408105
                                } else {
                                    // 0x407d37
                                    if (v28 == 3) {
                                        // 0x407d50
                                        v17 = g131;
                                        if (v17 != 0) {
                                            // 0x407d58
                                            g124 = hWnd2;
                                            if (hWnd2 == *(int32_t *)v17) {
                                                // 0x407d63
                                                // branch -> 0x407e60
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    } else {
                                        // 0x407d3c
                                        if (v28 == 5) {
                                            // 0x407dd4
                                            if (v10 == (struct struct_21 *)hWnd) {
                                                // 0x407ddc
                                                if (g126 != -1) {
                                                    // 0x407de5
                                                    v42 = v8;
                                                    v41 = (int32_t)v42;
                                                    g124 = v41;
                                                    if (v42 == NULL) {
                                                        // 0x407e3d
                                                        g130 = 0;
                                                        if (v14->e10 != NULL) {
                                                            // 0x407e44
                                                            v14->e10 = NULL;
                                                            function_408227(0x3335, g130, (int32_t)v15, (int32_t)NULL);
                                                            // branch -> 0x407e59
                                                        }
                                                        // 0x407e59
                                                        // branch -> 0x407e5e
                                                        // 0x407e5e
                                                        // branch -> 0x407e60
                                                    } else {
                                                        // 0x407ded
                                                        v31 = v41 - 1;
                                                        g124 = v31;
                                                        if (v31 == 0) {
                                                            // 0x407e28
                                                            v14->e10 = (int32_t *)1;
                                                            // branch -> 0x407e60
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        } else {
                                                            // 0x407df0
                                                            v32 = v41 - 2;
                                                            g124 = v32;
                                                            if (v32 == 0) {
                                                                // 0x407dfc
                                                                g130 = 0;
                                                                v14->e10 = (int32_t *)1;
                                                                function_408227(0x3334, g130, (int32_t)v15, (int32_t)NULL);
                                                                v18 = g130;
                                                                function_408227(5, v18, (int32_t)v15, v18);
                                                                // branch -> 0x408101
                                                            }
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        }
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        } else {
                                            // 0x407d44
                                            v30 = v28 - 6;
                                            if (v30 == 0) {
                                                // 0x407d73
                                                if ((int32_t)v8 % 0x10000 == 0) {
                                                    // 0x407da9
                                                    GetFocus();
                                                    SetPropA();
                                                    function_4074e8(hWnd, NULL);
                                                    // branch -> 0x407dc8
                                                } else {
                                                    // 0x407d7a
                                                    GetPropA();
                                                    if (g124 != 0) {
                                                        // 0x407d8c
                                                        SetFocus();
                                                        // branch -> 0x407d93
                                                    }
                                                    // 0x407d93
                                                    function_408227(0x3330, 0, (int32_t)v15, 0);
                                                    // branch -> 0x407dc8
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            } else {
                                                // 0x407d47
                                                if (v30 == 10) {
                                                    // 0x407d50
                                                    v17 = g131;
                                                    if (v17 != 0) {
                                                        // 0x407d58
                                                        g124 = hWnd2;
                                                        if (hWnd2 == *(int32_t *)v17) {
                                                            // 0x407d63
                                                            // branch -> 0x407e60
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                        }
                                                    }
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            }
        }
        // 0x407cfe
        v26 = g130;
        v38 = *(int32_t *)(v26 + 64);
        g124 = v38;
        v27 = v26;
        if (v38 != 0) {
            // 0x407ce6
            ((int32_t (*)(int32_t, int32_t, int32_t, int32_t))v38)(hWnd2, (int32_t)v7, (int32_t)v8, g127);
            if (g124 == -0x1f1f1f1f) {
                // 0x407ce6
                v27 = g130;
                // branch -> 0x407d05
                // 0x407d05
                v39 = v7;
                g125 = (int32_t)v39;
                v40 = (int32_t)v15;
                g126 = v40;
                g124 = 273;
                *(int32_t *)(v27 + 4) = v40;
                if (v39 > (struct struct_21 *)273) {
                    // 0x408019
                    g124 = 0x30d5;
                    v21 = g125;
                    if (v21 > 0x30d5) {
                        // 0x4080c4
                        g124 = 0x3331;
                        if (v21 == 0x3331) {
                            // 0x4080fb
                            *(int32_t *)(g130 + 12) = 0x3331;
                            // branch -> 0x4080fe
                        } else {
                            // 0x4080cd
                            v36 = v21 - 0x3332;
                            if (v36 == 0) {
                                // 0x4080ed
                                *(int32_t *)(g130 + 12) = 0x3332;
                                *(int32_t *)g130 = (int32_t)v8;
                                // branch -> 0x4080fe
                                // 0x4080fe
                                *(int32_t *)(g130 + 68) = g127;
                                // branch -> 0x408101
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            } else {
                                // 0x4080d0
                                if (v36 == 14) {
                                    // 0x4080d5
                                    v1 = (struct struct_21 *)g127;
                                    // branch -> 0x4080e0
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // 0x4080fe
                        *(int32_t *)(g130 + 68) = g127;
                        // branch -> 0x408101
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    } else {
                        // 0x408026
                        if (v21 == 0x30d5) {
                            // 0x40807d
                            v24 = g127;
                            g127 = v24 - 513;
                            if (v24 == 513) {
                                // 0x40809c
                                v1 = NULL;
                                // branch -> 0x40809e
                            } else {
                                // 0x408085
                                v33 = v24 - 515;
                                g127 = v33;
                                if (v33 != 0) {
                                    // 0x408089
                                    v34 = v24 - 516;
                                    g127 = v34;
                                    if (v34 != 0) {
                                        // 0x40808c
                                        v35 = v24 - 518;
                                        g127 = v35;
                                        if (v35 == 0) {
                                            // 0x408090
                                            // branch -> 0x40809e
                                            // 0x40809e
                                            function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                                            // branch -> 0x4080b1
                                        }
                                        // 0x4080b1
                                        g130 = 0;
                                        v1 = NULL;
                                        PostMessageA(hWnd, 0, 0, 0);
                                        // branch -> 0x408105
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                }
                            }
                            // 0x40809e
                            function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                            // branch -> 0x4080b1
                            // 0x4080b1
                            g130 = 0;
                            v1 = NULL;
                            PostMessageA(hWnd, 0, 0, 0);
                            // branch -> 0x408105
                        } else {
                            // 0x408028
                            g124 = 275;
                            if (v21 == 275) {
                                // 0x408064
                                if (g131 != 0) {
                                    // 0x40806c
                                    *(int32_t *)(g130 + 12) = 0x3336;
                                    *(int32_t *)g130 = (int32_t)v8;
                                    // branch -> 0x408101
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                            } else {
                                // 0x408031
                                if (v21 >= 276) {
                                    // 0x408037
                                    if (v21 < 278) {
                                        // 0x4080d5
                                        v1 = (struct struct_21 *)g127;
                                        // branch -> 0x4080e0
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    } else {
                                        // 0x408043
                                        if (v21 >= 307) {
                                            // 0x40804f
                                            if (v21 < 310 || v21 == 312) {
                                                // 0x4080d5
                                                v1 = (struct struct_21 *)g127;
                                                // branch -> 0x4080e0
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        }
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                } else {
                    // 0x407d22
                    if (v39 == (struct struct_21 *)273) {
                        // 0x407f95
                        g131 = (int32_t)v8;
                        function_407be3();
                        if (g124 == -0x2f2f2f2f) {
                            // 0x407fb2
                            v20 = g131;
                            g124 = v20 / 0x10000;
                            if (g127 == 0) {
                                // 0x407fe5
                                if (v20 >= 0x10000) {
                                    // 0x407fea
                                    v55 = v20 % 0x10000;
                                    switch (v20) {
                                        default: {
                                            // 0x408008
                                            *(int32_t *)g130 = v55;
                                            // branch -> 0x40800d
                                            // 0x40800d
                                            *(int32_t *)(g130 + 12) = 0x332d;
                                            // branch -> 0x408101
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                            break;
                                        }
                                        case -1535: {
                                            // 0x407ff1
                                            // branch -> 0x407ff3
                                        }
                                        case -1534: {
                                            // 0x407ff3
                                            function_4073e0();
                                            // branch -> 0x408101
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                            break;
                                        }
                                    }
                                } else {
                                    v23 = v20;
                                }
                            } else {
                                // 0x407fbb
                                *(int32_t *)(g130 + 12) = 0x332c;
                                *(int32_t *)(g130 + 8) = g124;
                                GetWindowLongA();
                                v22 = g124;
                                *(int32_t *)g130 = v22;
                                if (v22 == -0x2710) {
                                    // 0x407fdb
                                    v29 = g131 % 0x10000;
                                    g131 = v29;
                                    v23 = v29;
                                    // branch -> 0x407fe1
                                    // 0x407fe1
                                    *(int32_t *)g130 = v23;
                                    // branch -> 0x40800d
                                    // 0x40800d
                                    *(int32_t *)(g130 + 12) = 0x332d;
                                    // branch -> 0x408101
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // 0x407fe1
                            *(int32_t *)g130 = v23;
                            // branch -> 0x40800d
                            // 0x40800d
                            *(int32_t *)(g130 + 12) = 0x332d;
                            // branch -> 0x408101
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    } else {
                        // 0x407d28
                        v28 = g125;
                        if (v28 > 20) {
                            // 0x407eca
                            v52 = v28 - 21;
                            if (v28 == 21) {
                                // 0x407f6e
                                if (g131 != 0) {
                                    // 0x407f76
                                    if (v14->e6 == 0) {
                                        // 0x407f80
                                        EnumChildWindows();
                                        // branch -> 0x408105
                                    }
                                }
                            } else {
                                // 0x407ed3
                                v53 = v28 - 36;
                                if (v52 == 15) {
                                    // 0x407f09
                                    if (g131 != 0) {
                                        // 0x407f11
                                        v44 = v14->e8;
                                        v48 = v44;
                                        v13 = v48;
                                        if (v44 == 0) {
                                            // 0x407f22
                                            GetWindowLongA();
                                            if (v13 <= 0) {
                                                // 0x407f31
                                                *(int32_t *)(g127 + 24) = 1;
                                                // branch -> 0x407f38
                                            }
                                        } else {
                                            // 0x407f1a
                                            *(int32_t *)(g127 + 24) = v48;
                                            // branch -> 0x407f38
                                        }
                                        // 0x407f38
                                        v45 = v14->e8;
                                        v49 = v45;
                                        if (v45 != 0) {
                                            // 0x407f41
                                            *(int32_t *)(g127 + 28) = v49;
                                            // branch -> 0x407f47
                                        }
                                        // 0x407f47
                                        v46 = v14->e9;
                                        v50 = v46;
                                        if (v46 != 0) {
                                            // 0x407f50
                                            *(int32_t *)(g127 + 32) = v50;
                                            // branch -> 0x407f56
                                        }
                                        // 0x407f56
                                        v47 = v14->e9;
                                        v51 = v47;
                                        if (v47 != 0) {
                                            // 0x407f63
                                            *(int32_t *)(g127 + 36) = v51;
                                            // branch -> 0x408101
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                } else {
                                    // 0x407ed8
                                    v54 = v28 - 78;
                                    if (v53 == 42) {
                                        // 0x407ef9
                                        // branch -> 0x4080e0
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    } else {
                                        // 0x407edd
                                        if (v54 == 52) {
                                            // 0x407ee6
                                            RemovePropA();
                                            // branch -> 0x407dc8
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        } else {
                            // 0x407d31
                            if (v28 == 20) {
                                // 0x407e6d
                                v19 = g131;
                                if (v19 != 0) {
                                    // 0x407e71
                                    if (v14->e5 == 0) {
                                        // 0x407e9d
                                        g124 = hWnd2;
                                        if (*(int32_t *)v19 == hWnd2) {
                                            // 0x407ea4
                                            v43 = v14->e7;
                                            v12 = v43;
                                            g131 = v12;
                                            if (v43 != 0) {
                                                // 0x407eab
                                                ((int32_t (*)(int32_t, int32_t))v12)((int32_t)v8, hWnd2);
                                                // branch -> 0x407eb4
                                            }
                                        }
                                    } else {
                                        // 0x407e77
                                        GetClientRect(hWnd2, lpRect);
                                        FillRect((int32_t)v8, lpRect, (int32_t)lpRect);
                                        // branch -> 0x407eb4
                                    }
                                    // 0x407eb4
                                    v11 = (int32_t)lpRect;
                                    function_408227(15, 0, v11, v11);
                                    // branch -> 0x408105
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // 0x407eb4
                                v11 = (int32_t)lpRect;
                                function_408227(15, 0, v11, v11);
                                // branch -> 0x408105
                            } else {
                                // 0x407d37
                                if (v28 == 3) {
                                    // 0x407d50
                                    v17 = g131;
                                    if (v17 != 0) {
                                        // 0x407d58
                                        g124 = hWnd2;
                                        if (hWnd2 == *(int32_t *)v17) {
                                            // 0x407d63
                                            // branch -> 0x407e60
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                } else {
                                    // 0x407d3c
                                    if (v28 == 5) {
                                        // 0x407dd4
                                        if (v10 == (struct struct_21 *)hWnd) {
                                            // 0x407ddc
                                            if (g126 != -1) {
                                                // 0x407de5
                                                v42 = v8;
                                                v41 = (int32_t)v42;
                                                g124 = v41;
                                                if (v42 == NULL) {
                                                    // 0x407e3d
                                                    g130 = 0;
                                                    if (v14->e10 != NULL) {
                                                        // 0x407e44
                                                        v14->e10 = NULL;
                                                        function_408227(0x3335, g130, (int32_t)v15, (int32_t)NULL);
                                                        // branch -> 0x407e59
                                                    }
                                                    // 0x407e59
                                                    // branch -> 0x407e5e
                                                    // 0x407e5e
                                                    // branch -> 0x407e60
                                                } else {
                                                    // 0x407ded
                                                    v31 = v41 - 1;
                                                    g124 = v31;
                                                    if (v31 == 0) {
                                                        // 0x407e28
                                                        v14->e10 = (int32_t *)1;
                                                        // branch -> 0x407e60
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    } else {
                                                        // 0x407df0
                                                        v32 = v41 - 2;
                                                        g124 = v32;
                                                        if (v32 == 0) {
                                                            // 0x407dfc
                                                            g130 = 0;
                                                            v14->e10 = (int32_t *)1;
                                                            function_408227(0x3334, g130, (int32_t)v15, (int32_t)NULL);
                                                            v18 = g130;
                                                            function_408227(5, v18, (int32_t)v15, v18);
                                                            // branch -> 0x408101
                                                        }
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    } else {
                                        // 0x407d44
                                        v30 = v28 - 6;
                                        if (v30 == 0) {
                                            // 0x407d73
                                            if ((int32_t)v8 % 0x10000 == 0) {
                                                // 0x407da9
                                                GetFocus();
                                                SetPropA();
                                                function_4074e8(hWnd, NULL);
                                                // branch -> 0x407dc8
                                            } else {
                                                // 0x407d7a
                                                GetPropA();
                                                if (g124 != 0) {
                                                    // 0x407d8c
                                                    SetFocus();
                                                    // branch -> 0x407d93
                                                }
                                                // 0x407d93
                                                function_408227(0x3330, 0, (int32_t)v15, 0);
                                                // branch -> 0x407dc8
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        } else {
                                            // 0x407d47
                                            if (v30 == 10) {
                                                // 0x407d50
                                                v17 = g131;
                                                if (v17 != 0) {
                                                    // 0x407d58
                                                    g124 = hWnd2;
                                                    if (hWnd2 == *(int32_t *)v17) {
                                                        // 0x407d63
                                                        // branch -> 0x407e60
                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                    }
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            }
            // Detected a possible infinite recursion (goto support failed); quitting...
        }
        // 0x407d05
        v39 = v7;
        g125 = (int32_t)v39;
        v40 = (int32_t)v15;
        g126 = v40;
        g124 = 273;
        *(int32_t *)(v27 + 4) = v40;
        if (v39 > (struct struct_21 *)273) {
            // 0x408019
            g124 = 0x30d5;
            v21 = g125;
            if (v21 > 0x30d5) {
                // 0x4080c4
                g124 = 0x3331;
                if (v21 == 0x3331) {
                    // 0x4080fb
                    *(int32_t *)(g130 + 12) = 0x3331;
                    // branch -> 0x4080fe
                } else {
                    // 0x4080cd
                    v36 = v21 - 0x3332;
                    if (v36 == 0) {
                        // 0x4080ed
                        *(int32_t *)(g130 + 12) = 0x3332;
                        *(int32_t *)g130 = (int32_t)v8;
                        // branch -> 0x4080fe
                        // 0x4080fe
                        *(int32_t *)(g130 + 68) = g127;
                        // branch -> 0x408101
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    } else {
                        // 0x4080d0
                        if (v36 == 14) {
                            // 0x4080d5
                            // branch -> 0x4080e0
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // 0x4080fe
                *(int32_t *)(g130 + 68) = g127;
                // branch -> 0x408101
                // Detected a possible infinite recursion (goto support failed); quitting...
            } else {
                // 0x408026
                if (v21 == 0x30d5) {
                    // 0x40807d
                    v24 = g127;
                    g127 = v24 - 513;
                    if (v24 == 513) {
                        // 0x40809c
                        v1 = NULL;
                        // branch -> 0x40809e
                    } else {
                        // 0x408085
                        v33 = v24 - 515;
                        g127 = v33;
                        if (v33 != 0) {
                            // 0x408089
                            v34 = v24 - 516;
                            g127 = v34;
                            if (v34 != 0) {
                                // 0x40808c
                                v35 = v24 - 518;
                                g127 = v35;
                                if (v35 == 0) {
                                    // 0x408090
                                    // branch -> 0x40809e
                                    // 0x40809e
                                    function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                                    // branch -> 0x4080b1
                                }
                                // 0x4080b1
                                g130 = 0;
                                v1 = NULL;
                                PostMessageA(hWnd, 0, 0, 0);
                                // branch -> 0x408105
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                        }
                    }
                    // 0x40809e
                    function_408227(0x332e, (int32_t)v8, (int32_t)v15, (int32_t)v1);
                    // branch -> 0x4080b1
                    // 0x4080b1
                    g130 = 0;
                    PostMessageA(hWnd, 0, 0, 0);
                    // branch -> 0x408105
                } else {
                    // 0x408028
                    g124 = 275;
                    if (v21 == 275) {
                        // 0x408064
                        if (g131 != 0) {
                            // 0x40806c
                            *(int32_t *)(g130 + 12) = 0x3336;
                            *(int32_t *)g130 = (int32_t)v8;
                            // branch -> 0x408101
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                    } else {
                        // 0x408031
                        if (v21 >= 276) {
                            // 0x408037
                            if (v21 < 278) {
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            } else {
                                // 0x408043
                                if (v21 >= 307) {
                                    // 0x40804f
                                    if (v21 < 310 || v21 == 312) {
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                }
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            }
            // Detected a possible infinite recursion (goto support failed); quitting...
        } else {
            // 0x407d22
            if (v39 == (struct struct_21 *)273) {
                // 0x407f95
                g131 = (int32_t)v8;
                function_407be3();
                if (g124 == -0x2f2f2f2f) {
                    // 0x407fb2
                    v20 = g131;
                    g124 = v20 / 0x10000;
                    if (g127 == 0) {
                        // 0x407fe5
                        if (v20 >= 0x10000) {
                            // 0x407fea
                            switch (v20) {
                                default: {
                                    // 0x408008
                                    *(int32_t *)g130 = v20 % 0x10000;
                                    // branch -> 0x40800d
                                    // 0x40800d
                                    *(int32_t *)(g130 + 12) = 0x332d;
                                    // branch -> 0x408101
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                    break;
                                }
                                case -1535: {
                                    // 0x407ff1
                                    // branch -> 0x407ff3
                                }
                                case -1534: {
                                    // 0x407ff3
                                    function_4073e0();
                                    // branch -> 0x408101
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                    break;
                                }
                            }
                        } else {
                            v23 = v20;
                        }
                    } else {
                        // 0x407fbb
                        *(int32_t *)(g130 + 12) = 0x332c;
                        *(int32_t *)(g130 + 8) = g124;
                        GetWindowLongA();
                        v22 = g124;
                        *(int32_t *)g130 = v22;
                        if (v22 == -0x2710) {
                            // 0x407fdb
                            v29 = g131 % 0x10000;
                            g131 = v29;
                            v23 = v29;
                            // branch -> 0x407fe1
                            // 0x407fe1
                            *(int32_t *)g130 = v23;
                            // branch -> 0x40800d
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // 0x407fe1
                    *(int32_t *)g130 = v23;
                    // branch -> 0x40800d
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            } else {
                // 0x407d28
                v28 = g125;
                if (v28 > 20) {
                    // 0x407eca
                    if (v28 == 21) {
                        // 0x407f6e
                        if (g131 != 0) {
                            // 0x407f76
                            if (v14->e6 == 0) {
                                // 0x407f80
                                EnumChildWindows();
                                // branch -> 0x408105
                            }
                        }
                    } else {
                        // 0x407ed3
                        if (v28 == 36) {
                            // 0x407f09
                            if (g131 != 0) {
                                // 0x407f11
                                v44 = v14->e8;
                                v48 = v44;
                                if (v44 == 0) {
                                    // 0x407f22
                                    GetWindowLongA();
                                    if (v48 <= 0) {
                                        // 0x407f31
                                        *(int32_t *)(g127 + 24) = 1;
                                        // branch -> 0x407f38
                                    }
                                } else {
                                    // 0x407f1a
                                    *(int32_t *)(g127 + 24) = v48;
                                    // branch -> 0x407f38
                                }
                                // 0x407f38
                                v45 = v14->e8;
                                if (v45 != 0) {
                                    // 0x407f41
                                    *(int32_t *)(g127 + 28) = (int32_t)v45;
                                    // branch -> 0x407f47
                                }
                                // 0x407f47
                                v46 = v14->e9;
                                if (v46 != 0) {
                                    // 0x407f50
                                    *(int32_t *)(g127 + 32) = (int32_t)v46;
                                    // branch -> 0x407f56
                                }
                                // 0x407f56
                                v47 = v14->e9;
                                if (v47 != 0) {
                                    // 0x407f63
                                    *(int32_t *)(g127 + 36) = (int32_t)v47;
                                    // branch -> 0x408101
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                        } else {
                            // 0x407ed8
                            if (v28 == 78) {
                                // 0x407ef9
                                // branch -> 0x4080e0
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            } else {
                                // 0x407edd
                                if (v28 == 130) {
                                    // 0x407ee6
                                    RemovePropA();
                                    // branch -> 0x407dc8
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                } else {
                    // 0x407d31
                    if (v28 == 20) {
                        // 0x407e6d
                        v19 = g131;
                        if (v19 != 0) {
                            // 0x407e71
                            if (v14->e5 == 0) {
                                // 0x407e9d
                                g124 = hWnd2;
                                if (*(int32_t *)v19 == hWnd2) {
                                    // 0x407ea4
                                    v43 = v14->e7;
                                    v12 = v43;
                                    g131 = v12;
                                    if (v43 != 0) {
                                        // 0x407eab
                                        ((int32_t (*)(int32_t, int32_t))v12)((int32_t)v8, hWnd2);
                                        // branch -> 0x407eb4
                                    }
                                }
                            } else {
                                // 0x407e77
                                GetClientRect(hWnd2, lpRect);
                                FillRect((int32_t)v8, lpRect, (int32_t)lpRect);
                                // branch -> 0x407eb4
                            }
                            // 0x407eb4
                            v11 = (int32_t)lpRect;
                            function_408227(15, 0, v11, v11);
                            // branch -> 0x408105
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // 0x407eb4
                        v11 = (int32_t)lpRect;
                        function_408227(15, 0, v11, v11);
                        // branch -> 0x408105
                    } else {
                        // 0x407d37
                        if (v28 == 3) {
                            // 0x407d50
                            v17 = g131;
                            if (v17 != 0) {
                                // 0x407d58
                                g124 = hWnd2;
                                if (hWnd2 == *(int32_t *)v17) {
                                    // 0x407d63
                                    // branch -> 0x407e60
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                }
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        } else {
                            // 0x407d3c
                            if (v28 == 5) {
                                // 0x407dd4
                                if (v10 == (struct struct_21 *)hWnd) {
                                    // 0x407ddc
                                    if (g126 != -1) {
                                        // 0x407de5
                                        v42 = v8;
                                        v41 = (int32_t)v42;
                                        g124 = v41;
                                        if (v42 == NULL) {
                                            // 0x407e3d
                                            g130 = 0;
                                            if (v14->e10 != NULL) {
                                                // 0x407e44
                                                v14->e10 = NULL;
                                                function_408227(0x3335, g130, (int32_t)v15, (int32_t)NULL);
                                                // branch -> 0x407e59
                                            }
                                            // 0x407e59
                                            // branch -> 0x407e5e
                                            // 0x407e5e
                                            // branch -> 0x407e60
                                        } else {
                                            // 0x407ded
                                            v31 = v41 - 1;
                                            g124 = v31;
                                            if (v31 == 0) {
                                                // 0x407e28
                                                v14->e10 = (int32_t *)1;
                                                // branch -> 0x407e60
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            } else {
                                                // 0x407df0
                                                v32 = v41 - 2;
                                                g124 = v32;
                                                if (v32 == 0) {
                                                    // 0x407dfc
                                                    g130 = 0;
                                                    v14->e10 = (int32_t *)1;
                                                    function_408227(0x3334, g130, (int32_t)v15, (int32_t)NULL);
                                                    v18 = g130;
                                                    function_408227(5, v18, (int32_t)v15, v18);
                                                    // branch -> 0x408101
                                                }
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            } else {
                                // 0x407d44
                                v30 = v28 - 6;
                                if (v30 == 0) {
                                    // 0x407d73
                                    if ((int32_t)v8 % 0x10000 == 0) {
                                        // 0x407da9
                                        GetFocus();
                                        SetPropA();
                                        function_4074e8(hWnd, NULL);
                                        // branch -> 0x407dc8
                                    } else {
                                        // 0x407d7a
                                        GetPropA();
                                        if (g124 != 0) {
                                            // 0x407d8c
                                            SetFocus();
                                            // branch -> 0x407d93
                                        }
                                        // 0x407d93
                                        function_408227(0x3330, 0, (int32_t)v15, 0);
                                        // branch -> 0x407dc8
                                    }
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                } else {
                                    // 0x407d47
                                    if (v30 == 10) {
                                        // 0x407d50
                                        v17 = g131;
                                        if (v17 != 0) {
                                            // 0x407d58
                                            g124 = hWnd2;
                                            if (hWnd2 == *(int32_t *)v17) {
                                                // 0x407d63
                                                // branch -> 0x407e60
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                            }
                                        }
                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                    }
                                }
                                // Detected a possible infinite recursion (goto support failed); quitting...
                            }
                            // Detected a possible infinite recursion (goto support failed); quitting...
                        }
                        // Detected a possible infinite recursion (goto support failed); quitting...
                    }
                    // Detected a possible infinite recursion (goto support failed); quitting...
                }
                // Detected a possible infinite recursion (goto support failed); quitting...
            }
            // Detected a possible infinite recursion (goto support failed); quitting...
        }
        // Detected a possible infinite recursion (goto support failed); quitting...
    }
    // Detected a possible infinite recursion (goto support failed); quitting...
}

// Address range: 0x40810f - 0x4081a2
void function_40810f(void) {
    // 0x40810f
    int32_t v1;
    g130 = v1;
    int32_t v2;
    g131 = v2;
    function_407c59();
    int32_t lParam;
    int32_t v3;
    int32_t v4;
    if (g130 == 5) {
        // 0x408180
        SetLastError(0);
        if (g124 == -0x2f2f2f2f) {
            // 0x408192
            DefWindowProcA((int32_t *)g131, g130, g127, lParam);
            // branch -> 0x40819e
        }
        // 0x40819e
        g131 = v4;
        g130 = v3;
        return;
    }
    // 0x408131
    GetPropA();
    if (g124 == 0) {
        // 0x408180
        SetLastError(0);
        if (g124 == -0x2f2f2f2f) {
            // 0x408192
            DefWindowProcA((int32_t *)g131, g130, g127, lParam);
            // branch -> 0x40819e
        }
        // 0x40819e
        g131 = v4;
        g130 = v3;
        return;
    }
    int32_t v5 = g130;
    int32_t uMsg2 = v5; // 0x408175
    if (g124 != -0x2f2f2f2f) {
        // 0x40814a
        if (v5 != 288) {
            // 0x408152
            if (v5 != 7) {
                // 0x408157
                int32_t v6; // 0x40819e4
                int32_t v7; // 0x40819f6
                if (v5 == 273 && lParam == 0) {
                    // 0x408166
                    // branch -> 0x408176
                    // 0x408176
                    int32_t lParam2;
                    int32_t * v8;
                    int32_t uMsg;
                    DefFrameProcA((int32_t *)g131, (int32_t *)g124, uMsg, (int32_t)v8, lParam2);
                    v7 = g127;
                    v6 = 273;
                    // branch -> 0x40819e
                } else {
                    // 0x40816c
                    v7 = v3;
                    v6 = v4;
                    // branch -> 0x40819e
                }
                // 0x40819e
                g131 = v6;
                g130 = v7;
                return;
            }
            uMsg2 = 7;
        } else {
            uMsg2 = 288;
        }
    }
    // 0x408171
    // branch -> 0x408176
    // 0x408176
    DefFrameProcA((int32_t *)g131, (int32_t *)g124, uMsg2, (int32_t)(int32_t *)g127, lParam);
    // branch -> 0x40819e
    // 0x40819e
    g131 = v4;
    g130 = v3;
}

// Address range: 0x4081a5 - 0x408226
int32_t function_4081a5(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6) {
    int32_t v1 = g116; // bp-12
    function_409cdf((char *)&v1);
    int32_t v2 = g124; // 0x4081b4
    g130 = v2;
    int32_t * v3 = (int32_t *)0x4081b4; // 0x408224_04
    struct struct_22 * v4; // 0x4081e7_3
    if (*(int32_t *)(v2 + 12) == 0) {
        int32_t v5 = *(int32_t *)(v2 + 8); // 0x4081bc
        struct struct_22 * v6 = (struct struct_22 *)v5; // 0x4081bc_1
        int32_t * v7 = (int32_t *)g127; // 0x4081c1_0
        g127 = a3;
        int32_t v8 = g131; // 0x4081c5
        g131 = a4;
        if (v5 != 0) {
            // 0x4081cb
            if (v6->e1 == a1) {
                // 0x4081d3
                if (v6->e2 == a2) {
                    // 0x4081db
                    if (v6->e3 == a3) {
                        // 0x4081e0
                        if (v6->e4 == a4) {
                            // 0x408222
                            int32_t v9;
                            g131 = v9;
                            g127 = v8;
                            // branch -> 0x408224
                            // 0x408224
                            g130 = (int32_t)v7;
                            g129 = v1;
                            return (int32_t)v6;
                        }
                    }
                }
            }
        }
        int32_t v10 = *(int32_t *)v2; // 0x4081e5
        int32_t v11 = function_409efc(v10); // 0x4081e7
        v4 = (struct struct_22 *)v11;
        int32_t v12 = g130; // 0x4081ec
        int32_t v13 = *(int32_t *)(v12 + 8); // 0x4081ec
        if (v13 != 0) {
            // 0x4081f3
            *(int32_t *)v13 = v11;
            v12 = g130;
            // branch -> 0x4081f5
        }
        // 0x4081f5
        *(int32_t *)(v12 + 8) = v11;
        if (*(int32_t *)(v12 + 4) == 0) {
            // 0x4081fe
            *(int32_t *)(g130 + 4) = v11;
            // branch -> 0x408201
        }
        // 0x408201
        v4->e0 = 0;
        v4->e1 = a1;
        v4->e2 = a2;
        v4->e5 = a5;
        v4->e3 = g127;
        v4->e4 = g131;
        v4->e6 = a6;
        // branch -> 0x408222
        // 0x408222
        g131 = v10;
        g127 = v8;
        v3 = v7;
        // branch -> 0x408224
    }
    // 0x408224
    g130 = (int32_t)v3;
    g129 = v1;
    return (int32_t)v4;
}

// Address range: 0x408227 - 0x408243
void function_408227(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    // 0x408227
    function_4081a5(a1, a2, a3, a4, 0, 0);
}

// Address range: 0x408244 - 0x4082a3
int32_t function_408244(int32_t * a1, int32_t * a2, int32_t * a3, int32_t * a4, int32_t * a5, int32_t a6) {
    int32_t v1 = g116; // bp-12
    g130 = 0;
    function_409cdf((char *)&v1);
    int32_t v2 = *(int32_t *)(g124 + 4); // 0x408255
    g125 = v2;
    int32_t result; // 0x40829f
    if (v2 == 0) {
        // 0x40829f
        result = g130;
        int32_t v3;
        g130 = v3;
        return result;
    }
    // 0x40825c
    g130 = *(int32_t *)(v2 + 4);
    int32_t v4 = g131; // 0x408262
    g131 = (int32_t)a1;
    *a1 = *(int32_t *)(v2 + 8);
    g131 = (int32_t)a2;
    *a2 = *(int32_t *)(g125 + 12);
    g131 = (int32_t)a3;
    *a3 = *(int32_t *)(g125 + 16);
    g131 = (int32_t)a4;
    *a4 = *(int32_t *)(g125 + 20);
    g131 = (int32_t)a5;
    *a5 = *(int32_t *)(g125 + 24);
    int32_t v5 = g124; // 0x408288
    int32_t v6 = g125; // 0x408288
    *(int32_t *)(v5 + 4) = *(int32_t *)v6;
    g131 = v4;
    if (v6 == *(int32_t *)(v5 + 8)) {
        // 0x408293
        *(int32_t *)(g124 + 8) = 0;
        // branch -> 0x408297
    }
    int32_t v7 = *(int32_t *)g124; // 0x408298
    function_40a05b(v7, g125);
    // branch -> 0x40829f
    // 0x40829f
    result = g130;
    g130 = v7;
    return result;
}

// Address range: 0x4082a4 - 0x4082c0
void function_4082a4(void) {
    int32_t v1 = 256; // bp-8
    function_409dc6(28, (char *)16, &v1, 2, 0);
    int32_t v2 = g124; // 0x4082b8
    *(int32_t *)16 = v2;
    function_409efc(v2);
}

// Address range: 0x4082c1 - 0x4082cc
void function_4082c1(void) {
    // 0x4082c1
    int32_t * v1;
    function_40a182(*v1, 0);
}

// Address range: 0x4082cd - 0x4082e3
int32_t function_4082cd(void) {
    // 0x4082cd
    function_409ce6(16, (int32_t)function_4082a4);
    g116 = g124;
    return g124;
}

// Address range: 0x4082e4 - 0x40835d
void function_4082e4(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = g116; // bp-8
    function_409cdf((char *)&v1);
    int32_t v2 = g124; // 0x4082f0
    g130 = v2;
    int32_t v3 = *(int32_t *)(v2 + 4);
    *(int32_t *)(v2 + 8) = 0;
    int32_t v4 = v3; // 0x4082f9
    int32_t v5;
    if (v4 == 0) {
        // 0x40835c
        g130 = v5;
        return;
    }
    // branch -> 0x4082fe
    int32_t v6; // 0x40835b2
    int32_t v7; // 0x40835c3
    while (true) {
        int32_t v8 = *(int32_t *)v4; // 0x408303
        g131 = v8;
        int32_t * v9; // 0x40833c_0
        int32_t v10;
        int32_t v11; // 0x40833c
        int32_t v12; // 0x408344
        if (v10 == -1) {
            // 0x408307
            if (*(int32_t *)(v4 + 4) != -1) {
                // 0x40830d
                if (a1 != -1) {
                    // 0x408316
                    if (*(int32_t *)(v4 + 8) != a1) {
                        // 0x40831b
                        if (a2 != -1) {
                            // 0x408324
                            if (*(int32_t *)(v4 + 12) != a2) {
                                // 0x408329
                                if (a3 != -1) {
                                    // 0x408332
                                    if (*(int32_t *)(v4 + 16) != a3) {
                                        // 0x408337
                                        *(int32_t *)(g130 + 8) = v4;
                                        v7 = v5;
                                        int32_t v13;
                                        v6 = v13;
                                        // branch -> 0x408355
                                      lab_0xa0d48f0:;
                                        int32_t v14 = g131; // 0x408355
                                        v3 = v14;
                                        if (v14 == 0) {
                                            // break -> 0x40835b
                                            break;
                                        }
                                        v4 = v14;
                                        v5 = v7;
                                        v13 = v6;
                                        // continue -> 0x4082fe
                                        continue;
                                    }
                                    // 0x40833c
                                    v11 = g130;
                                    v9 = (int32_t *)(v11 + 4);
                                    v12 = v11;
                                    if (v4 == *v9) {
                                      lab_0x50ae260:
                                        // 0x408341
                                        *v9 = v8;
                                        v12 = g130;
                                        // branch -> 0x408344
                                    }
                                  lab_0x8831310:;
                                    int32_t v15 = *(int32_t *)(v12 + 8); // 0x408344
                                    int32_t v16 = v12; // 0x40834e
                                    if (v15 != 0) {
                                        // 0x40834b
                                        *(int32_t *)v15 = g131;
                                        v16 = g130;
                                        // branch -> 0x40834d
                                    }
                                    int32_t v17 = *(int32_t *)v16; // 0x40834e
                                    function_40a05b(v17, v3);
                                    v7 = v3;
                                    v6 = v17;
                                    // branch -> 0x408355
                                    goto lab_0xa0d48f0;
                                }
                                // 0x40833c
                                v11 = g130;
                                v9 = (int32_t *)(v11 + 4);
                                if (v4 == *v9) {
                                    goto lab_0x50ae260;
                                }
                                v12 = v11;
                                goto lab_0x8831310;
                            }
                            // 0x40833c
                            v11 = g130;
                            v9 = (int32_t *)(v11 + 4);
                            if (v4 == *v9) {
                                goto lab_0x50ae260;
                            }
                            v12 = v11;
                            goto lab_0x8831310;
                        }
                        // 0x40833c
                        v11 = g130;
                        v9 = (int32_t *)(v11 + 4);
                        if (v4 == *v9) {
                            goto lab_0x50ae260;
                        }
                        v12 = v11;
                        goto lab_0x8831310;
                    }
                    // 0x40833c
                    v11 = g130;
                    v9 = (int32_t *)(v11 + 4);
                    if (v4 == *v9) {
                        goto lab_0x50ae260;
                    }
                    v12 = v11;
                    goto lab_0x8831310;
                }
                // 0x40833c
                v11 = g130;
                v9 = (int32_t *)(v11 + 4);
                if (v4 == *v9) {
                    goto lab_0x50ae260;
                }
                v12 = v11;
                goto lab_0x8831310;
            }
            // 0x40833c
            v11 = g130;
            v9 = (int32_t *)(v11 + 4);
            if (v4 == *v9) {
                goto lab_0x50ae260;
            }
            v12 = v11;
            goto lab_0x8831310;
        }
        // 0x40833c
        v11 = g130;
        v9 = (int32_t *)(v11 + 4);
        if (v4 == *v9) {
            goto lab_0x50ae260;
        }
        v12 = v11;
        goto lab_0x8831310;
    }
    // 0x40835b
    g131 = v6;
    // branch -> 0x40835c
    // 0x40835c
    g130 = v7;
}

// Address range: 0x40835e - 0x4083a9
int32_t function_40835e(void) {
    struct struct_0 * v1 = NULL; // bp-16
    int32_t v2 = g116; // bp-8
    function_409cdf((char *)&v2);
    int32_t v3 = g124; // 0x40836a
    g130 = v3;
    int32_t v4 = *(int32_t *)(v3 + 4); // 0x40836c
    struct struct_0 * v5 = (struct struct_0 *)v4; // 0x40836c_1
    *(int32_t *)(v3 + 8) = 0;
    if (v4 == 0) {
        // 0x4083a8
        g130 = (int32_t)v1;
        return (int32_t)v5;
    }
    struct struct_0 * v6; // 0x4083a3_0
    int32_t v7; // 0x408395
    while (true) {
        int32_t v8 = (int32_t)v5; // 0x408378
        int32_t v9 = *(int32_t *)v5; // 0x40837f
        g131 = v9;
        int32_t v10 = g130; // 0x408383
        int32_t v11;
        int32_t v12;
        if (*(int32_t *)(v8 + 12) == v11) {
            int32_t * v13 = (int32_t *)(v10 + 4); // 0x408383_0
            int32_t v14 = v10; // 0x40838b
            if (v8 == *v13) {
                // 0x408388
                *v13 = v9;
                v14 = g130;
                // branch -> 0x40838b
            }
            int32_t v15 = *(int32_t *)(v14 + 8); // 0x40838b
            if (v15 != 0) {
                // 0x408392
                *(int32_t *)v15 = g131;
                v14 = g130;
                // branch -> 0x408394
            }
            // 0x408394
            v1 = v5;
            v7 = *(int32_t *)v14;
            function_40a05b(v7, v8);
            // branch -> 0x4083a1
        } else {
            // 0x40839e
            *(int32_t *)(v10 + 8) = v8;
            v7 = v12;
            // branch -> 0x4083a1
        }
        int32_t v16 = g131; // 0x4083a1
        v6 = (struct struct_0 *)v16;
        if (v16 == 0) {
            // break -> 0x4083a7
            break;
        }
        v12 = v7;
        v5 = v6;
        // continue -> 0x408378
    }
    // 0x4083a7
    g131 = v7;
    // branch -> 0x4083a8
    // 0x4083a8
    g130 = (int32_t)v1;
    return (int32_t)v6;
}

// Address range: 0x4083aa - 0x408462
int32_t function_4083aa(void) {
    int32_t v1 = 0; // bp-8
    g130 = g16;
    LoadLibraryA("COMCTL32.DLL");
    g131 = g17;
    int32_t v2 = g124; // 0x4083d1
    g127 = v2;
    int32_t v3 = 1; // 0x40843e2
    int16_t v4;
    if (v2 != 0) {
        int32_t (*func)() = GetProcAddress((int32_t *)v2, "DllGetVersion"); // 0x4083dd
        int32_t v5 = 1; // 0x40843e1
        if (func != NULL) {
            // 0x4083e6
            int32_t * v6;
            memset(v6, 0, 20);
            ((int32_t (*)(int32_t))func)(20);
            if (g124 >= 0) {
                int32_t v7 = v4; // 0x40840c
                g125 = v7;
                int32_t * v8;
                int32_t v9 = v7 | 0x10000 * (int32_t)v8; // 0x408413
                g124 = v9;
                v5 = v9;
                // branch -> 0x408418
            } else {
                v5 = 1;
            }
        }
        // 0x408418
        FreeLibrary((int32_t *)g127);
        v3 = v5;
        // branch -> 0x40841f
    }
    int32_t * moduleHandle = LoadLibraryA("uxtheme.dll"); // 0x408424
    int32_t v10;
    int32_t v11;
    if (moduleHandle == NULL) {
        // 0x40845b
        g131 = v4;
        g130 = v11;
        g127 = v10;
        return &v1;
    }
    int32_t (*func2)() = GetProcAddress(moduleHandle, "IsAppThemed"); // 0x408432
    if (func2 == NULL) {
        // 0x408454
        FreeLibrary(moduleHandle);
        // branch -> 0x40845b
        // 0x40845b
        g131 = v4;
        g130 = v11;
        g127 = v10;
        return &v1;
    }
    // 0x408438
    func2();
    if (g124 == 0 || v3 < 0x60000) {
        // 0x408450
        v1 = 0;
        // branch -> 0x408454
    } else {
        // 0x408447
        v1 = 1;
        // branch -> 0x408454
    }
    // 0x408454
    FreeLibrary(moduleHandle);
    // branch -> 0x40845b
    // 0x40845b
    g131 = v4;
    g130 = v11;
    g127 = v10;
    return &v1;
}

// Address range: 0x408463 - 0x4084f0
int32_t function_408463(void) {
    int32_t v1 = g131; // 0x40846e
    LoadLibraryA("msimg32.dll");
    g131 = 0;
    int32_t v2 = g124; // 0x40847c
    g84 = v2;
    if (v2 != 0) {
        // 0x408485
        g85 = (int32_t)GetProcAddress((int32_t *)v2, "AlphaBlend");
        // branch -> 0x408496
    }
    // 0x408496
    g83 = 1;
    bool v3 = GetVersionExA((int32_t *)148); // 0x4084ab
    int32_t result = v3; // 0x4084ab_3
    int32_t v4; // 0x4084dc
    int32_t result2; // 0x4084f0_11
    if (v3 == false) {
        // 0x4084d4
        if (g83 == g131) {
            // 0x4084eb
            g131 = v1;
            return result;
        }
        // 0x4084dc
        v4 = function_4083aa();
        result2 = v4;
        if (v4 == 0) {
            // 0x4084e5
            g83 = g131;
            result2 = 0;
            // branch -> 0x4084eb
        }
        // 0x4084eb
        g131 = v1;
        return result2;
    }
    // 0x4084b5
    int32_t v5;
    switch (v5) {
        case 1: {
            // 0x4084e5
            g83 = g131;
            // branch -> 0x4084eb
            // 0x4084eb
            g131 = v1;
            return result;
        }
        case 2: {
            // 0x4084c1
            uint32_t v6;
            if (v6 < 5) {
                // 0x4084e5
                g83 = g131;
                result2 = result;
                // branch -> 0x4084eb
            } else {
                // 0x4084c7
                int32_t v7;
                if (v6 == 5 && v7 == g131) {
                    // 0x4084ce
                    g83 = v7;
                    // branch -> 0x4084d4
                }
                // 0x4084d4
                if (g83 != g131) {
                    // 0x4084dc
                    v4 = function_4083aa();
                    if (v4 == 0) {
                        // 0x4084e5
                        g83 = g131;
                        result2 = 0;
                        // branch -> 0x4084eb
                    } else {
                        result2 = v4;
                    }
                } else {
                    result2 = result;
                }
            }
            // 0x4084eb
            g131 = v1;
            return result2;
        }
    }
    // 0x4084d4
    if (g83 == g131) {
        // 0x4084eb
        g131 = v1;
        return result;
    }
    // 0x4084dc
    v4 = function_4083aa();
    result2 = v4;
    if (v4 == 0) {
        // 0x4084e5
        g83 = g131;
        result2 = 0;
        // branch -> 0x4084eb
    }
    // 0x4084eb
    g131 = v1;
    return result2;
}

// Address range: 0x4084f1 - 0x4084fd
void function_4084f1(void) {
    // 0x4084f1
    FreeLibrary((int32_t *)g84);
}

// Address range: 0x4084fe - 0x4085c8
void function_4084fe(void) {
    g130 = 0;
    g131 = 0;
    int32_t * h;
    int32_t * pv;
    GetObjectA(h, 24, pv);
    int32_t v1;
    if (g124 == 0) {
        // 0x4085c3
        g131 = (int32_t)(int32_t *)24;
        g130 = v1;
        return;
    }
    int32_t v2 = g130; // 0x408521
    int32_t v3;
    int32_t v4 = &v3; // 0x408521_0
    int32_t * v5;
    if (v4 != v2) {
        // 0x408529
        g131 = v4;
        *v5 = v2;
        // branch -> 0x4085c3
        // 0x4085c3
        g131 = (int32_t)(int32_t *)24;
        g130 = v1;
        return;
    }
    // 0x408533
    *v5 = 1;
    int32_t hdc = (int32_t)pv; // 0x40853a
    int32_t hdc2 = CreateCompatibleDC(hdc); // 0x40853a
    int32_t * v6;
    int32_t v7; // 0x4085c62
    if (hdc2 != g130) {
        // 0x408547
        function_408def((int32_t)v6, hdc);
        int32_t * v8;
        int32_t cLines = (int32_t)v8; // 0x408554
        char v9 = *(char *)g34;
        int32_t v10 = HeapAlloc((int32_t)v9, g130, g124 * cLines); // 0x408560
        g131 = v10;
        int32_t start = g130; // 0x408568
        if (v10 != start) {
            // 0x40856c
            if (GetDIBits((int32_t *)hdc2, h, start, cLines, (int32_t *)v10, (int32_t *)40, start) == 0) {
                // 0x4085aa
                HeapFree((int32_t)*(char *)g34, 40, (char *)g131);
                g131 = 0;
                // branch -> 0x4085ba
            }
        }
        // 0x4085ba
        DeleteDC(hdc2);
        uint16_t v11;
        v7 = v11;
        // branch -> 0x4085c3
    } else {
        v7 = v2;
        v6 = (int32_t *)0x408540;
    }
    // 0x4085c3
    g131 = (int32_t)v6;
    g130 = v7;
}

// Address range: 0x4085cb - 0x4085da
void function_4085cb(void) {
    // 0x4085cb
    return;
}

// Address range: 0x4085dd - 0x40868d
void function_4085dd(void) {
    // 0x4085dd
    g127 = 0;
    if (g85 == 0) {
        // 0x40868b
        return;
    }
    // 0x4085f2
    int32_t v1; // 0x408642_0
    int32_t v2; // 0x408626
    int32_t v3;
    int32_t * v4;
    int32_t * v5;
    int32_t * h;
    int32_t * v6;
    int32_t v7;
    unsigned char v8;
    int32_t v9;
    int32_t hdc;
    int32_t v10;
    int32_t v11; // 0x40863c
    int32_t v12; // 0x40861c
    int32_t v13; // 0x408648
    if (v4 == NULL || v5 == NULL) {
        // 0x4085fc
        int32_t * pv;
        if (GetObjectA(h, 24, pv) != 0) {
            // branch -> 0x40861b
        }
        // 0x40861b
        v12 = (int32_t)v6;
        g131 = v12;
        v11 = v12;
        if (v12 == g127) {
            // 0x408623
            v2 = CreateCompatibleDC(hdc);
            g131 = v2;
            if (v2 == g127) {
                // 0x40868a
                g131 = v9;
                // branch -> 0x40868b
                // 0x40868b
                return;
            }
            v11 = v2;
        }
        // 0x408632
        g130 = g33;
        v1 = (int32_t)SelectObject((int32_t *)v11, h);
        g124 = v1 & -256 | (int32_t)v8;
        v13 = g127;
        ((int32_t (*)(int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t))g85)(hdc, v10, v3, (int32_t)v4, (int32_t)v5, g131, v13, v13);
        if (v12 == g127) {
            // 0x408678
            DeleteDC(g131);
            // branch -> 0x408689
        } else {
            // 0x408681
            ((int32_t (*)(int32_t, int32_t))g130)(v12, v1);
            // branch -> 0x408689
        }
        // 0x408689
        g130 = v7;
        // branch -> 0x40868a
        // 0x40868a
        g131 = v9;
        // branch -> 0x40868b
        // 0x40868b
        return;
    }
    // 0x40861b
    v12 = (int32_t)v6;
    g131 = v12;
    v11 = v12;
    if (v12 == g127) {
        // 0x408623
        v2 = CreateCompatibleDC(hdc);
        g131 = v2;
        if (v2 == g127) {
            // 0x40868a
            g131 = v9;
            // branch -> 0x40868b
            // 0x40868b
            return;
        }
        v11 = v2;
    }
    // 0x408632
    g130 = g33;
    v1 = (int32_t)SelectObject((int32_t *)v11, h);
    g124 = v1 & -256 | (int32_t)v8;
    v13 = g127;
    ((int32_t (*)(int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t))g85)(hdc, v10, v3, (int32_t)v4, (int32_t)v5, g131, v13, v13);
    if (v12 == g127) {
        // 0x408678
        DeleteDC(g131);
        // branch -> 0x408689
    } else {
        // 0x408681
        ((int32_t (*)(int32_t, int32_t))g130)(v12, v1);
        // branch -> 0x408689
    }
    // 0x408689
    g130 = v7;
    // branch -> 0x40868a
    // 0x40868a
    g131 = v9;
    // branch -> 0x40868b
}

// Address range: 0x408690 - 0x408692
void function_408690(void) {
    // 0x408690
    return;
}

// Address range: 0x408693 - 0x4086b7
void function_408693(void) {
    // 0x408693
    float64_t v1;
    fabs(v1);
    if (g4 < 1.0) {
        // after_if_4086a4_0
        return;
    }
    // if_4086a4_0_false
    if (g4 <= 1.0) {
        // if_4086a4_1_false
        // branch -> after_if_4086a4_0
    }
}

// Address range: 0x4086b8 - 0x4086be
void function_4086b8(void) {
    // 0x4086b8
    return;
}

// Address range: 0x4086bf - 0x40876d
void function_4086bf(void) {
    // 0x4086bf
    float64_t v1;
    float80_t v2 = v1; // 0x4086bf
    g82 = (float64_t)((6.0 - 2 * v2) / 6.0);
    float64_t v3;
    float80_t v4 = v3; // 0x4086db
    float80_t v5 = 6.0 * v4; // 0x4086e1
    g81 = (float64_t)((v5 + 12.0 * v2 - 18.0) / 6.0);
    g80 = (float64_t)((12.0 - 9.0 * v2 - v5) / 6.0);
    g79 = (float64_t)((8.0 * v2 + 24.0 * v4) / 6.0);
    g78 = (float64_t)((-12.0 * v2 - 48.0 * v4) / 6.0);
    float80_t v6 = 30.0 * v4; // 0x40874d
    g2 = v6;
    float80_t v7 = (6.0 * v2 + v6) / 6.0; // 0x408757
    g3 = v7;
    g77 = v7;
    g76 = (float64_t)((-v2 - v5) / 6.0);
}

// Address range: 0x40876e - 0x4087d6
void function_40876e(void) {
    // 0x40876e
    float64_t v1;
    fabs(v1);
    if (g4 < 1.0) {
        // after_if_40877f_0
        if (g4 < 2.0) {
            // after_if_4087aa_0
            g4 = 0.0;
            return;
        }
        // if_4087aa_0_false
        if (g4 <= 2.0) {
            // if_4087aa_1_false
            // branch -> after_if_4087aa_0
        }
        // after_if_4087aa_0
        g4 = 0.0;
        return;
    }
    // if_40877f_0_false
    if (g4 <= 1.0) {
        // if_40877f_1_false
        // branch -> after_if_40877f_0
    }
    // after_if_40877f_0
    if (g4 < 2.0) {
        // after_if_4087aa_0
        g4 = 0.0;
        return;
    }
    // if_4087aa_0_false
    if (g4 <= 2.0) {
        // if_4087aa_1_false
        // branch -> after_if_4087aa_0
    }
    // after_if_4087aa_0
    g4 = 0.0;
}

// Address range: 0x4087d7 - 0x4089eb
void function_4087d7(void) {
    int32_t v1 = 0;
    int32_t v2;
    g130 = v2;
    int32_t v3;
    if (v3 != 0) {
        // 0x4087ee
        function_4086bf();
        // branch -> 0x40880e
    }
    // 0x40880e
    int32_t v4;
    float80_t v5 = (float80_t)v2 / (float80_t)v4; // 0x408811
    float64_t v6 = v5; // 0x408814
    int32_t v7; // 0x408871
    int32_t * v8; // bp+732
    int32_t * mem; // 0x408852
    int32_t v9;
    struct struct_24 * v10; // bp-8
    int32_t v11;
    int32_t v12; // 0x40885a
    int32_t v13; // 0x408875
    int32_t size; // 0x408847
    int32_t v14; // 0x408904
    int32_t v15; // 0x408897
    int32_t v16; // 0x40884a39
    int32_t size2; // 0x408866
    float80_t v17; // 0x408887
    float64_t v18; // 0x4088a8
    float64_t v19; // 0x4088b1
    float64_t v20; // 0x4088e834
    int32_t v21; // 0x4089d337
    float80_t v22; // 0x40888a
    float80_t v23; // 0x40888c
    float80_t v24; // 0x4088a5
    if (v5 < 1.0) {
        // after_if_408819_0
        g124 = 0x2000 | g124 & -0x10000;
        v20 = g5;
        ceil(v20);
        function_40a930();
        *(int32_t *)g131 = g130;
        size = 12 * g130;
        g130 = size;
        v16 = 2 * g124 | 1;
        mem = malloc(size);
        v12 = g131;
        if (*(int32_t *)v12 <= v1) {
            // 0x40887a
            v17 = v6;
            v22 = 0.5 / v17;
            g4 = v22;
            v23 = v22 - 0.5;
            g5 = v23;
            if (*(int32_t *)v12 < 1) {
                // 0x40887a
                // branch -> 0x4089e5
            } else {
                // 0x408897
                v15 = (int32_t)mem;
                g124 = v15;
                v10 = (struct struct_24 *)mem;
                v14 = v4 - 1;
                v21 = 0;
                // branch -> 0x40889d
                while (true) {
                    // 0x40889d
                    v24 = (float80_t)(float64_t)v23 + (float80_t)v21 / v17;
                    v18 = v24;
                    v19 = v18 - v20;
                    floor(v19);
                    function_40a930();
                    if (g124 > -1) {
                        goto lab_0x513e460;
                    }
                    v11 = 0;
                    goto lab_0x513efa0;
                }
            }
            // 0x4089e5
            g124 = (int32_t)mem;
            g130 = (float32_t)v23;
            g127 = v9;
            return;
        }
        // 0x408863
        size2 = 8 * v16;
        v8 = mem;
        *v8 = (int32_t)malloc(size2);
        v7 = v1 + 1;
        v13 = g131;
        g125 = size2;
        // branch -> 0x408863
        while (v7 < *(int32_t *)v13) {
            // 0x408863
            v8 = (int32_t *)((int32_t)v8 + 12);
            *v8 = (int32_t)malloc(size2);
            v7++;
            v13 = g131;
            g125 = size2;
            // continue -> 0x408863
        }
        // 0x40887a
        v17 = v6;
        v22 = 0.5 / v17;
        g4 = v22;
        v23 = v22 - 0.5;
        g5 = v23;
        if (*(int32_t *)v13 < 1) {
            // 0x40887a
            // branch -> 0x4089e5
        } else {
            // 0x408897
            v15 = (int32_t)mem;
            g124 = v15;
            v10 = (struct struct_24 *)mem;
            v14 = v4 - 1;
            v21 = 0;
            // branch -> 0x40889d
            while (true) {
                // 0x40889d
                v24 = (float80_t)(float64_t)v23 + (float80_t)v21 / v17;
                v18 = v24;
                v19 = v18 - v20;
                floor(v19);
                function_40a930();
                if (g124 > -1) {
                    goto lab_0x513e460;
                }
                v11 = 0;
                goto lab_0x513efa0;
            }
        }
        // 0x4089e5
        g124 = (int32_t)mem;
        g130 = (float32_t)v23;
        g127 = v9;
        return;
    }
    // if_408819_0_false
    int32_t v25;
    int32_t v26;
    int32_t v27; // 0x40881b
    if (v5 <= 1.0) {
        // if_408819_1_false
        v26 = v5 != 1.0 ? 1024 : 0;
        v25 = v5 != 1.0 ? 256 : 0;
        v27 = 0x6000;
        // branch -> after_if_408819_0
    } else {
        v26 = 0;
        v25 = 256;
        v27 = 0x2000;
    }
    // after_if_408819_0
    g124 = v27 | v26 | v25 | g124 & -0x10000;
    v20 = g5;
    ceil(v20);
    function_40a930();
    *(int32_t *)g131 = g130;
    size = 12 * g130;
    g130 = size;
    v16 = 2 * g124 | 1;
    mem = malloc(size);
    v12 = g131;
    if (*(int32_t *)v12 <= v1) {
        // 0x40887a
        v17 = v6;
        v22 = 0.5 / v17;
        g4 = v22;
        v23 = v22 - 0.5;
        g5 = v23;
        if (*(int32_t *)v12 < 1) {
            // 0x40887a
            // branch -> 0x4089e5
        } else {
            // 0x408897
            v15 = (int32_t)mem;
            g124 = v15;
            v10 = (struct struct_24 *)mem;
            v14 = v4 - 1;
            v21 = 0;
            // branch -> 0x40889d
            while (true) {
                // 0x40889d
                v24 = (float80_t)(float64_t)v23 + (float80_t)v21 / v17;
                v18 = v24;
                v19 = v18 - v20;
                floor(v19);
                function_40a930();
                if (g124 > -1) {
                    goto lab_0x513e460;
                }
                v11 = 0;
                goto lab_0x513efa0;
            }
        }
        // 0x4089e5
        g124 = (int32_t)mem;
        g130 = (float32_t)v23;
        g127 = v9;
        return;
    }
    // 0x408863
    size2 = 8 * v16;
    v8 = mem;
    *v8 = (int32_t)malloc(size2);
    v7 = v1 + 1;
    v13 = g131;
    g125 = size2;
    // branch -> 0x408863
    while (v7 < *(int32_t *)v13) {
        // 0x408863
        v8 = (int32_t *)((int32_t)v8 + 12);
        *v8 = (int32_t)malloc(size2);
        v7++;
        v13 = g131;
        g125 = size2;
        // continue -> 0x408863
    }
    // 0x40887a
    v17 = v6;
    v22 = 0.5 / v17;
    g4 = v22;
    v23 = v22 - 0.5;
    g5 = v23;
    if (*(int32_t *)v13 < 1) {
        // 0x40887a
        // branch -> 0x4089e5
        // 0x4089e5
        g124 = (int32_t)mem;
        g130 = (float32_t)v23;
        g127 = v9;
        return;
    }
    // 0x408897
    v15 = (int32_t)mem;
    g124 = v15;
    v10 = (struct struct_24 *)mem;
    v14 = v4 - 1;
    v21 = 0;
    // branch -> 0x40889d
    while (true) {
        // 0x40889d
        v24 = (float80_t)(float64_t)v23 + (float80_t)v21 / v17;
        v18 = v24;
        v19 = v18 - v20;
        floor(v19);
        function_40a930();
        v11 = 0;
        if (g124 > -1) {
          lab_0x513e460:
            // 0x4088ce
            floor(v19);
            function_40a930();
            v11 = g124;
            // branch -> 0x4088e4
        }
      lab_0x513efa0:
        // 0x4088e4
        v1 = v11;
        float64_t v28 = v20 + v18; // 0x4088ec
        ceil(v28);
        function_40a930();
        g130 = v14;
        int32_t v29 = v14; // 0x408931
        if (g124 < v14) {
            // 0x408909
            ceil(v28);
            function_40a930();
            int32_t v30 = g124; // 0x40891d
            g130 = v30;
            v29 = v30;
            // branch -> 0x40891f
        }
        int32_t v31 = v1; // 0x408921
        int32_t v32 = v29; // 0x408932
        int32_t v33 = v31; // 0x40893c
        int32_t v34; // 0x408936
        if (v29 - v31 + 1 > v16) {
            // 0x408929
            if (v31 < v4) {
                int32_t v35 = v31 + 1; // 0x40892e
                v1 = v35;
                v32 = v29;
                v33 = v35;
                // branch -> 0x408932
            } else {
                int32_t v36 = v29 - 1; // 0x408931
                g130 = v36;
                v32 = v36;
                v33 = v31;
                // branch -> 0x408932
            }
            // 0x408932
            g5 = 0.0;
            v34 = (int32_t)v10;
            *(int32_t *)(v34 + 4) = v33;
            v10->e1 = g130;
            if (v33 <= v32) {
              lab_0x119bd450:;
                int32_t v37 = *(int32_t *)v34; // 0x40894b
                g124 = v37;
                int32_t v38 = g125; // 0x40895b
                int32_t v39 = v1; // 0x40899a38
                float64_t v40 = 0.0; // 0x4089a233
                // branch -> 0x408954
                int32_t v41; // 0x40899a
                float80_t v42; // 0x40899f
                while (true) {
                    float80_t v43 = v24 - (float80_t)v39; // 0x40895d
                    int32_t v44; // 0x408993
                    int32_t v45; // 0x408996
                    int32_t v46; // 0x40895b47
                    float64_t v47; // 0x4089a2
                    if (v3 == 0) {
                        // 0x408968
                        fabs((float64_t)v43);
                        float80_t v48 = g2; // 0x40896f
                        int32_t v49 = 0;
                        int32_t v50 = 0;
                        int32_t v51 = 0; // 0x408973
                        if (v48 >= 1.0) {
                            // if_40896f_0_false
                            if (v48 <= 1.0) {
                                // if_40896f_1_false
                                v49 = v48 != 1.0 ? 1024 : 0;
                                v50 = v48 != 1.0 ? 256 : 0;
                                v51 = 0x4000;
                                // branch -> after_if_40896f_0
                            } else {
                                v49 = 0;
                                v50 = 256;
                                v51 = 0;
                            }
                        }
                        // after_if_40896f_0
                        g125 = v38;
                        if ((v49 || v51 || v50 || g124 & -0x10000) == 0x4100) {
                            // 0x40897a
                            g2 = 1.0 - v48;
                            v46 = v38;
                            // branch -> 0x40898d
                        } else {
                            // 0x40897e
                            g3 = 0.0;
                            v46 = v38;
                            // branch -> 0x40898d
                        }
                      lab_0x514c5b0:
                        // 0x40898d
                        g124 = v37;
                        v44 = v39 + 1;
                        v45 = v37 + 8;
                        v41 = g130;
                        *(float64_t *)v37 = (float64_t)g3;
                        v42 = (float80_t)v40 + g3;
                        g3 = v42;
                        v47 = v42;
                        if (v44 > v41) {
                            // break -> 0x4089a7
                            break;
                        }
                        v38 = v46;
                        v39 = v44;
                        v37 = v45;
                        v40 = v47;
                        // continue -> 0x408954
                        continue;
                    } else {
                        // 0x408986
                        function_40876e();
                        g125 = g127;
                        v46 = g127;
                        // branch -> 0x40898d
                        goto lab_0x514c5b0;
                    }
                    float80_t v52 = g3; // 0x40898d
                    g124 = v37;
                    v44 = v39 + 1;
                    v45 = v37 + 8;
                    v41 = g130;
                    float64_t * v53; // bp+436
                    *v53 = (float64_t)v52;
                    float80_t v54 = g3; // 0x40899f
                    v42 = (float80_t)v40 + v54;
                    g3 = v42;
                    v47 = v42;
                    if (v44 > v41) {
                        // break -> 0x4089a7
                        break;
                    }
                    v38 = v46;
                    v39 = v44;
                    v37 = v45;
                    v40 = v47;
                    // continue -> 0x408954
                }
                // 0x4089a7
                g2 = 0.0;
                int32_t v55 = 0;
                int32_t v56 = 0;
                if (v42 >= 0.0) {
                    // if_4089a9_0_false
                    if (v42 <= 0.0) {
                        // if_4089a9_1_false
                        v55 = v42 != 0.0 ? 1024 : 0;
                        v56 = v42 != 0.0 ? 256 : 0;
                        // branch -> after_if_4089a9_0
                    } else {
                        v55 = 0;
                        v56 = 256;
                    }
                }
                // after_if_4089a9_0
                if (llvm_ctpop_i8((char)((v56 || v55) / 256)) % 2 != 1) {
                    // 0x4089b2
                    g2 = 1.0;
                    int32_t v57 = 0;
                    int32_t v58 = 0; // 0x4089b6
                    if (v42 >= 1.0) {
                        // if_4089b4_0_false
                        if (v42 <= 1.0) {
                            // if_4089b4_1_false
                            v57 = v42 != 1.0 ? 1024 : 0;
                            v58 = 0x4000;
                            // branch -> after_if_4089b4_0
                        } else {
                            v57 = 0;
                            v58 = 0;
                        }
                    }
                    // after_if_4089b4_0
                    if (llvm_ctpop_i8((char)((v57 || v58) / 256)) % 2 == 1) {
                        int32_t v59 = *(int32_t *)v10; // 0x4089c0
                        g130 = v41 + 1 - v1;
                        struct struct_24 * v60 = v10;
                        // branch -> 0x4089c5
                        while (true) {
                            int32_t * v61 = v60->e0[v59].e0; // 0x4089c5
                            float80_t v62 = (float80_t)(int80_t)(int32_t)v61 / v42; // 0x4089c7
                            g2 = v62;
                            v60->e0[v59].e0 = (int32_t *)(int32_t)(float32_t)v62;
                            int32_t v63 = v59 + 8; // 0x4089cb
                            v59 = v63;
                            int32_t v64 = g130 - 1; // 0x4089ce
                            g130 = v64;
                            if (v64 != 0) {
                                // 0x4089c5
                                v42 = g3;
                                v59 = v63;
                                v60 = v10;
                                // branch -> 0x4089c5
                                continue;
                            }
                        }
                    }
                }
            }
          lab_0xa52ab50:;
            int32_t v65 = v21 + 1; // 0x4089d3
            g124 = v65;
            v10 = (struct struct_24 *)((int32_t)v10 + 12);
            if (v65 >= *(int32_t *)g131) {
                // break -> 0x4089e5
                break;
            }
            v21 = v65;
            // continue -> 0x40889d
            continue;
        }
        // 0x408932
        g5 = 0.0;
        v34 = (int32_t)v10;
        *(int32_t *)(v34 + 4) = v33;
        v10->e1 = g130;
        if (v33 > v32) {
            goto lab_0xa52ab50;
        }
        goto lab_0x119bd450;
    }
    // 0x4089e5
    g124 = v15;
    g130 = (float32_t)v23;
    g127 = v9;
}

// Address range: 0x4089ec - 0x408a1a
void function_4089ec(void) {
    int32_t v1 = g131; // 0x4089ec
    g131 = g124;
    int32_t * v2;
    if (g124 < 1) {
        // 0x408a07
        g131 = v1;
        free(v2);
        return;
    }
    int32_t v3 = g130; // 0x4089f3
    int32_t ** v4;
    g130 = (int32_t)*v4;
    free(*v4);
    g130 += 12;
    int32_t v5 = g131 - 1; // 0x408a026
    g131 = v5;
    if (v5 == 0) {
        // 0x408a06
        g130 = v3;
        // branch -> 0x408a07
        // 0x408a07
        g131 = v1;
        free(v2);
        return;
    }
    free(*v4);
    g130 += 12;
    int32_t v6 = g131 - 1; // 0x408a02
    g131 = v6;
    while (v6 != 0) {
        // 0x4089f8
        free(*v4);
        g130 += 12;
        v6 = g131 - 1;
        g131 = v6;
        // continue -> 0x4089f8
    }
    // 0x408a06
    g130 = v3;
    // branch -> 0x408a07
    // 0x408a07
    g131 = v1;
    free(v2);
}

// Address range: 0x408a1b - 0x408a22
void function_408a1b(void) {
    // 0x408a1b
    return;
}

// Address range: 0x408a23 - 0x408a2a
void function_408a23(void) {
    // 0x408a23
    return;
}

// Address range: 0x408a2b - 0x408b6c
void function_408a2b(void) {
    int32_t v1 = g127; // 0x408a31
    int32_t v2 = g130; // 0x408a32
    int32_t * v3;
    int32_t v4 = (int32_t)v3; // 0x408a33
    g130 = v4;
    int32_t v5 = g131; // 0x408a36
    g127 = g124;
    function_4087d7();
    int32_t v6 = g124; // 0x408a4a
    struct struct_26 * v7 = (struct struct_26 *)v6; // 0x408a4c_0
    if (v6 == 0) {
        // 0x408b68
        g131 = v5;
        g130 = v2;
        g127 = v1;
        return;
    }
    int32_t v8;
    float64_t v9;
    if (g127 >= 1) {
        // 0x408a5d
        uint32_t v10;
        int32_t v11 = g130 * v10; // 0x408a5d
        g130 = v11;
        g2 = 0.0;
        int32_t v12 = (int32_t)(float32_t)NULL->e0[0].e0 * v10; // 0x408a66
        int32_t v13 = v11; // 0x408b4e15
        int32_t v14 = g127; // 0x408b515
        // branch -> 0x408a7f
      lab_0x51ab4c0:
        while (true) {
            // 0x408a7f
            char * v15;
            int32_t v16 = (int32_t)v15;
            int32_t v17 = v13; // 0x408b4e
            int32_t v18;
            int32_t v19; // 0x408b51
            if (v3 >= (int32_t *)1) {
                float64_t v20 = v7->e0[0].e0;
                int32_t v21 = (int32_t)(float32_t)v20 + 8; // 0x408a95
                int32_t v22 = v16;
                // branch -> 0x408ac2
                while (true) {
                    int32_t v23 = (int32_t)(float32_t)v20 * v10 + v18; // 0x408ab9
                    float80_t v24 = v20; // 0x408ac2
                    g131 = 0;
                    if (v10 < 1) {
                        // 0x408af5
                        g131 = 0;
                        // branch -> 0x408b36
                    } else {
                        int32_t v25 = 0; // 0x408acb
                        unsigned char v26 = *(char *)(v25 + v23); // 0x408acb
                        int32_t v27 = v25 + 1; // 0x408ad6
                        g131 = v27;
                        float80_t v28 = (float80_t)(float64_t)g2 + v24 * (float80_t)(int32_t)v26; // 0x408adf
                        // branch -> 0x408acb
                        while (v27 != v10) {
                            // 0x408acb
                            g5 = v28;
                            v25 = v27;
                            v26 = *(char *)(v25 + v23);
                            v27 = v25 + 1;
                            g131 = v27;
                            v28 = (float80_t)(float64_t)v28 + v24 * (float80_t)(int32_t)v26;
                            // continue -> 0x408acb
                        }
                        // 0x408afc
                        g130 = v11;
                        g131 = 0;
                        g124 = v22;
                        // branch -> 0x408b02
                        while (true) {
                            // 0x408b02
                            function_40a930();
                            int32_t v29 = g124; // 0x408b11
                            int32_t v30; // 0x408b2b
                            int32_t v31; // 0x408b2c
                            if (v29 < 0) {
                                // 0x408b22
                                g124 = 0;
                                // branch -> 0x408b28
                            } else {
                                // 0x408b15
                                char v32; // 0x408b32
                                if (v29 > 254) {
                                    // 0x408b26
                                    g124 = 255;
                                    v32 = -1;
                                    // branch -> 0x408b28
                                } else {
                                    // 0x408b1e
                                    v32 = v29;
                                    // branch -> 0x408b28
                                }
                                // 0x408b28
                                v30 = g131 + 1;
                                g131 = v30;
                                v31 = v22 + 1;
                                *(char *)v22 = v32;
                                if (v30 >= v10) {
                                    // break -> 0x408b36
                                    break;
                                }
                                v22 = v31;
                                // continue -> 0x408b02
                                continue;
                            }
                            // 0x408b28
                            v30 = g131 + 1;
                            g131 = v30;
                            v31 = v22 + 1;
                            *(char *)v22 = 0;
                            if (v30 >= v10) {
                                // break -> 0x408b36
                                break;
                            }
                            v22 = v31;
                            // continue -> 0x408b02
                        }
                        // 0x408b36
                        // branch -> 0x408b36
                    }
                    int32_t v33 = v21 + 12; // 0x408b3c
                    int32_t v34 = v4 - 1; // 0x408b3f
                    if (v34 == 0) {
                        // 0x408b48
                        v17 = g130;
                        // branch -> 0x408b4b
                        // 0x408b4b
                        v19 = v14 - 1;
                        if (v19 == 0) {
                            // break (via goto) -> 0x408b5c
                            goto lab_0x8400ae0;
                        }
                        v13 = v17;
                        v18 += v12;
                        v15 = (char *)(v17 + v16);
                        v14 = v19;
                        // continue (via goto) -> 0x408a7f
                        goto lab_0x51ab4c0;
                    } else {
                        // 0x408b36
                        v21 = v33;
                        v20 = v7->e0[0].e0;
                        v22 += v10;
                        v4 = v34;
                        // branch -> 0x408ac2
                        continue;
                    }
                }
                struct struct_26 * v35 = v7;
                v7 = v35;
                // branch -> 0x408b5c
                // 0x408b5c
                v9 = v7->e0[0].e0;
                struct struct_26 * v36 = (struct struct_26 *)(int32_t)(float32_t)v9; // bp-96
                g124 = v8;
                function_4089ec();
                struct struct_26 * v37 = v36;
                float64_t v38 = v37->e0[0].e0;
                g125 = (float32_t)v38;
                // branch -> 0x408b68
                // 0x408b68
                g131 = v5;
                g130 = v2;
                g127 = v1;
                return;
            }
            // 0x408b4b
            v19 = v14 - 1;
            if (v19 == 0) {
                // break -> 0x408b5c
                break;
            }
            v13 = v17;
            v18 += v12;
            v15 = (char *)(v17 + v16);
            v14 = v19;
            // continue -> 0x408a7f
        }
      lab_0x8400ae0:;
        // 0x408b5c
        // branch -> 0x408b5c
    }
    // 0x408b5c
    v9 = v7->e0[0].e0;
    g124 = v8;
    function_4089ec();
    g125 = (float32_t)((struct struct_26 *)(int32_t)(float32_t)v9)->e0[0].e0;
    // branch -> 0x408b68
    // 0x408b68
    g131 = v5;
    g130 = v2;
    g127 = v1;
}

// Address range: 0x408b6d - 0x408caf
void function_408b6d(void) {
    int32_t v1 = g131; // 0x408b73
    function_4087d7();
    int32_t v2 = g124; // 0x408b87
    struct struct_26 * v3 = (struct struct_26 *)v2; // 0x408b89_0
    if (v2 == 0) {
        // 0x408cad
        g131 = v1;
        return;
    }
    uint32_t v4;
    if (v4 >= 1) {
        // 0x408b9d
        g1 = 0.0;
        int32_t v5 = g130; // 0x408ba7
        uint32_t v6;
        int32_t v7 = v6 * v4; // 0x408bb6
        int32_t v8;
        int32_t v9 = v6 * v8; // 0x408be1
        int32_t v10 = 0; // 0x408c9110
        // branch -> 0x408ba8
        while (true) {
            // 0x408ba8
            int32_t * v11;
            if (v11 >= (int32_t *)1) {
                // 0x408bb3
                g131 = v7;
                float64_t v12 = v3->e0[0].e0;
                int32_t v13 = (int32_t)(float32_t)v12 + 8; // 0x408bc6
                g130 = v13;
                int32_t v14 = (int32_t)v11;
                // branch -> 0x408c00
                while (true) {
                    // 0x408c00
                    int32_t v15;
                    int32_t v16 = v10 + v15 + v9 * (int32_t)(float32_t)v12; // 0x408bf6
                    g131 = (float32_t)v12;
                    float80_t v17 = v12; // 0x408c00
                    g5 = v17;
                    int32_t v18;
                    int32_t v19; // 0x408c82
                    int32_t v20; // 0x408c7f
                    if (v6 < 1) {
                        // 0x408c3b
                        g131 = v7;
                        v19 = v13;
                        v20 = v7;
                        // branch -> 0x408c7f
                    } else {
                        int32_t v21 = 0; // 0x408c10
                        unsigned char v22 = *(char *)(v21 + v16); // 0x408c10
                        int32_t v23 = v21 + 1; // 0x408c1a
                        char v24 = *(char *)(int32_t)v22; // 0x408c1e
                        float64_t v25 = (float80_t)(float64_t)g1 + v17 * (float80_t)v24; // 0x408c28
                        // branch -> 0x408c0c
                        while (v23 != v6) {
                            // 0x408c0c
                            v21 = v23;
                            v22 = *(char *)(v21 + v16);
                            v23 = v21 + 1;
                            v24 = *(char *)(int32_t)v22;
                            v25 = (float80_t)v25 + v17 * (float80_t)v24;
                            // continue -> 0x408c0c
                        }
                        // 0x408c42
                        g131 = v7;
                        int32_t v26 = 0;
                        int32_t v27 = v18 + v10; // 0x408c48
                        g124 = v27;
                        char * v28 = (char *)v27; // bp-36
                        // branch -> 0x408c4d
                        while (true) {
                            // 0x408c4d
                            g5 = (float80_t)v25 + 0.5;
                            function_40a930();
                            int32_t v29 = g124; // 0x408c5c
                            int32_t v30; // 0x408c79
                            if (v29 < 0) {
                                // 0x408c6d
                                g124 = 0;
                                // branch -> 0x408c73
                            } else {
                                // 0x408c60
                                char v31; // 0x408c76
                                if (v29 > 254) {
                                    // 0x408c71
                                    g124 = 255;
                                    v31 = -1;
                                    // branch -> 0x408c73
                                } else {
                                    // 0x408c69
                                    v31 = v29;
                                    // branch -> 0x408c73
                                }
                                // 0x408c73
                                v28[v26] = v31;
                                v30 = v26 + 1;
                                v26 = v30;
                                if (v30 >= v6) {
                                    // break -> 0x408c7f
                                    break;
                                }
                                // continue -> 0x408c4d
                                continue;
                            }
                            // 0x408c73
                            v28[v26] = 0;
                            v30 = v26 + 1;
                            v26 = v30;
                            if (v30 >= v6) {
                                // break -> 0x408c7f
                                break;
                            }
                            // continue -> 0x408c4d
                        }
                        // 0x408c7f
                        v19 = g130;
                        v20 = g131;
                        // branch -> 0x408c7f
                    }
                    int32_t v32 = v19 + 12; // 0x408c82
                    g130 = v32;
                    int32_t v33 = v14 - 1; // 0x408c85
                    if (v33 != 0) {
                        // 0x408c7f
                        v13 = v32;
                        v12 = v3->e0[0].e0;
                        v18 += v20;
                        v14 = v33;
                        // branch -> 0x408c00
                        continue;
                    }
                }
            }
            int32_t v34 = v4 - 1; // 0x408c94
            if (v34 == 0) {
                // break -> 0x408c9d
                break;
            }
            v10 += v6;
            v4 = v34;
            // continue -> 0x408ba8
        }
        // 0x408c9d
        g130 = v5;
        g127 = (float32_t)((struct struct_26 *)g127)->e0[0].e0;
        // branch -> 0x408ca1
    }
    // 0x408ca1
    int32_t v35;
    g124 = v35;
    function_4089ec();
    float64_t v36 = ((struct struct_26 *)(int32_t)(float32_t)v3->e0[0].e0)->e0[0].e0;
    g125 = (float32_t)v36;
    // branch -> 0x408cad
    // 0x408cad
    g131 = v1;
}

// Address range: 0x408cb0 - 0x408d61
void function_408cb0(void) {
    // 0x408cb0
    int32_t * v1;
    int32_t v2 = (int32_t)v1; // 0x408cb8
    int32_t v3 = g124; // 0x408cc0
    int32_t v4 = g131 * g127; // 0x408ccb
    int32_t v5 = (v3 / -0x80000000 % 8 + v3) / 8; // 0x408cce
    g130 = v5;
    int32_t size = v4 * v5; // 0x408d12
    g124 = size;
    int32_t * mem = malloc(size); // 0x408d16
    g125 = size;
    int32_t v6;
    int32_t * v7;
    if (v4 > v2 * v6) {
        // 0x408d0f
        if (mem != NULL) {
            // 0x408d23
            function_408b6d();
            g124 = v2;
            function_408a2b();
            // branch -> 0x408d4a
            // 0x408d4a
            free(mem);
            // branch -> 0x408d5c
        }
        // 0x408d5c
        g130 = (int32_t)v7;
        return;
    }
    // 0x408cd7
    if (mem != NULL) {
        // 0x408ceb
        g124 = g127;
        function_408a2b();
        function_408b6d();
        // branch -> 0x408d4a
        // 0x408d4a
        free(mem);
        // branch -> 0x408d5c
    } else {
        mem = v7;
    }
    // 0x408d5c
    g130 = (int32_t)mem;
}

// Address range: 0x408d62 - 0x408daa
int32_t function_408d62(int32_t * a1) {
    int32_t v1 = (int32_t)a1; // 0x408d63
    g131 = v1;
    if (a1 == (int32_t *)-1) {
        // 0x408da9
        int32_t * v2;
        g131 = (int32_t)v2;
        int32_t result; // 0x408daa_21
        return result;
    }
    uint32_t v3 = function_409bf5(g117, v1); // 0x408d74
    int32_t * v4 = (int32_t *)0x408d79; // 0x408da9_05
    int32_t result2 = v3;
    int32_t * v5;
    if (v3 % 2 != 0 != false) {
        int32_t * v6 = (int32_t *)(int32_t)(v3 % 2 != 0); // 0x408d7f_0
        GetObjectType();
        if (v3 % 2 != 0) {
            // 0x408d8e
            DeleteObject((int32_t *)*v6);
            // branch -> 0x408d9c
        } else {
            // 0x408d96
            DestroyIcon((int32_t *)*v6);
            // branch -> 0x408d9c
        }
        // 0x408d9c
        v4 = (int32_t *)g131;
        v5 = (int32_t *)g117;
        result2 = function_409c5b(g117);
        // branch -> 0x408da8
    }
    // 0x408da8
    g130 = (int32_t)v5;
    // branch -> 0x408da9
    // 0x408da9
    g131 = (int32_t)v4;
    return result2;
}

// Address range: 0x408dad - 0x408dda
int32_t * function_408dad(void) {
    int32_t * v1 = (int32_t *)g125; // 0x408db0_0
    function_409d0e(g117);
    int32_t * v2 = (int32_t *)0x408dd5; // bp-28
    if (function_409d32(g117, v1, (int32_t *)0x408dbc) == 0) {
        // 0x408dd9
        return (int32_t *)&v2;
    }
    function_408d62(v1);
    while (function_409d32(g117, v1, v1) != 0) {
        // 0x408dbe
        function_408d62(v1);
        // continue -> 0x408dbe
    }
    // 0x408dc6
    v2 = (int32_t *)0x408dd5;
    // branch -> 0x408dd9
    // 0x408dd9
    return (int32_t *)&v2;
}

// Address range: 0x408ddb - 0x408dee
int32_t function_408ddb(void) {
    // 0x408ddb
    function_409c96(16, 16, (int32_t)function_408d62);
    g117 = g124;
    return g124;
}

// Address range: 0x408def - 0x408e61
void function_408def(int32_t a1, int32_t a2) {
    // 0x408def
    int32_t v1;
    int32_t v2; // 0x408e5d
    switch (a2) {
        default: {
            // 0x408e04
            if (a2 < 15) {
                // 0x408e5a
                // branch -> 0x408e5d
                // 0x408e5d
                g124 = 4 * a1;
                return;
            }
            // 0x408e09
            if (a2 < 17) {
                int32_t v3 = a1 + 1; // 0x408e1f
                // branch -> 0x408e5d
                // 0x408e5d
                g124 = 4 * (v3 - v3 / -0x80000000) / 2;
                return;
            }
            // 0x408e0e
            if (a2 == 24) {
                // 0x408e13
                v1 = 3 * (a1 + 1);
                // branch -> 0x408e2d
                // 0x408e2d
                v2 = (v1 / -0x80000000 % 4 + v1) / 4;
                // branch -> 0x408e5d
            } else {
                // 0x408e5a
                v2 = a1;
                // branch -> 0x408e5d
            }
            // 0x408e5d
            g124 = 4 * v2;
            return;
        }
        case 1: {
            int32_t v4 = a1 + 31; // 0x408e4c
            v2 = (v4 / -0x80000000 % 32 + v4) / 32;
            // branch -> 0x408e5d
            break;
        }
        case 4: {
            int32_t v5 = a1 + 7; // 0x408e3b
            v2 = (v5 / -0x80000000 % 8 + v5) / 8;
            // branch -> 0x408e5d
            break;
        }
        case 8: {
            // 0x408e27
            v1 = a1 + 3;
            // branch -> 0x408e2d
            // 0x408e2d
            v2 = (v1 / -0x80000000 % 4 + v1) / 4;
            // branch -> 0x408e5d
            break;
        }
    }
    // 0x408e5d
    g124 = 4 * v2;
}

// Address range: 0x408e64 - 0x408e79
int32_t function_408e64(void) {
    // 0x408e64
    g124 = 0;
    g118 = 0;
    function_409ce6(76, 0);
    g119 = g124;
    return g124;
}

// Address range: 0x408e7a - 0x408e9e
void function_408e7a(void) {
    int32_t v1 = g119; // bp-8
    function_409cdf((char *)&v1);
    int32_t v2 = g124; // 0x408e86
    g130 = v2;
    int32_t v3 = *(int32_t *)v2; // 0x408e88
    g124 = v3;
    ((int32_t (*)(int32_t))*(int32_t *)(v3 + 8))(v2);
    int32_t v4 = g130; // 0x408e8e
    if (*(int32_t *)(v4 + 20) == 0) {
        // 0x408e94
        fclose((struct _struct__IO_FILE *)*(int32_t *)(v4 + 8));
        // branch -> 0x408e9d
    }
    // 0x408e9d
    g130 = v2;
}

// Address range: 0x408e9f - 0x408eaa
int32_t function_408e9f(void) {
    // 0x408e9f
    TlsAlloc();
    g120 = g124;
    return g124;
}

// Address range: 0x408eab - 0x408ee8
int32_t function_408eab(int32_t a1) {
    int32_t nBufferLength = 260;
    function_40a7c0(260, a1);
    int32_t v1 = g124; // 0x408ebd
    g131 = v1;
    int32_t v2 = GetCurrentDirectoryA(nBufferLength, (char *)v1); // 0x408ec1
    g130 = v2;
    int32_t result; // 0x408edc
    int32_t v3; // 0x408ed9
    if (v2 == 0) {
        // 0x408ed9
        v3 = nBufferLength;
        result = function_40a860(v3);
        *(char *)(g130 + g131) = 0;
        g131 = v3;
        g130 = 260;
        g127 = a1;
        return result;
    }
    int32_t v4 = g131; // 0x408ecd
    int32_t v5; // 0x408ed8
    if (*(char *)(v2 - 1 + v4) != 92) {
        // 0x408ed4
        *(char *)(v4 + v2) = 92;
        v5 = g130 + 1;
        g130 = v5;
        // branch -> 0x408ed9
    } else {
        v5 = v2;
    }
    // 0x408ed9
    v3 = nBufferLength - v5;
    result = function_40a860(v3);
    *(char *)(g130 + g131) = 0;
    g131 = v3;
    g130 = 260;
    g127 = a1;
    return result;
}

// Address range: 0x408eeb - 0x408efa
int32_t function_408eeb(int32_t a1) {
    // 0x408eeb
    return 0;
}

// Address range: 0x408efd - 0x408f46
int32_t function_408efd(int32_t a1) {
    // 0x408efd
    g130 = 0;
    function_409bf5(g86, a1);
    int32_t v1 = g124; // 0x408f11
    g131 = v1;
    int32_t v2; // 0x408f27
    if (v1 == 0) {
        // 0x408efd
        v2 = g130;
        // branch -> 0x408f23
    } else {
        int32_t len = strlen((char *)(v1 + 52)); // 0x408f1b
        g130 = len;
        v2 = len;
        // branch -> 0x408f23
    }
    // 0x408f23
    char * v3;
    int32_t v4 = (int32_t)v3; // 0x408f28
    int32_t v5 = function_40a7c0(v2, v4); // 0x408f28
    char * str = (char *)v5; // 0x408f28_6
    char * dest_str; // 0x408f38
    int32_t v6; // 0x408f40
    if (g130 != 0) {
        int32_t v7 = g131 + 52; // 0x408f33
        g131 = v7;
        dest_str = strcpy(str, (char *)v7);
        g125 = v7;
        v6 = g130;
        // branch -> 0x408f3f
    } else {
        v6 = 0;
        dest_str = str;
    }
    // 0x408f3f
    g131 = v2;
    *(char *)(v5 + v6) = 0;
    g130 = v4;
    g127 = g86;
    return (int32_t)dest_str;
}

// Address range: 0x408f49 - 0x408f6e
int32_t function_408f49(int32_t a1) {
    // 0x408f49
    g130 = 0;
    function_409bf5(g86, a1);
    int32_t v1 = g124; // 0x408f5b
    int32_t result; // 0x408f6b
    if (v1 == 0) {
        // 0x408f49
        result = g130;
        // branch -> 0x408f6b
    } else {
        char v2 = *(char *)(v1 + 8); // 0x408f5f
        int32_t v3 = (((int32_t)((v2 & 16) == 0) | g130 & -256) ^ 1) + 1; // 0x408f68
        g124 = v3;
        g130 = v3;
        result = v3;
        // branch -> 0x408f6b
    }
    // 0x408f6b
    g130 = g86;
    return result;
}

// Address range: 0x408f71 - 0x408fa1
int32_t function_408f71(int32_t * a1) {
    // 0x408f71
    function_409bf5(g86, (int32_t)a1);
    int32_t v1 = g124; // 0x408f80
    int32_t result; // 0x408fa1_21
    if (v1 == 0) {
        // 0x408fa1
        return result;
    }
    int32_t hFindFile = *(int32_t *)v1; // 0x408f84
    if (hFindFile != -1) {
        // 0x408f8b
        FindClose(hFindFile);
        // branch -> 0x408f92
    }
    // 0x408f92
    result = function_409c5b(g86);
    // branch -> 0x408fa1
    // 0x408fa1
    return result;
}

// Address range: 0x408fa4 - 0x409096
int32_t function_408fa4(char * a1, int32_t a2, char * a3) {
    // 0x408fa4
    g127 = 0;
    g131 = 0;
    int32_t v1 = 0; // 0x408fd5
    if (g86 == 0) {
        // 0x408fbc
        g86 = function_409c96(328, 16, (int32_t)function_408f71);
        v1 = g127;
        // branch -> 0x408fd2
    }
    int32_t v2 = v1 == a2 ? 0x40c02d : a2;
    g130 = v2;
    char * str;
    strncpy(str, (char *)v2, 260);
    int32_t len = strlen((char *)g130); // 0x408ff4
    int32_t v3 = g127; // 0x408ffc
    int32_t v4 = len; // 0x409021
    struct struct_18 * v5; // 0x409042_6
    struct struct_18 * v6; // 0x40904c_0
    int32_t v7; // 0x409042
    int32_t v8; // 0x409054
    struct struct_18 * v9; // bp-304
    int32_t v10; // 0x40902a
    int32_t result; // 0x409078
    int32_t result2; // 0x409090
    int32_t v11; // 0x409037
    int32_t v12; // 0x40901a
    if (len != v3) {
        // 0x409000
        if (*(char *)(len - 1 + g130) != 92) {
            // 0x409007
            strcat(str, "\\");
            v4 = g127;
            // branch -> 0x40901a
        } else {
            v4 = v3;
        }
        // 0x40901a
        v12 = (int32_t)a3;
        if (v12 != v4) {
            // 0x409021
            if ((int32_t)*a3 != v4) {
                v10 = v12;
                // 0x40902a
                strcat(str, (char *)v10);
                v11 = (int32_t)str;
                g125 = v10;
                v7 = function_409b6d((struct struct_32 *)g86, (int32_t)a1);
                v5 = (struct struct_18 *)v7;
                g130 = v7;
                v6 = (struct struct_18 *)(v7 + 8);
                v8 = FindFirstFileA(str, &v6->e0);
                *(int32_t *)g130 = v8;
                if (v8 != -1) {
                    // 0x409061
                    v5->e1 = g127;
                    // branch -> 0x409078
                    // 0x409078
                    result = g130;
                    g131 = result;
                    // branch -> 0x409090
                    // 0x409090
                    g131 = v11;
                    g130 = (int32_t)v6;
                    return result;
                }
                // 0x409066
                v9 = (struct struct_18 *)0x40906c;
                if (GetLastError() == 2) {
                    // 0x409071
                    v5->e1 = 1;
                    // branch -> 0x409078
                    // 0x409078
                    result = g130;
                    g131 = result;
                    result2 = result;
                    // branch -> 0x409090
                } else {
                    // 0x40907c
                    if (a1 == (char *)-1) {
                        // 0x409082
                        v9 = (struct struct_18 *)g130;
                        function_409c5b(v11);
                        // branch -> 0x40908e
                    }
                    // 0x40908e
                    *(int32_t *)g130 = g127;
                    result2 = g131;
                    // branch -> 0x409090
                }
                // 0x409090
                g131 = v11;
                g130 = (int32_t)v9;
                return result2;
            }
        }
        // 0x409025
        v10 = 0x40c1e0;
        // branch -> 0x40902a
        // 0x40902a
        strcat(str, (char *)v10);
        v11 = (int32_t)str;
        g125 = v10;
        v7 = function_409b6d((struct struct_32 *)g86, (int32_t)a1);
        v5 = (struct struct_18 *)v7;
        g130 = v7;
        v6 = (struct struct_18 *)(v7 + 8);
        v8 = FindFirstFileA(str, &v6->e0);
        *(int32_t *)g130 = v8;
        if (v8 != -1) {
            // 0x409061
            v5->e1 = g127;
            // branch -> 0x409078
            // 0x409078
            result = g130;
            g131 = result;
            // branch -> 0x409090
            // 0x409090
            g131 = v11;
            g130 = (int32_t)v6;
            return result;
        }
        // 0x409066
        v9 = (struct struct_18 *)0x40906c;
        if (GetLastError() == 2) {
            // 0x409071
            v5->e1 = 1;
            // branch -> 0x409078
            // 0x409078
            result = g130;
            g131 = result;
            result2 = result;
            // branch -> 0x409090
        } else {
            // 0x40907c
            if (a1 == (char *)-1) {
                // 0x409082
                v9 = (struct struct_18 *)g130;
                function_409c5b(v11);
                // branch -> 0x40908e
            }
            // 0x40908e
            *(int32_t *)g130 = g127;
            result2 = g131;
            // branch -> 0x409090
        }
        // 0x409090
        g131 = v11;
        g130 = (int32_t)v9;
        return result2;
    }
    // 0x40901a
    v12 = (int32_t)a3;
    if (v12 == v4) {
        // 0x409025
        v10 = 0x40c1e0;
        // branch -> 0x40902a
        // 0x40902a
        strcat(str, (char *)v10);
        v11 = (int32_t)str;
        g125 = v10;
        v7 = function_409b6d((struct struct_32 *)g86, (int32_t)a1);
        v5 = (struct struct_18 *)v7;
        g130 = v7;
        v6 = (struct struct_18 *)(v7 + 8);
        v8 = FindFirstFileA(str, &v6->e0);
        *(int32_t *)g130 = v8;
        if (v8 != -1) {
            // 0x409061
            v5->e1 = g127;
            // branch -> 0x409078
            // 0x409078
            result = g130;
            g131 = result;
            // branch -> 0x409090
            // 0x409090
            g131 = v11;
            g130 = (int32_t)v6;
            return result;
        }
        // 0x409066
        v9 = (struct struct_18 *)0x40906c;
        if (GetLastError() == 2) {
            // 0x409071
            v5->e1 = 1;
            // branch -> 0x409078
            // 0x409078
            result = g130;
            g131 = result;
            result2 = result;
            // branch -> 0x409090
        } else {
            // 0x40907c
            if (a1 == (char *)-1) {
                // 0x409082
                v9 = (struct struct_18 *)g130;
                function_409c5b(v11);
                // branch -> 0x40908e
            }
            // 0x40908e
            *(int32_t *)g130 = g127;
            result2 = g131;
            // branch -> 0x409090
        }
        // 0x409090
        g131 = v11;
        g130 = (int32_t)v9;
        return result2;
    }
    // 0x409021
    if ((int32_t)*a3 != v4) {
        v10 = v12;
        // 0x40902a
        strcat(str, (char *)v10);
        v11 = (int32_t)str;
        g125 = v10;
        v7 = function_409b6d((struct struct_32 *)g86, (int32_t)a1);
        v5 = (struct struct_18 *)v7;
        g130 = v7;
        v6 = (struct struct_18 *)(v7 + 8);
        v8 = FindFirstFileA(str, &v6->e0);
        *(int32_t *)g130 = v8;
        if (v8 != -1) {
            // 0x409061
            v5->e1 = g127;
            // branch -> 0x409078
            // 0x409078
            result = g130;
            g131 = result;
            // branch -> 0x409090
            // 0x409090
            g131 = v11;
            g130 = (int32_t)v6;
            return result;
        }
        // 0x409066
        v9 = (struct struct_18 *)0x40906c;
        if (GetLastError() == 2) {
            // 0x409071
            v5->e1 = 1;
            // branch -> 0x409078
            // 0x409078
            result = g130;
            g131 = result;
            result2 = result;
            // branch -> 0x409090
        } else {
            // 0x40907c
            if (a1 == (char *)-1) {
                // 0x409082
                v9 = (struct struct_18 *)g130;
                function_409c5b(v11);
                // branch -> 0x40908e
            }
            // 0x40908e
            *(int32_t *)g130 = g127;
            result2 = g131;
            // branch -> 0x409090
        }
        // 0x409090
        g131 = v11;
        g130 = (int32_t)v9;
        return result2;
    }
    // 0x409025
    v10 = 0x40c1e0;
    // branch -> 0x40902a
    // 0x40902a
    strcat(str, (char *)v10);
    v11 = (int32_t)str;
    g125 = v10;
    v7 = function_409b6d((struct struct_32 *)g86, (int32_t)a1);
    v5 = (struct struct_18 *)v7;
    g130 = v7;
    v6 = (struct struct_18 *)(v7 + 8);
    v8 = FindFirstFileA(str, &v6->e0);
    *(int32_t *)g130 = v8;
    if (v8 != -1) {
        // 0x409061
        v5->e1 = g127;
        // branch -> 0x409078
        // 0x409078
        result = g130;
        g131 = result;
        // branch -> 0x409090
        // 0x409090
        g131 = v11;
        g130 = (int32_t)v6;
        return result;
    }
    // 0x409066
    v9 = (struct struct_18 *)0x40906c;
    if (GetLastError() == 2) {
        // 0x409071
        v5->e1 = 1;
        // branch -> 0x409078
        // 0x409078
        result = g130;
        g131 = result;
        result2 = result;
        // branch -> 0x409090
    } else {
        // 0x40907c
        if (a1 == (char *)-1) {
            // 0x409082
            v9 = (struct struct_18 *)g130;
            function_409c5b(v11);
            // branch -> 0x40908e
        }
        // 0x40908e
        *(int32_t *)g130 = g127;
        result2 = g131;
        // branch -> 0x409090
    }
    // 0x409090
    g131 = v11;
    g130 = (int32_t)v9;
    return result2;
}

// Address range: 0x409099 - 0x4090db
int32_t function_409099(int32_t a1) {
    // 0x409099
    g131 = 0;
    function_409bf5(g86, a1);
    int32_t v1 = g124; // 0x4090ac
    g130 = v1;
    int32_t v2 = g131; // 0x4090ae
    bool result;
    if (v1 == v2) {
        // 0x4090d7
        g131 = g86;
        g130 = a1;
        return result;
    }
    int32_t hFindFile = *(int32_t *)v1; // 0x4090b2
    g124 = hFindFile;
    if (hFindFile == -1) {
        // 0x4090d7
        g131 = g86;
        g130 = a1;
        return result;
    }
    // 0x4090b9
    bool result2;
    int32_t v3; // 0x4090d0
    if (*(int32_t *)(v1 + 4) == v2) {
        // 0x4090cd
        g131 = 0;
        v3 = v1;
        result2 = true;
        // branch -> 0x4090d0
    } else {
        int32_t v4 = v1 + 8; // 0x4090be
        g125 = v4;
        v3 = g130;
        result2 = FindNextFileA(hFindFile, (int32_t *)v4);
        // branch -> 0x4090d0
    }
    // 0x4090d0
    *(int32_t *)(v3 + 4) = 1;
    // branch -> 0x4090d7
    // 0x4090d7
    g131 = g86;
    g130 = a1;
    return result2;
}

// Address range: 0x4090de - 0x4093a4
void function_4090de(void) {
    // 0x4090de
    int32_t v1;
    g130 = v1;
    int32_t * v2;
    if (v1 == 0) {
        // 0x40939f
        g130 = (int32_t)v2;
        return;
    }
    char * str2 = (char *)v1; // 0x4090f7_0
    if (*str2 == 0) {
        // 0x40939f
        g130 = (int32_t)v2;
        return;
    }
    // 0x409100
    char * str;
    strncpy(str, str2, 260);
    int32_t len = strlen((char *)g130); // 0x409117
    int32_t dwFileAttributes; // 0x40933e
    int32_t v3;
    int32_t v4; // 0x4091bf
    int32_t * v5;
    char * str5;
    char * str4;
    int32_t * lpFindFileData;
    char * str3;
    int32_t * v6; // bp+010
    int32_t * v7; // 0x4093a2_08
    char v8; // 0x409330
    int32_t v9; // 0x40937e16
    if (len == 0) {
        // 0x40913d
        strcpy(str3, str);
        v3 = (int32_t)str5;
        g131 = g18;
        g130 = 0x40c1e0;
        if (str5 == NULL || *str5 == 0) {
            // 0x409262
            v3 = 0x40c1e0;
            v9 = 0;
            v6 = v2;
            // branch -> 0x409268
            // 0x409268
            strcpy(str, str3);
            strcat(str, (char *)v3);
            if (FindFirstFileA(str, lpFindFileData) == -1) {
                // 0x409268
                // branch -> 0x40939d
            } else {
                // 0x4092a7
                g130 = g19;
                g131 = 128;
                v8 = (int32_t)v5;
                dwFileAttributes = (int32_t)str;
                v7 = v6;
                // branch -> 0x4092b2
                while (true) {
                    // 0x4092b2
                    strcpy(str, str3);
                    strcat(str, str4);
                    if (lpFindFileData == (int32_t *)16) {
                        goto lab_0x5288470;
                    }
                    goto lab_0x528aa30;
                }
            }
            // 0x40939d
            g131 = (int32_t)str;
            // branch -> 0x40939f
            // 0x40939f
            g130 = (int32_t)v6;
            return;
        }
        // 0x409173
        if (strcmp(str5, "*.*") == 0) {
            // 0x409173
            // branch -> 0x409262
            // 0x409262
            v3 = g130;
            v9 = 0;
            v6 = v2;
            // branch -> 0x409268
        } else {
            // 0x409184
            if ((char)(int32_t)v5 != 1) {
                // 0x40918e
                strcpy(str, str3);
                strcat(str, "*.*");
                v4 = FindFirstFileA(str, lpFindFileData);
                g130 = v4;
                if (v4 != -1) {
                    // 0x4091cc
                    // branch -> 0x4091cc
                    while (true) {
                        // 0x4091cc
                        strcpy(str, str3);
                        strcat(str, str4);
                        if (lpFindFileData == (int32_t *)16) {
                            goto lab_0x52826b0;
                        }
                        goto lab_0x5281a40;
                    }
                } else {
                    v9 = 1;
                    v6 = (int32_t *)0x4091ae;
                }
            } else {
                v9 = v1;
                v6 = v2;
            }
        }
        // 0x409268
        strcpy(str, str3);
        strcat(str, (char *)v3);
        if (FindFirstFileA(str, lpFindFileData) == -1) {
            // 0x409268
            // branch -> 0x40939d
        } else {
            // 0x4092a7
            g130 = g19;
            g131 = 128;
            v8 = (int32_t)v5;
            dwFileAttributes = (int32_t)str;
            v7 = v6;
            // branch -> 0x4092b2
            while (true) {
                // 0x4092b2
                strcpy(str, str3);
                strcat(str, str4);
                if (lpFindFileData == (int32_t *)16) {
                    goto lab_0x5288470;
                }
                goto lab_0x528aa30;
            }
        }
        // 0x40939d
        g131 = (int32_t)str;
        // branch -> 0x40939f
        // 0x40939f
        g130 = (int32_t)v6;
        return;
    }
    // 0x409123
    if (*(char *)(len - 1 + g130) != 92) {
        // 0x40912a
        strcat(str, "\\");
        // branch -> 0x40913d
    }
    // 0x40913d
    strcpy(str3, str);
    v3 = (int32_t)str5;
    g131 = g18;
    g130 = 0x40c1e0;
    if (str5 != NULL) {
        // 0x40916a
        if (*str5 != 0) {
            // 0x409173
            if (strcmp(str5, "*.*") == 0) {
                // 0x409173
                // branch -> 0x409262
                // 0x409262
                v3 = g130;
                v9 = 0;
                v6 = v2;
                // branch -> 0x409268
            } else {
                // 0x409184
                if ((char)(int32_t)v5 != 1) {
                    // 0x40918e
                    strcpy(str, str3);
                    strcat(str, "*.*");
                    v4 = FindFirstFileA(str, lpFindFileData);
                    g130 = v4;
                    if (v4 != -1) {
                        // 0x4091cc
                        // branch -> 0x4091cc
                        while (true) {
                            // 0x4091cc
                            strcpy(str, str3);
                            strcat(str, str4);
                            if (lpFindFileData != (int32_t *)16) {
                              lab_0x5281a40:
                                // 0x4091fe
                                if (strcmp(str4, "..") != 0) {
                                    // 0x409215
                                    if (strcmp(str4, ".") != 0) {
                                        // 0x40922c
                                        function_4090de();
                                        // branch -> 0x40923c
                                    }
                                }
                            }
                          lab_0x52826b0:
                            // 0x40923c
                            if (!FindNextFileA(g130, lpFindFileData)) {
                                // break -> 0x409252
                                break;
                            }
                            // continue -> 0x4091cc
                        }
                        // 0x409252
                        FindClose((int32_t)lpFindFileData);
                        v9 = 1;
                        v6 = (int32_t *)0x409259;
                        // branch -> 0x409268
                    } else {
                        v9 = 1;
                        v6 = (int32_t *)0x4091ae;
                    }
                } else {
                    v9 = v1;
                    v6 = v2;
                }
            }
            // 0x409268
            strcpy(str, str3);
            strcat(str, (char *)v3);
            int32_t v10;
            int32_t * v11; // 0x4093a2_09
            if (FindFirstFileA(str, lpFindFileData) == -1) {
                // 0x409268
                v10 = (int32_t)str;
                v11 = v6;
                // branch -> 0x40939d
            } else {
                // 0x4092a7
                g130 = g19;
                g131 = 128;
                v8 = (int32_t)v5;
                dwFileAttributes = (int32_t)str;
                v7 = v6;
                // branch -> 0x4092b2
                int32_t * v12; // 0x4093a2_07
                while (true) {
                    // 0x4092b2
                    strcpy(str, str3);
                    strcat(str, str4);
                    if (lpFindFileData == (int32_t *)16) {
                      lab_0x5288470:
                        // 0x409330
                        if (v8 != 2) {
                            // 0x409336
                            SetFileAttributesA(str, dwFileAttributes);
                            // branch -> 0x409340
                        }
                        // 0x409340
                        DeleteFileA(str);
                        v12 = v7;
                        // branch -> 0x40934d
                    } else {
                      lab_0x528aa30:
                        // 0x4092e4
                        if (v8 != 1 && v9 == 0) {
                            // 0x4092f0
                            if (strcmp(str4, str3) != 0) {
                                // 0x409307
                                if (strcmp(str4, str3) != 0) {
                                    // 0x40931e
                                    function_4090de();
                                    v12 = (int32_t *)v3;
                                    // branch -> 0x40934d
                                } else {
                                    v12 = v7;
                                }
                            } else {
                                v12 = v7;
                            }
                        } else {
                            v12 = v7;
                        }
                    }
                    // 0x40934d
                    if (!FindNextFileA(dwFileAttributes, lpFindFileData)) {
                        // break -> 0x409365
                        break;
                    }
                    v7 = v12;
                    // continue -> 0x4092b2
                }
                int32_t hFindFile = (int32_t)lpFindFileData;
                FindClose(hFindFile);
                if (v8 != 2) {
                    // 0x409374
                    SetFileAttributesA(str3, hFindFile);
                    // branch -> 0x40937e
                }
                // 0x40937e
                if (v9 == 0) {
                    // 0x40938d
                    RemoveDirectoryA();
                    v10 = dwFileAttributes;
                    v11 = v12;
                    // branch -> 0x40939d
                } else {
                    v10 = dwFileAttributes;
                    v11 = v12;
                }
            }
            // 0x40939d
            g131 = v10;
            // branch -> 0x40939f
            // 0x40939f
            g130 = (int32_t)v11;
            return;
        }
    }
    // 0x409262
    v3 = 0x40c1e0;
    v9 = 0;
    v6 = v2;
    // branch -> 0x409268
    // 0x409268
    strcpy(str, str3);
    strcat(str, (char *)v3);
    if (FindFirstFileA(str, lpFindFileData) == -1) {
        // 0x409268
        // branch -> 0x40939d
    } else {
        // 0x4092a7
        g130 = g19;
        g131 = 128;
        v8 = (int32_t)v5;
        dwFileAttributes = (int32_t)str;
        v7 = v6;
        // branch -> 0x4092b2
        while (true) {
            // 0x4092b2
            strcpy(str, str3);
            strcat(str, str4);
            if (lpFindFileData == (int32_t *)16) {
                goto lab_0x5288470;
            }
            goto lab_0x528aa30;
        }
    }
    // 0x40939d
    g131 = (int32_t)str;
    // branch -> 0x40939f
    // 0x40939f
    g130 = (int32_t)v6;
}

// Address range: 0x4093a7 - 0x4093c8
int32_t function_4093a7(char * lpExistingFileName, char * lpNewFileName) {
    // 0x4093a7
    g124 = 0;
    int32_t copyFileSuccess;
    if (lpExistingFileName != NULL && lpNewFileName != NULL) {
        // 0x4093b5
        copyFileSuccess = CopyFileA(lpExistingFileName, lpNewFileName, false);
        // branch -> 0x4093c8
    } else {
        copyFileSuccess = 0;
    }
    // 0x4093c8
    return copyFileSuccess;
}

// Address range: 0x4093cb - 0x409441
void function_4093cb(void) {
    int32_t v1 = g129; // bp-4
    char * str2;
    if (str2 == NULL) {
        // 0x40943e
        g124 = 0;
        // branch -> 0x409440
    } else {
        // 0x4093da
        char * str;
        strncpy(str, str2, 260);
        strlen(str);
        if (g124 > g125) {
            // 0x40940a
            unsigned char v2;
            int32_t v3 = v2; // 0x40940d
            int32_t v4 = g126 & -256; // 0x40941911
            // branch -> 0x40940a
            while (true) {
                int32_t v5 = v4 | v3; // 0x40940d
                switch (v5) {
                    default: {
                        // 0x40942a
                        g126 = v5;
                        // branch -> 0x40942a
                        // 0x40942a
                        CreateDirectoryA(str, NULL);
                        // branch -> 0x409440
                        // 0x409440
                        g129 = &v1;
                        return;
                    }
                    case 32: {
                        while (true) {
                            // 0x40940a
                            v5 = v3;
                            switch (v5) {
                                default: {
                                    // 0x40942a
                                    g126 = v5;
                                    // branch -> 0x40942a
                                    // 0x40942a
                                    CreateDirectoryA(str, NULL);
                                    // branch -> 0x409440
                                    // 0x409440
                                    g129 = &v1;
                                    return;
                                }
                                case 32: {
                                    while (true) {
                                        // 0x40940a
                                        v5 = v3;
                                        switch (v5) {
                                            default: {
                                                // 0x40942a
                                                g126 = v5;
                                                // branch -> 0x40942a
                                                // 0x40942a
                                                CreateDirectoryA(str, NULL);
                                                // branch -> 0x409440
                                                // 0x409440
                                                g129 = &v1;
                                                return;
                                            }
                                            case 32: {
                                                while (true) {
                                                    // 0x40940a
                                                    v5 = v3;
                                                    switch (v5) {
                                                        default: {
                                                            // 0x40942a
                                                            g126 = v5;
                                                            // branch -> 0x40942a
                                                            // 0x40942a
                                                            CreateDirectoryA(str, NULL);
                                                            // branch -> 0x409440
                                                            // 0x409440
                                                            g129 = &v1;
                                                            return;
                                                        }
                                                        case 32: {
                                                            while (true) {
                                                                // 0x40940a
                                                                v5 = v3;
                                                                switch (v5) {
                                                                    default: {
                                                                        // 0x40942a
                                                                        g126 = v5;
                                                                        // branch -> 0x40942a
                                                                        // 0x40942a
                                                                        CreateDirectoryA(str, NULL);
                                                                        // branch -> 0x409440
                                                                        // 0x409440
                                                                        g129 = &v1;
                                                                        return;
                                                                    }
                                                                    case 32: {
                                                                        while (true) {
                                                                            // 0x40940a
                                                                            v5 = v3;
                                                                            switch (v5) {
                                                                                default: {
                                                                                    // 0x40942a
                                                                                    g126 = v5;
                                                                                    // branch -> 0x40942a
                                                                                    // 0x40942a
                                                                                    CreateDirectoryA(str, NULL);
                                                                                    // branch -> 0x409440
                                                                                    // 0x409440
                                                                                    g129 = &v1;
                                                                                    return;
                                                                                }
                                                                                case 32: {
                                                                                    while (true) {
                                                                                        // 0x40940a
                                                                                        v5 = v3;
                                                                                        switch (v5) {
                                                                                            default: {
                                                                                                // 0x40942a
                                                                                                g126 = v5;
                                                                                                // branch -> 0x40942a
                                                                                                // 0x40942a
                                                                                                CreateDirectoryA(str, NULL);
                                                                                                // branch -> 0x409440
                                                                                                // 0x409440
                                                                                                g129 = &v1;
                                                                                                return;
                                                                                            }
                                                                                            case 32: {
                                                                                                while (true) {
                                                                                                    // 0x40940a
                                                                                                    v5 = v3;
                                                                                                    switch (v5) {
                                                                                                        default: {
                                                                                                            // 0x40942a
                                                                                                            g126 = v5;
                                                                                                            // branch -> 0x40942a
                                                                                                            // 0x40942a
                                                                                                            CreateDirectoryA(str, NULL);
                                                                                                            // branch -> 0x409440
                                                                                                            // 0x409440
                                                                                                            g129 = &v1;
                                                                                                            return;
                                                                                                        }
                                                                                                        case 32: {
                                                                                                            while (true) {
                                                                                                                // 0x40940a
                                                                                                                v5 = v3;
                                                                                                                switch (v5) {
                                                                                                                    default: {
                                                                                                                        // 0x40942a
                                                                                                                        g126 = v5;
                                                                                                                        // branch -> 0x40942a
                                                                                                                        // 0x40942a
                                                                                                                        CreateDirectoryA(str, NULL);
                                                                                                                        // branch -> 0x409440
                                                                                                                        // 0x409440
                                                                                                                        g129 = &v1;
                                                                                                                        return;
                                                                                                                    }
                                                                                                                    case 32: {
                                                                                                                        while (true) {
                                                                                                                            // 0x40940a
                                                                                                                            v5 = v3;
                                                                                                                            switch (v5) {
                                                                                                                                default: {
                                                                                                                                    // 0x40942a
                                                                                                                                    g126 = v5;
                                                                                                                                    // branch -> 0x40942a
                                                                                                                                    // 0x40942a
                                                                                                                                    CreateDirectoryA(str, NULL);
                                                                                                                                    // branch -> 0x409440
                                                                                                                                    // 0x409440
                                                                                                                                    g129 = &v1;
                                                                                                                                    return;
                                                                                                                                }
                                                                                                                                case 32: {
                                                                                                                                    while (true) {
                                                                                                                                        // 0x40940a
                                                                                                                                        v5 = v3;
                                                                                                                                        switch (v5) {
                                                                                                                                            default: {
                                                                                                                                                // 0x40942a
                                                                                                                                                g126 = v5;
                                                                                                                                                // branch -> 0x40942a
                                                                                                                                                // 0x40942a
                                                                                                                                                CreateDirectoryA(str, NULL);
                                                                                                                                                // branch -> 0x409440
                                                                                                                                                // 0x409440
                                                                                                                                                g129 = &v1;
                                                                                                                                                return;
                                                                                                                                            }
                                                                                                                                            case 32: {
                                                                                                                                                while (true) {
                                                                                                                                                    // 0x40940a
                                                                                                                                                    v5 = v3;
                                                                                                                                                    switch (v5) {
                                                                                                                                                        default: {
                                                                                                                                                            // 0x40942a
                                                                                                                                                            g126 = v5;
                                                                                                                                                            // branch -> 0x40942a
                                                                                                                                                            // 0x40942a
                                                                                                                                                            CreateDirectoryA(str, NULL);
                                                                                                                                                            // branch -> 0x409440
                                                                                                                                                            // 0x409440
                                                                                                                                                            g129 = &v1;
                                                                                                                                                            return;
                                                                                                                                                        }
                                                                                                                                                        case 32: {
                                                                                                                                                            while (true) {
                                                                                                                                                                // 0x40940a
                                                                                                                                                                v5 = v3;
                                                                                                                                                                switch (v5) {
                                                                                                                                                                    default: {
                                                                                                                                                                        // 0x40942a
                                                                                                                                                                        g126 = v5;
                                                                                                                                                                        // branch -> 0x40942a
                                                                                                                                                                        // 0x40942a
                                                                                                                                                                        CreateDirectoryA(str, NULL);
                                                                                                                                                                        // branch -> 0x409440
                                                                                                                                                                        // 0x409440
                                                                                                                                                                        g129 = &v1;
                                                                                                                                                                        return;
                                                                                                                                                                    }
                                                                                                                                                                    case 32: {
                                                                                                                                                                        while (true) {
                                                                                                                                                                            // 0x40940a
                                                                                                                                                                            v5 = v3;
                                                                                                                                                                            switch (v5) {
                                                                                                                                                                                default: {
                                                                                                                                                                                    // 0x40942a
                                                                                                                                                                                    g126 = v5;
                                                                                                                                                                                    // branch -> 0x40942a
                                                                                                                                                                                    // 0x40942a
                                                                                                                                                                                    CreateDirectoryA(str, NULL);
                                                                                                                                                                                    // branch -> 0x409440
                                                                                                                                                                                    // 0x409440
                                                                                                                                                                                    g129 = &v1;
                                                                                                                                                                                    return;
                                                                                                                                                                                }
                                                                                                                                                                                case 32: {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                        // 0x40940a
                                                                                                                                                                                        v5 = v3;
                                                                                                                                                                                        switch (v5) {
                                                                                                                                                                                            default: {
                                                                                                                                                                                                // 0x40942a
                                                                                                                                                                                                g126 = v5;
                                                                                                                                                                                                // branch -> 0x40942a
                                                                                                                                                                                                // 0x40942a
                                                                                                                                                                                                CreateDirectoryA(str, NULL);
                                                                                                                                                                                                // branch -> 0x409440
                                                                                                                                                                                                // 0x409440
                                                                                                                                                                                                g129 = &v1;
                                                                                                                                                                                                return;
                                                                                                                                                                                            }
                                                                                                                                                                                            case 32: {
                                                                                                                                                                                                while (true) {
                                                                                                                                                                                                    // 0x40940a
                                                                                                                                                                                                    v5 = v3;
                                                                                                                                                                                                    switch (v5) {
                                                                                                                                                                                                        default: {
                                                                                                                                                                                                            // 0x40942a
                                                                                                                                                                                                            g126 = v5;
                                                                                                                                                                                                            // branch -> 0x40942a
                                                                                                                                                                                                            // 0x40942a
                                                                                                                                                                                                            CreateDirectoryA(str, NULL);
                                                                                                                                                                                                            // branch -> 0x409440
                                                                                                                                                                                                            // 0x409440
                                                                                                                                                                                                            g129 = &v1;
                                                                                                                                                                                                            return;
                                                                                                                                                                                                        }
                                                                                                                                                                                                        case 32: {
                                                                                                                                                                                                            while (true) {
                                                                                                                                                                                                                // 0x40940a
                                                                                                                                                                                                                v5 = v3;
                                                                                                                                                                                                                switch (v5) {
                                                                                                                                                                                                                    default: {
                                                                                                                                                                                                                        // 0x40942a
                                                                                                                                                                                                                        g126 = v5;
                                                                                                                                                                                                                        // branch -> 0x40942a
                                                                                                                                                                                                                        // 0x40942a
                                                                                                                                                                                                                        CreateDirectoryA(str, NULL);
                                                                                                                                                                                                                        // branch -> 0x409440
                                                                                                                                                                                                                        // 0x409440
                                                                                                                                                                                                                        g129 = &v1;
                                                                                                                                                                                                                        return;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    case 32: {
                                                                                                                                                                                                                        while (true) {
                                                                                                                                                                                                                            // 0x40940a
                                                                                                                                                                                                                            v5 = v3;
                                                                                                                                                                                                                            switch (v5) {
                                                                                                                                                                                                                                default: {
                                                                                                                                                                                                                                    // 0x40942a
                                                                                                                                                                                                                                    g126 = v5;
                                                                                                                                                                                                                                    // branch -> 0x40942a
                                                                                                                                                                                                                                    // 0x40942a
                                                                                                                                                                                                                                    CreateDirectoryA(str, NULL);
                                                                                                                                                                                                                                    // branch -> 0x409440
                                                                                                                                                                                                                                    // 0x409440
                                                                                                                                                                                                                                    g129 = &v1;
                                                                                                                                                                                                                                    return;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                case 32: {
                                                                                                                                                                                                                                    while (true) {
                                                                                                                                                                                                                                        // 0x40940a
                                                                                                                                                                                                                                        v5 = v3;
                                                                                                                                                                                                                                        switch (v5) {
                                                                                                                                                                                                                                            default: {
                                                                                                                                                                                                                                                // 0x40942a
                                                                                                                                                                                                                                                g126 = v5;
                                                                                                                                                                                                                                                // branch -> 0x40942a
                                                                                                                                                                                                                                                // 0x40942a
                                                                                                                                                                                                                                                CreateDirectoryA(str, NULL);
                                                                                                                                                                                                                                                // branch -> 0x409440
                                                                                                                                                                                                                                                // 0x409440
                                                                                                                                                                                                                                                g129 = &v1;
                                                                                                                                                                                                                                                return;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            case 32: {
                                                                                                                                                                                                                                                while (true) {
                                                                                                                                                                                                                                                    // 0x40940a
                                                                                                                                                                                                                                                    v5 = v3;
                                                                                                                                                                                                                                                    switch (v5) {
                                                                                                                                                                                                                                                        default: {
                                                                                                                                                                                                                                                            // 0x40942a
                                                                                                                                                                                                                                                            g126 = v5;
                                                                                                                                                                                                                                                            // branch -> 0x40942a
                                                                                                                                                                                                                                                            // 0x40942a
                                                                                                                                                                                                                                                            CreateDirectoryA(str, NULL);
                                                                                                                                                                                                                                                            // branch -> 0x409440
                                                                                                                                                                                                                                                            // 0x409440
                                                                                                                                                                                                                                                            g129 = &v1;
                                                                                                                                                                                                                                                            return;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        case 32: {
                                                                                                                                                                                                                                                            while (true) {
                                                                                                                                                                                                                                                                // 0x40940a
                                                                                                                                                                                                                                                                v5 = v3;
                                                                                                                                                                                                                                                                switch (v5) {
                                                                                                                                                                                                                                                                    default: {
                                                                                                                                                                                                                                                                        // 0x40942a
                                                                                                                                                                                                                                                                        g126 = v5;
                                                                                                                                                                                                                                                                        // branch -> 0x40942a
                                                                                                                                                                                                                                                                        // 0x40942a
                                                                                                                                                                                                                                                                        CreateDirectoryA(str, NULL);
                                                                                                                                                                                                                                                                        // branch -> 0x409440
                                                                                                                                                                                                                                                                        // 0x409440
                                                                                                                                                                                                                                                                        g129 = &v1;
                                                                                                                                                                                                                                                                        return;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    case 32: {
                                                                                                                                                                                                                                                                        while (true) {
                                                                                                                                                                                                                                                                            // 0x40940a
                                                                                                                                                                                                                                                                            v5 = v3;
                                                                                                                                                                                                                                                                            switch (v5) {
                                                                                                                                                                                                                                                                                default: {
                                                                                                                                                                                                                                                                                    // 0x40942a
                                                                                                                                                                                                                                                                                    g126 = v5;
                                                                                                                                                                                                                                                                                    // branch -> 0x40942a
                                                                                                                                                                                                                                                                                    // 0x40942a
                                                                                                                                                                                                                                                                                    CreateDirectoryA(str, NULL);
                                                                                                                                                                                                                                                                                    // branch -> 0x409440
                                                                                                                                                                                                                                                                                    // 0x409440
                                                                                                                                                                                                                                                                                    g129 = &v1;
                                                                                                                                                                                                                                                                                    return;
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                case 32: {
                                                                                                                                                                                                                                                                                    while (true) {
                                                                                                                                                                                                                                                                                        // 0x40940a
                                                                                                                                                                                                                                                                                        v5 = v3;
                                                                                                                                                                                                                                                                                        switch (v5) {
                                                                                                                                                                                                                                                                                            default: {
                                                                                                                                                                                                                                                                                                // 0x40942a
                                                                                                                                                                                                                                                                                                g126 = v5;
                                                                                                                                                                                                                                                                                                // branch -> 0x40942a
                                                                                                                                                                                                                                                                                                // 0x40942a
                                                                                                                                                                                                                                                                                                CreateDirectoryA(str, NULL);
                                                                                                                                                                                                                                                                                                // branch -> 0x409440
                                                                                                                                                                                                                                                                                                // 0x409440
                                                                                                                                                                                                                                                                                                g129 = &v1;
                                                                                                                                                                                                                                                                                                return;
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            case 32: {
                                                                                                                                                                                                                                                                                                while (true) {
                                                                                                                                                                                                                                                                                                    // 0x40940a
                                                                                                                                                                                                                                                                                                    v5 = v3;
                                                                                                                                                                                                                                                                                                    switch (v5) {
                                                                                                                                                                                                                                                                                                        default: {
                                                                                                                                                                                                                                                                                                            // 0x40942a
                                                                                                                                                                                                                                                                                                            g126 = v5;
                                                                                                                                                                                                                                                                                                            // branch -> 0x40942a
                                                                                                                                                                                                                                                                                                            // 0x40942a
                                                                                                                                                                                                                                                                                                            CreateDirectoryA(str, NULL);
                                                                                                                                                                                                                                                                                                            // branch -> 0x409440
                                                                                                                                                                                                                                                                                                            // 0x409440
                                                                                                                                                                                                                                                                                                            g129 = &v1;
                                                                                                                                                                                                                                                                                                            return;
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                        case 32: {
                                                                                                                                                                                                                                                                                                            while (true) {
                                                                                                                                                                                                                                                                                                                // 0x40940a
                                                                                                                                                                                                                                                                                                                v5 = v3;
                                                                                                                                                                                                                                                                                                                switch (v5) {
                                                                                                                                                                                                                                                                                                                    default: {
                                                                                                                                                                                                                                                                                                                        // 0x40942a
                                                                                                                                                                                                                                                                                                                        g126 = v5;
                                                                                                                                                                                                                                                                                                                        // branch -> 0x40942a
                                                                                                                                                                                                                                                                                                                        // 0x40942a
                                                                                                                                                                                                                                                                                                                        CreateDirectoryA(str, NULL);
                                                                                                                                                                                                                                                                                                                        // branch -> 0x409440
                                                                                                                                                                                                                                                                                                                        // 0x409440
                                                                                                                                                                                                                                                                                                                        g129 = &v1;
                                                                                                                                                                                                                                                                                                                        return;
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    case 32: {
                                                                                                                                                                                                                                                                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    case 92: {
                                                                                                                                                                                                                                                                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    case 47: {
                                                                                                                                                                                                                                                                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                        case 92: {
                                                                                                                                                                                                                                                                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                        case 47: {
                                                                                                                                                                                                                                                                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            case 92: {
                                                                                                                                                                                                                                                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            case 47: {
                                                                                                                                                                                                                                                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                case 92: {
                                                                                                                                                                                                                                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                case 47: {
                                                                                                                                                                                                                                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    case 92: {
                                                                                                                                                                                                                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    case 47: {
                                                                                                                                                                                                                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        case 92: {
                                                                                                                                                                                                                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        case 47: {
                                                                                                                                                                                                                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            case 92: {
                                                                                                                                                                                                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            case 47: {
                                                                                                                                                                                                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                case 92: {
                                                                                                                                                                                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                case 47: {
                                                                                                                                                                                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    case 92: {
                                                                                                                                                                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    case 47: {
                                                                                                                                                                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                        case 92: {
                                                                                                                                                                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        }
                                                                                                                                                                                                        case 47: {
                                                                                                                                                                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                            case 92: {
                                                                                                                                                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                break;
                                                                                                                                                                                            }
                                                                                                                                                                                            case 47: {
                                                                                                                                                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                                break;
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                                case 92: {
                                                                                                                                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                    break;
                                                                                                                                                                                }
                                                                                                                                                                                case 47: {
                                                                                                                                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                                    break;
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                    case 92: {
                                                                                                                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                        break;
                                                                                                                                                                    }
                                                                                                                                                                    case 47: {
                                                                                                                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                                        break;
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        case 92: {
                                                                                                                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                            break;
                                                                                                                                                        }
                                                                                                                                                        case 47: {
                                                                                                                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                            break;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                            case 92: {
                                                                                                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                break;
                                                                                                                                            }
                                                                                                                                            case 47: {
                                                                                                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                                break;
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                case 92: {
                                                                                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                    break;
                                                                                                                                }
                                                                                                                                case 47: {
                                                                                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                                    break;
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                    case 92: {
                                                                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                        break;
                                                                                                                    }
                                                                                                                    case 47: {
                                                                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                                        break;
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                        case 92: {
                                                                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                            break;
                                                                                                        }
                                                                                                        case 47: {
                                                                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                            break;
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            case 92: {
                                                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                break;
                                                                                            }
                                                                                            case 47: {
                                                                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                                break;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                                case 92: {
                                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                    break;
                                                                                }
                                                                                case 47: {
                                                                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                                                                    break;
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                    case 92: {
                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                        break;
                                                                    }
                                                                    case 47: {
                                                                        // Detected a possible infinite recursion (goto support failed); quitting...
                                                                        break;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        case 92: {
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                            break;
                                                        }
                                                        case 47: {
                                                            // Detected a possible infinite recursion (goto support failed); quitting...
                                                            break;
                                                        }
                                                    }
                                                }
                                            }
                                            case 92: {
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                break;
                                            }
                                            case 47: {
                                                // Detected a possible infinite recursion (goto support failed); quitting...
                                                break;
                                            }
                                        }
                                    }
                                }
                                case 92: {
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                    break;
                                }
                                case 47: {
                                    // Detected a possible infinite recursion (goto support failed); quitting...
                                    break;
                                }
                            }
                        }
                    }
                    case 92: {
                        v4 = 0;
                        // Detected a possible infinite recursion (goto support failed); quitting...
                        break;
                    }
                    case 47: {
                        v4 = 0;
                        // Detected a possible infinite recursion (goto support failed); quitting...
                        break;
                    }
                }
            }
        }
    }
    // Detected a possible infinite recursion (goto support failed); quitting...
}

// Address range: 0x409444 - 0x40945a
void function_409444(void) {
    // 0x409444
    return;
}

// Address range: 0x40945d - 0x4096f5
void function_40945d(void) {
    int32_t v1 = 0;
    int32_t v2;
    g130 = v2;
    int32_t v3 = 0; // bp-8
    char * str2;
    if (v2 == 0 || *(char *)v2 == 0 || str2 == NULL || *str2 == 0) {
        // 0x4096ef
        int32_t * v4;
        g130 = (int32_t)v4;
        return;
    }
    // 0x409496
    g131 = 260;
    char * str;
    strncpy(str, str2, 260);
    strlen(str);
    char v5;
    char v6 = v5; // 0x40961710
    if (v5 == 92) {
        // 0x4094c8
        v6 = v1;
        // branch -> 0x4094ca
    }
    // 0x4094ca
    char * str3;
    strncpy(str3, (char *)g130, g131);
    char v7;
    if (strlen(str3) != v1 && v7 != 92) {
        // 0x4094fb
        strcat(str3, "\\");
        // branch -> 0x40950e
    }
    // 0x40950e
    char * str4;
    strcpy(str4, str3);
    char * str8;
    int32_t v8 = (int32_t)str8; // 0x409521
    int32_t hFindFile; // 0x40955a
    int32_t v9; // 0x409586
    char * v10;
    char * str6;
    char * str7;
    int32_t * lpFindFileData;
    int32_t v11; // 0x4095a4
    int32_t hFindFile2;
    int32_t v12; // 0x40959312
    char v13; // 0x4096a1
    if (v8 == v1 || (int32_t)*str8 == v1) {
        char * str5 = "*.*"; // bp+013
        // branch -> 0x409535
        // 0x409535
        strcat(str3, str5);
        g130 = g18;
        hFindFile = FindFirstFileA(str, lpFindFileData);
        v12 = 0;
        if (hFindFile != -1) {
            // 0x409561
            FindClose(hFindFile);
            v12 = lpFindFileData != (int32_t *)16;
            // branch -> 0x409578
        }
        // 0x409578
        v9 = FindFirstFileA(str3, lpFindFileData);
        g130 = v9;
        if (v9 != -1) {
            // 0x409593
            if (v12 == v1) {
                // 0x409598
                strlen(str);
                v11 = (int32_t)str;
                if (v6 != 58) {
                    // 0x4095b2
                    if (CreateDirectoryA(str2, (int32_t *)v1) == false) {
                        // 0x4096e7
                        FindClose((int32_t)lpFindFileData);
                        // branch -> 0x4096ee
                        // 0x4096ee
                        g131 = 0x4094d8;
                        // branch -> 0x4096ef
                        // 0x4096ef
                        g130 = (int32_t)(int32_t *)0x4095bc;
                        return;
                    }
                    hFindFile2 = v11;
                } else {
                    hFindFile2 = v11;
                }
            } else {
                // 0x409593
                hFindFile2 = (int32_t)str;
                // branch -> 0x4095c4
            }
            // 0x4095c4
            v3 = 1;
            v13 = (int32_t)v10;
            // branch -> 0x4095cb
            while (true) {
                // 0x4095cb
                strcpy(str6, str4);
                strcat(str6, str7);
                strncpy(str, str2, g131);
                if (strlen(str) == v1 || v6 == 92) {
                    goto lab_0x52fccf0;
                }
                goto lab_0x52fc6a0;
            }
        }
        // 0x4096ee
        g131 = 0x4094d8;
        // branch -> 0x4096ef
        // 0x4096ef
        g130 = (int32_t)(int32_t *)0x409588;
        return;
    }
    // 0x409535
    strcat(str3, str8);
    g130 = g18;
    hFindFile = FindFirstFileA(str, lpFindFileData);
    v12 = 0;
    if (hFindFile != -1) {
        // 0x409561
        FindClose(hFindFile);
        v12 = lpFindFileData != (int32_t *)16;
        // branch -> 0x409578
    }
    // 0x409578
    v9 = FindFirstFileA(str3, lpFindFileData);
    g130 = v9;
    int32_t * v14 = (int32_t *)0x409588; // 0x4096f2_06
    if (v9 != -1) {
        // 0x409593
        if (v12 == v1) {
            // 0x409598
            strlen(str);
            v11 = (int32_t)str;
            if (v6 != 58) {
                // 0x4095b2
                if (CreateDirectoryA(str2, (int32_t *)v1) == false) {
                    // 0x4096e7
                    FindClose((int32_t)lpFindFileData);
                    // branch -> 0x4096ee
                    // 0x4096ee
                    g131 = 0x4094d8;
                    // branch -> 0x4096ef
                    // 0x4096ef
                    g130 = (int32_t)(int32_t *)0x4095bc;
                    return;
                }
                hFindFile2 = v11;
            } else {
                hFindFile2 = v11;
            }
        } else {
            // 0x409593
            hFindFile2 = (int32_t)str;
            // branch -> 0x4095c4
        }
        // 0x4095c4
        v3 = 1;
        v13 = (int32_t)v10;
        // branch -> 0x4095cb
        int32_t * v15; // 0x4096f2_09
        while (true) {
            // 0x4095cb
            strcpy(str6, str4);
            strcat(str6, str7);
            strncpy(str, str2, g131);
            if (strlen(str) != v1 && v6 != 92) {
              lab_0x52fc6a0:
                // 0x409621
                strcat(str, "\\");
                // branch -> 0x409634
            }
          lab_0x52fccf0:
            // 0x409634
            strcat(str, str7);
            int32_t * v16; // 0x4096f2_08
            if (lpFindFileData == (int32_t *)16) {
                // 0x4096a1
                if (v13 != 2) {
                    // 0x4096a7
                    SetFileAttributesA(str, 128);
                    // branch -> 0x4096b9
                }
                // 0x4096b9
                CopyFileA(str6, str, v1 % 2 != 0);
                v16 = (int32_t *)0x409647;
                // branch -> 0x4096ce
              lab_0x52feaa0:
                // 0x4096ce
                v3 = v8 & (int32_t)&v3;
                v15 = v16;
                // branch -> 0x4096d1
            } else {
                // 0x409652
                if (v13 != 1) {
                    // 0x409658
                    if (strcmp(str7, "..") != 0) {
                        // 0x40966f
                        if (strcmp(str7, ".") != 0) {
                            // 0x409686
                            function_40945d();
                            v16 = (int32_t *)0x409680;
                            // branch -> 0x4096ce
                            goto lab_0x52feaa0;
                        } else {
                            v15 = (int32_t *)0x409680;
                        }
                    } else {
                        v15 = (int32_t *)0x409669;
                    }
                } else {
                    v15 = (int32_t *)0x409647;
                }
            }
            // 0x4096d1
            if (!FindNextFileA(hFindFile2, lpFindFileData)) {
                // break -> 0x4096e7
                break;
            }
            // continue -> 0x4095cb
        }
        // 0x4096e7
        FindClose((int32_t)lpFindFileData);
        v14 = v15;
        // branch -> 0x4096ee
    }
    // 0x4096ee
    g131 = 0x4094d8;
    // branch -> 0x4096ef
    // 0x4096ef
    g130 = (int32_t)v14;
}

// Address range: 0x4096f8 - 0x409775
char * function_4096f8(int32_t * a1, int32_t * a2) {
    int32_t v1 = (int32_t)a1; // 0x4096fb
    g131 = 0;
    g130 = 0;
    int32_t v2;
    int32_t v3; // 0x40973d
    int32_t v4; // 0x40974b
    int32_t v5; // 0x40975b
    char * dest_str; // 0x409765
    int32_t v6;
    int32_t v7; // 0x409745
    int32_t v8; // 0x409763
    int32_t v9; // 0x409764
    int32_t * v10; // 0x40976d_01
    if (a1 == NULL) {
        // 0x40973c
        v6 = 0;
        v3 = function_40a780((char *)&v6);
        v7 = g130 - g131;
        g130 = v7;
        v4 = function_40a7c0(v7, (int32_t)a2);
        v2 = v4;
        if (v3 == 0) {
            // 0x40973c
            v9 = v4;
            v8 = g131;
            v10 = (int32_t *)0x409750;
            // branch -> 0x409762
        } else {
            // 0x409758
            v5 = function_40a840(v3);
            g131 = v5;
            v9 = v2;
            v8 = v5;
            v10 = (int32_t *)v3;
            // branch -> 0x409762
        }
        // 0x409762
        dest_str = strncpy((char *)v9, (char *)v8, g130);
        g131 = (int32_t)v10;
        *(char *)(g130 + v2) = 0;
        g130 = v7;
        g129 = v6;
        return dest_str;
    }
    unsigned char v11 = *(char *)a1; // 0x409709
    int32_t v12 = g125 & -256 | (int32_t)v11; // 0x409709
    int32_t v13 = (int32_t)(v12 == 34) + v1; // 0x4096fb
    g131 = v13;
    int32_t v14; // 0x409735
    unsigned char v15; // 0x40972b
    int32_t v16; // 0x409736
    if (v11 == 0) {
        // 0x40972b
        v15 = *(char *)v13;
        g130 = v13;
        if (v15 == 0) {
            // 0x40973c
            v6 = v13;
            v3 = function_40a780((char *)&v6);
            v7 = g130 - g131;
            g130 = v7;
            v4 = function_40a7c0(v7, (int32_t)a2);
            v2 = v4;
            if (v3 == 0) {
                // 0x40973c
                v9 = v4;
                v8 = g131;
                v10 = (int32_t *)0x409750;
                // branch -> 0x409762
            } else {
                // 0x409758
                v5 = function_40a840(v3);
                g131 = v5;
                v9 = v2;
                v8 = v5;
                v10 = (int32_t *)v3;
                // branch -> 0x409762
            }
            // 0x409762
            dest_str = strncpy((char *)v9, (char *)v8, g130);
            g131 = (int32_t)v10;
            *(char *)(g130 + v2) = 0;
            g130 = v7;
            g129 = v6;
            return dest_str;
        }
        v14 = v13;
        v16 = (int32_t)v15 | v1 & -256;
        while (true) {
            // 0x409731
            if (v16 % 256 != 34) {
              lab_0x8eaef70:;
                int32_t v17 = v14 + 1; // 0x409735
                g130 = v17;
                unsigned char v18 = *(char *)v17; // 0x409736
                if (v18 == 0) {
                    // break -> 0x40973c
                    break;
                }
                v14 = v17;
                v16 = (int32_t)v18 | v16 & -256;
                // continue -> 0x409731
                continue;
            }
        }
        // 0x40973c
        v6 = v13;
        v3 = function_40a780((char *)&v6);
        v7 = g130 - g131;
        g130 = v7;
        v4 = function_40a7c0(v7, (int32_t)a2);
        v2 = v4;
        if (v3 == 0) {
            // 0x40973c
            v9 = v4;
            v8 = g131;
            v10 = (int32_t *)0x409750;
            // branch -> 0x409762
        } else {
            // 0x409758
            v5 = function_40a840(v3);
            g131 = v5;
            v9 = v2;
            v8 = v5;
            v10 = (int32_t *)v3;
            // branch -> 0x409762
        }
        // 0x409762
        dest_str = strncpy((char *)v9, (char *)v8, g130);
        g131 = (int32_t)v10;
        *(char *)(g130 + v2) = 0;
        g130 = v7;
        g129 = v6;
        return dest_str;
    }
    int32_t v19;
    while (true) {
        // 0x409717
        int32_t v20; // 0x40972b11
        int32_t v21; // 0x409721
        switch (v12 % 256) {
            default: {
                // 0x40971c
                v19 = v1 + 1;
                v20 = v13;
                // branch -> 0x409724
                break;
            }
            case 47: {
                // 0x409721
                v21 = v1 + 1;
                g131 = v21;
                v19 = v21;
                v20 = v21;
                // branch -> 0x409724
                break;
            }
            case 92: {
                // 0x409721
                v21 = v1 + 1;
                g131 = v21;
                v19 = v21;
                v20 = v21;
                // branch -> 0x409724
                break;
            }
        }
        unsigned char v22 = *(char *)v19; // 0x409725
        if (v22 == 0) {
            v13 = v20;
            // break (via goto) -> 0x40972b
            goto lab_0x5330ba0;
        }
        v1 = v19;
        v12 = (int32_t)v22 | v12 & -256;
        v13 = v20;
        // continue -> 0x409717
    }
  lab_0x5330ba0:
    // 0x40972b
    v15 = *(char *)v13;
    g130 = v13;
    if (v15 != 0) {
        v14 = v13;
        v16 = (int32_t)v15 | v19 & -256;
        while (true) {
            // 0x409731
            if (v16 % 256 != 34) {
                goto lab_0x8eaef70;
            }
            // 0x40973c
            v6 = v13;
            v3 = function_40a780((char *)&v6);
            v7 = g130 - g131;
            g130 = v7;
            v4 = function_40a7c0(v7, (int32_t)a2);
            v2 = v4;
            if (v3 == 0) {
                // 0x40973c
                // branch -> 0x409762
                // 0x409762
                dest_str = strncpy((char *)v4, (char *)g131, g130);
                g131 = (int32_t)(int32_t *)0x409750;
                *(char *)(g130 + v2) = 0;
                g130 = v7;
                g129 = v6;
                return dest_str;
            }
            // 0x409758
            v5 = function_40a840(v3);
            g131 = v5;
            // branch -> 0x409762
            // 0x409762
            dest_str = strncpy((char *)v2, (char *)v5, g130);
            g131 = (int32_t)(int32_t *)v3;
            *(char *)(g130 + v2) = 0;
            g130 = v7;
            g129 = v6;
            return dest_str;
        }
    }
    // 0x40973c
    v6 = v13;
    v3 = function_40a780((char *)&v6);
    v7 = g130 - g131;
    g130 = v7;
    v4 = function_40a7c0(v7, (int32_t)a2);
    v2 = v4;
    if (v3 == 0) {
        // 0x40973c
        v9 = v4;
        v8 = g131;
        v10 = (int32_t *)0x409750;
        // branch -> 0x409762
    } else {
        // 0x409758
        v5 = function_40a840(v3);
        g131 = v5;
        v9 = v2;
        v8 = v5;
        v10 = (int32_t *)v3;
        // branch -> 0x409762
    }
    // 0x409762
    dest_str = strncpy((char *)v9, (char *)v8, g130);
    g131 = (int32_t)v10;
    *(char *)(g130 + v2) = 0;
    g130 = v7;
    g129 = v6;
    return dest_str;
}

// Address range: 0x409778 - 0x4097cf
int32_t function_409778(int32_t a1, int32_t a2) {
    // 0x409778
    g124 = 0;
    int32_t result; // 0x4097c6_11
    if (a1 == 0) {
        // 0x4097c6
        return result;
    }
    int32_t v1 = g125 & -256 | (int32_t)*(char *)a1; // 0x409782
    if (v1 == 0) {
        // 0x4097c6
        return result;
    }
    g125 = v1;
    while (true) {
        // 0x409789
        if ((char)v1 < 32) {
            // 0x4097c6
            return 0;
        }
        // switch.early.test
        switch (v1 % 256) {
            default: {
                int32_t v2 = a1 + 1; // 0x4097bb
                int32_t v3 = (int32_t)*(char *)v2 | v1 & -256; // 0x4097bc
                g125 = v3;
                if (v3 == 0) {
                    // break (via goto) -> 0x4097c6
                    goto lab_0x534c0b0;
                }
                a1 = v2;
                v1 = v3;
                // continue -> 0x409789
                continue;
            }
            case 124: {
                // 0x4097c6
                return 0;
            }
            case 92: {
                // 0x4097c6
                return 0;
            }
            case 63: {
                // 0x4097c6
                return 0;
            }
            case 62: {
                // 0x4097c6
                return 0;
            }
            case 60: {
                // 0x4097c6
                return 0;
            }
            case 58: {
                // 0x4097c6
                return 0;
            }
            case 47: {
                // 0x4097c6
                return 0;
            }
            case 42: {
                // 0x4097c6
                return 0;
            }
            case 34: {
                // 0x4097c6
                return 0;
            }
        }
    }
  lab_0x534c0b0:
    // 0x4097c6
    return 1;
}

// Address range: 0x4097d0 - 0x40980f
int32_t function_4097d0(int32_t * a1) {
    int32_t v1 = g130; // 0x4097d1
    int32_t v2 = (int32_t)a1; // 0x4097d2
    g130 = v2;
    if (*(int32_t *)(v2 + 20) == 0) {
        int32_t v3 = *(int32_t *)(v2 + 8); // 0x4097e1
        int32_t v4 = *(int32_t *)(v2 + 12); // 0x4097e4
        int32_t v5 = *(int32_t *)(v2 + 4); // 0x4097e7
        g126 = v5;
        WriteFile(*a1, (char *)v5, v3 - v4, NULL, NULL);
        int32_t v6 = g130; // 0x4097fb
        *(int32_t *)(v6 + 12) = *(int32_t *)(v6 + 8);
        // branch -> 0x409805
    }
    // 0x409805
    g130 = v1;
    return 0;
}

// Address range: 0x409810 - 0x40986f
int32_t function_409810(int32_t a1) {
    // 0x409810
    g131 = a1;
    char * v1;
    if (a1 == -1) {
        // 0x409863
        g131 = (int32_t)v1;
        struct struct_31 * v2; // 0x409864_21
        return (int32_t)v2;
    }
    int32_t v3 = function_409bf5(g121, a1); // 0x409822
    struct struct_31 * v4 = (struct struct_31 *)v3; // 0x409822_5
    g130 = v3;
    struct struct_31 * v5 = v4; // 0x409864_22
    int32_t * v6;
    if (v3 != 0) {
        // 0x40982d
        int32_t v7; // 0x40984c
        if (v4->e1 != NULL) {
            // 0x409833
            function_4097d0((int32_t *)v3);
            HeapFree((int32_t)*(char *)g34, 0, v4->e1);
            v7 = g130;
            // branch -> 0x40984c
        } else {
            v7 = v3;
        }
        // 0x40984c
        CloseHandle(*(int32_t *)v7);
        struct struct_31 * v8 = (struct struct_31 *)function_409c5b(g121); // 0x40985d_4
        v1 = (char *)g131;
        v6 = (int32_t *)g121;
        v5 = v8;
        // branch -> 0x409862
    }
    // 0x409862
    g130 = (int32_t)v6;
    // branch -> 0x409863
    // 0x409863
    g131 = (int32_t)v1;
    return (int32_t)v5;
}

// Address range: 0x409870 - 0x40987f
int32_t function_409870(void) {
    int32_t v1 = g121; // 0x409870
    g124 = v1;
    function_409d85((int32_t *)v1);
    return g128;
}

// Address range: 0x409880 - 0x40989f
int32_t function_409880(void) {
    // 0x409880
    function_409c96(24, 16, (int32_t)function_409810);
    g121 = g124;
    return g124;
}

// Address range: 0x4098a0 - 0x4098bf
int32_t function_4098a0(int32_t a1) {
    // 0x4098a0
    function_409c1a(g121, a1);
    return g124;
}

// Address range: 0x4098c0 - 0x4099df
int32_t function_4098c0(int32_t a1, int32_t * a2, int32_t * a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, int32_t a8, int32_t a9, int32_t a10) {
    int32_t v1 = g125; // 0x4098c0
    int32_t v2 = g129; // 0x4098c2
    int32_t v3 = g130; // 0x4098c3
    int32_t v4 = g131; // 0x4098c4
    g130 = g124;
    g127 = v1;
    int32_t v5 = g121; // 0x4098cd
    g125 = v5;
    function_409b6d((struct struct_32 *)v5, a1);
    g131 = g124;
    int32_t v6;
    int32_t v7;
    int32_t result; // 0x4099a6
    int32_t result2; // 0x4099af
    int32_t dwBytes; // 0x40996b
    int32_t v8; // 0x409974
    int32_t v9; // 0x409992
    int32_t v10; // 0x4099bd
    int32_t * v11; // 0x4099ca_01
    int32_t v12; // 0x4099cb2
    int32_t v13; // 0x409960
    switch (g130) {
        default: {
            // 0x40995c
            g130 = v2;
            v13 = v2;
            // branch -> 0x409960
            break;
        }
        case 1: {
            char v14 = *(char *)3;
            int32_t fileHandle = CreateFileA((char *)g127, -0x80000000, 1, 0, (int32_t)v14, 128, 0); // 0x4098f3
            g130 = fileHandle;
            v13 = fileHandle;
            // branch -> 0x409960
            break;
        }
        case 2: {
            char v15 = *(char *)4;
            int32_t fileHandle2 = CreateFileA((char *)g127, -0x40000000, 1, 0, (int32_t)v15, 128, 0); // 0x409915
            g130 = fileHandle2;
            v13 = fileHandle2;
            // branch -> 0x409960
            break;
        }
        case 3: {
            char v16 = *(char *)2;
            int32_t fileHandle3 = CreateFileA((char *)g127, -0x40000000, 1, 0, (int32_t)v16, 128, 0); // 0x40993d
            g130 = fileHandle3;
            if (fileHandle3 == -1) {
                char v17 = *(char *)5;
                int32_t fileHandle4 = CreateFileA((char *)g127, 0x40000000, 1, 0, (int32_t)v17, 0, 0); // 0x409956
                g130 = fileHandle4;
                v13 = fileHandle4;
                // branch -> 0x409960
                // 0x409960
                if (v13 != -1) {
                    // 0x409965
                    if (v13 != 0) {
                        // 0x40996b
                        dwBytes = g9;
                        if (dwBytes == 0) {
                            // 0x409988
                            *(int32_t *)(g131 + 4) = 0;
                            // branch -> 0x40998b
                        } else {
                            // 0x409974
                            v8 = g34;
                            g126 = v8;
                            *(int32_t *)(g131 + 4) = HeapAlloc((int32_t)*(char *)v8, 0, dwBytes);
                            // branch -> 0x40998b
                        }
                        // 0x40998b
                        *(int32_t *)g131 = g130;
                        v9 = g9;
                        g124 = v9;
                        *(int32_t *)(g131 + 8) = v9;
                        *(int32_t *)(g131 + 12) = 0;
                        *(int32_t *)(g131 + 20) = 1;
                        if (v1 == -1) {
                            // 0x4099a6
                            result = g131;
                            g131 = v5;
                            g130 = a1;
                            g129 = v4;
                            g127 = v3;
                            g125 = v2;
                            return result;
                        }
                        // 0x4099ae
                        g131 = v1;
                        result2 = g130;
                        g130 = v6;
                        g129 = a1;
                        g127 = (int32_t)a2;
                        g125 = (int32_t)a3;
                        return result2;
                    }
                }
            } else {
                // 0x409965
                if (fileHandle3 != 0) {
                    // 0x40996b
                    dwBytes = g9;
                    if (dwBytes == 0) {
                        // 0x409988
                        *(int32_t *)(g131 + 4) = 0;
                        // branch -> 0x40998b
                    } else {
                        // 0x409974
                        v8 = g34;
                        g126 = v8;
                        *(int32_t *)(g131 + 4) = HeapAlloc((int32_t)*(char *)v8, 0, dwBytes);
                        // branch -> 0x40998b
                    }
                    // 0x40998b
                    *(int32_t *)g131 = g130;
                    v9 = g9;
                    g124 = v9;
                    *(int32_t *)(g131 + 8) = v9;
                    *(int32_t *)(g131 + 12) = 0;
                    *(int32_t *)(g131 + 20) = 1;
                    if (v1 == -1) {
                        // 0x4099a6
                        result = g131;
                        g131 = v5;
                        g130 = a1;
                        g129 = v4;
                        g127 = v3;
                        g125 = v2;
                        return result;
                    }
                    // 0x4099ae
                    g131 = v1;
                    result2 = g130;
                    g130 = v6;
                    g129 = a1;
                    g127 = (int32_t)a2;
                    g125 = (int32_t)a3;
                    return result2;
                }
            }
            // 0x4099b6
            v12 = a4;
            v11 = a3;
            if (v7 == -1) {
                // 0x4099bd
                v10 = g121;
                function_409c5b(v10);
                v12 = g131;
                v11 = (int32_t *)v10;
                // branch -> 0x4099ca
            }
            // 0x4099ca
            g131 = (int32_t)v11;
            g130 = v12;
            g129 = a5;
            g127 = a6;
            g125 = a7;
            return 0;
        }
    }
    // 0x409960
    if (v13 == -1 || v13 == 0) {
        // 0x4099b6
        v12 = a4;
        v11 = a3;
        if (v7 == -1) {
            // 0x4099bd
            v10 = g121;
            function_409c5b(v10);
            v12 = g131;
            v11 = (int32_t *)v10;
            // branch -> 0x4099ca
        }
        // 0x4099ca
        g131 = (int32_t)v11;
        g130 = v12;
        g129 = a5;
        g127 = a6;
        g125 = a7;
        return 0;
    }
    // 0x40996b
    dwBytes = g9;
    if (dwBytes == 0) {
        // 0x409988
        *(int32_t *)(g131 + 4) = 0;
        // branch -> 0x40998b
    } else {
        // 0x409974
        v8 = g34;
        g126 = v8;
        *(int32_t *)(g131 + 4) = HeapAlloc((int32_t)*(char *)v8, 0, dwBytes);
        // branch -> 0x40998b
    }
    // 0x40998b
    *(int32_t *)g131 = g130;
    v9 = g9;
    g124 = v9;
    *(int32_t *)(g131 + 8) = v9;
    *(int32_t *)(g131 + 12) = 0;
    *(int32_t *)(g131 + 20) = 1;
    if (v1 == -1) {
        // 0x4099a6
        result = g131;
        g131 = v5;
        g130 = a1;
        g129 = v4;
        g127 = v3;
        g125 = v2;
        return result;
    }
    // 0x4099ae
    g131 = v1;
    result2 = g130;
    g130 = v6;
    g129 = a1;
    g127 = (int32_t)a2;
    g125 = (int32_t)a3;
    return result2;
}

// Address range: 0x4099e0 - 0x4099ff
void function_4099e0(void) {
    int32_t v1;
    int32_t v2 = v1;
    int32_t v3;
    g125 = v3;
    g124 = 3;
    int32_t v4;
    function_4098c0(v1, &v4, &v2, v3, 0, 0, 0, 0, 0, 0);
}

// Address range: 0x409a00 - 0x409a1f
int32_t function_409a00(int32_t a1, int32_t a2) {
    int32_t v1 = a1;
    g125 = a2;
    g124 = 1;
    int32_t v2;
    function_4098c0(a1, &v2, &v1, a2, 0, 0, 0, 0, 0, 0);
    return g124;
}

// Address range: 0x409a20 - 0x409a6f
void function_409a20(void) {
    // 0x409a20
    g125 = g121;
    int32_t v1;
    function_409bf5(g121, v1);
    int32_t v2 = g124; // 0x409a3a
    int32_t v3; // 0x409a68_0
    int32_t * lpNumberOfBytesWritten;
    if (v2 == 0) {
        // 0x409a68
        v3 = (int32_t)lpNumberOfBytesWritten;
        g124 = v3;
        g125 = v3;
        return;
    }
    // 0x409a3e
    if (*(int32_t *)(v2 + 4) != 0) {
        // 0x409a48
        function_409a70();
        g125 = v2;
        return;
    }
    // 0x409a55
    char * lpBuffer;
    WriteFile(*(int32_t *)v2, lpBuffer, 1, lpNumberOfBytesWritten, NULL);
    // branch -> 0x409a68
    // 0x409a68
    v3 = (int32_t)lpNumberOfBytesWritten;
    g124 = v3;
    g125 = v3;
}

// Address range: 0x409a70 - 0x409b6a
void function_409a70(void) {
    int32_t v1 = g130; // bp-8
    int32_t v2;
    g130 = v2;
    int32_t v3 = g131; // 0x409a7a
    int32_t v4 = v2; // 0x409ab0
    if (*(int32_t *)(v2 + 20) == 1) {
        // 0x409a85
        SetFilePointer(*(int32_t *)v2, -*(int32_t *)(v2 + 12), NULL, 1);
        int32_t v5 = g130; // 0x409a98
        g126 = *(int32_t *)(v5 + 8);
        *(int32_t *)(v5 + 20) = 0;
        *(int32_t *)(g130 + 12) = g126;
        v4 = g130;
        // branch -> 0x409aa5
    }
    int32_t v6 = *(int32_t *)(v4 + 12); // 0x409aa5
    int32_t * v7;
    int32_t v8 = (int32_t)v7; // 0x409aa8
    g131 = v8;
    int16_t * v9;
    char * v10;
    if (v6 <= v8) {
        // 0x409b1e
        function_4097d0((int32_t *)v4);
        int32_t v11 = g130; // 0x409b24
        int32_t v12 = *(int32_t *)(v11 + 8); // 0x409b24
        int32_t nNumberOfBytesToWrite = g131; // 0x409b27
        int32_t v13;
        if (nNumberOfBytesToWrite >= v12) {
            int32_t hFile = *(int32_t *)v11; // 0x409b2f
            int32_t v14 = v13;
            WriteFile(hFile, (char *)&v14, nNumberOfBytesToWrite, (int32_t *)v9, NULL);
            g124 = (int32_t)v10;
            g131 = v4;
            int32_t * v15;
            g130 = (int32_t)v15;
            return;
        }
        int32_t v16 = *(int32_t *)(v11 + 4); // 0x409b4b
        int32_t v17 = *(int32_t *)(v11 + 12); // 0x409b4e
        char * v18;
        g126 = (int32_t)v18;
        memcpy((int32_t *)(v16 - v17 + v12), (int32_t *)v18, nNumberOfBytesToWrite);
        int32_t * v19 = (int32_t *)(g130 + 12); // 0x409b62_0
        *v19 = *v19 - g131;
        g124 = g131;
        int32_t v20;
        g131 = v20;
        g130 = v13;
        return;
    }
    int32_t v21 = *(int32_t *)(v4 + 8) - v6 + *(int32_t *)(v4 + 4); // 0x409ab6
    if (v7 == (int32_t *)1) {
        // 0x409b0b
        g126 = (int32_t)v10;
        *(char *)v21 = *v10;
        int32_t * v22 = (int32_t *)(g130 + 12); // 0x409b13_0
        *v22 = *v22 - g131;
        g124 = g131;
        int32_t * v23;
        g131 = (int32_t)v23;
        g130 = (int32_t)v9;
        return;
    }
    // 0x409abf
    int32_t * v24;
    if (v8 == 2) {
        // 0x409af6
        g126 = (int32_t)v9;
        *(int16_t *)v21 = *v9;
        int32_t * v25 = (int32_t *)(g130 + 12); // 0x409b00_0
        *v25 = *v25 - g131;
        g124 = g131;
        int32_t v26;
        g131 = v26;
        g130 = (int32_t)v24;
        return;
    }
    // 0x409ac4
    int32_t * v27;
    if (v8 != 4) {
        // 0x409ac9
        memcpy((int32_t *)v21, v27, v8);
        int32_t * v28 = (int32_t *)(g130 + 12); // 0x409ad8_0
        *v28 = *v28 - g131;
        g124 = g131;
        g131 = v3;
        g130 = &v1;
        return;
    }
    // 0x409ae3
    g126 = (int32_t)v24;
    *(int32_t *)v21 = *v24;
    int32_t * v29 = (int32_t *)(g130 + 12); // 0x409aeb_0
    *v29 = *v29 - g131;
    g124 = g131;
    g131 = v2;
    g130 = (int32_t)v27;
}

// Address range: 0x409b6d - 0x409bf2
int32_t function_409b6d(struct struct_32 * a1, int32_t a2) {
    int32_t v1 = g127; // 0x409b6d
    g127 = a2;
    int32_t result; // 0x409b85
    if (a2 == -1) {
        int32_t v2 = *(int32_t *)a1 + 8; // 0x409b7d
        int32_t v3 = (int32_t)a1 + 16; // 0x409b81
        g124 = v3;
        result = function_40a31c((struct struct_18 *)v3, v2);
        g125 = v2;
        // branch -> 0x409bf1
    } else {
        int32_t v4 = g130; // 0x409b8e
        g130 = (int32_t)a1;
        struct struct_32 * v5 = (struct struct_32 *)g131; // bp-12
        int32_t v6 = a2; // 0x409bce
        struct struct_32 * v7 = a1;
        if (a1->e2 <= a2) {
            int32_t v8 = a1->e1 + a2; // 0x409b9c
            a1->e2 = v8;
            int32_t * lpMem = a1->e3; // 0x409ba5
            char v9 = *(char *)g34;
            char v10 = *(char *)8;
            int32_t v11 = HeapReAlloc((int32_t)v9, (int32_t)v10, lpMem, 4 * v8); // 0x409bb0
            a1->e3 = (int32_t *)v11;
            v6 = g127;
            v7 = a1;
            // branch -> 0x409bb9
        }
        int32_t v12 = 4 * v6; // 0x409bbe
        g131 = v12;
        if (*(int32_t *)((int32_t)v7->e3 + v12) == 0) {
            int32_t v13 = HeapAlloc((int32_t)*(char *)g34, 8, *(int32_t *)g130); // 0x409bdd
            int32_t v14 = (int32_t)a1->e3; // 0x409be3_0
            g125 = v14;
            *(int32_t *)(g131 + v14) = v13;
            // branch -> 0x409be9
        } else {
            int32_t v15 = v7->e5; // 0x409bc7
            g124 = v15;
            if (v15 != 0) {
                // 0x409bce
                ((int32_t (*)(int32_t))v15)(v6);
                // branch -> 0x409be9
            }
        }
        int32_t v16 = (int32_t)a1->e3; // 0x409be9_0
        g124 = v16;
        int32_t v17 = *(int32_t *)(g131 + v16); // 0x409bec
        g131 = (int32_t)v5;
        g130 = v4;
        result = v17;
        // branch -> 0x409bf1
    }
    // 0x409bf1
    g127 = v1;
    return result;
}

// Address range: 0x409bf5 - 0x409c17
int32_t function_409bf5(int32_t a1, int32_t a2) {
    g124 = a2;
    int32_t * v1; // 0x409c09_1
    if (a2 >= 0) {
        int32_t v2 = &a1; // 0x409bfd_0
        g125 = v2;
        if (*(int32_t *)(v2 + 8) > a2) {
            int32_t v3 = *(int32_t *)(v2 + 12); // 0x409c06
            g125 = v3;
            int32_t v4 = *(int32_t *)(v3 + 4 * a2); // 0x409c09
            v1 = (int32_t *)v4;
            if (v4 == 0) {
                // 0x409c17
                return 0;
            }
        }
    }
    // 0x409c10
    // branch -> 0x409c17
    // 0x409c17
    return *v1 == 0 ? 0 : (int32_t)v1;
}

// Address range: 0x409c1a - 0x409c58
int32_t function_409c1a(int32_t a1, uint32_t a2) {
    // 0x409c1a
    g125 = a1;
    g124 = 0;
    int32_t * v1; // 0x409c58_11
    if (a2 >= 0) {
        // 0x409c28
        if (*(int32_t *)(a1 + 8) > a2) {
            int32_t v2 = *(int32_t *)(a1 + 12); // 0x409c2d
            g124 = v2;
            int32_t v3 = *(int32_t *)(v2 + 4 * a2); // 0x409c30
            int32_t * v4 = (int32_t *)v3; // 0x409c30_1
            if (v3 != 0) {
                // 0x409c37
                v1 = *v4 == 0 ? NULL : v4;
                // branch -> 0x409c58
            } else {
                v1 = v4;
            }
            // 0x409c58
            return (int32_t)v1;
        }
    }
    int32_t v5 = *(int32_t *)(a1 + 16); // 0x409c40
    g125 = v5;
    if (v5 == 0) {
        // 0x409c58
        return (int32_t)v1;
    }
    int32_t v6 = g130; // 0x409c47
    int32_t v7 = v5 + 8; // 0x409c48
    g130 = v7;
    int32_t * v8; // 0x409c58_12
    v8 = v7 == a2 ? (int32_t *)a2 : v8;
    int32_t v9 = *(int32_t *)v5; // 0x409c51
    g125 = v9;
    // branch -> 0x409c48
    while (v9 != 0) {
        // 0x409c48
        v5 = v9;
        v7 = v5 + 8;
        g130 = v7;
        v8 = v7 == a2 ? (int32_t *)a2 : v8;
        v9 = *(int32_t *)v5;
        g125 = v9;
        // continue -> 0x409c48
    }
    // 0x409c57
    g130 = v6;
    // branch -> 0x409c58
    // 0x409c58
    return (int32_t)v8;
}

// Address range: 0x409c5b - 0x409c93
int32_t function_409c5b(int32_t a1) {
    int32_t v1;
    g124 = v1;
    g125 = a1;
    int32_t v2;
    if (v1 >= 0) {
        // 0x409c67
        if (v1 < *(int32_t *)(a1 + 8)) {
            int32_t v3 = *(int32_t *)(a1 + 12); // 0x409c6c
            g126 = v3;
            int32_t v4 = v3 + 4 * v1; // 0x409c6f
            int32_t * v5 = (int32_t *)v4; // 0x409c72_0
            int32_t ** set_mem; // 0x409c93_11
            if (*v5 != 0) {
                // 0x409c77
                v2 = 0;
                int32_t v6 = *v5; // 0x409c7b
                set_mem = (int32_t **)memset((int32_t *)v6, 0, *(int32_t *)a1);
                // branch -> 0x409c93
            } else {
                set_mem = (int32_t **)v4;
            }
            // 0x409c93
            return (int32_t)set_mem;
        }
    }
    // 0x409c87
    v2 = a1 + 16;
    int32_t ** v7 = (int32_t **)(int32_t)function_40a2dc(&v2, v1); // 0x409c8c_4
    g125 = v1;
    // branch -> 0x409c93
    // 0x409c93
    return (int32_t)v7;
}

// Address range: 0x409c96 - 0x409cdc
int32_t function_409c96(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = g130; // 0x409c96
    int32_t v2 = g131; // 0x409c97
    g131 = g12;
    HeapAlloc((int32_t)*(char *)g34, 8, 32);
    g130 = g124;
    *(int32_t *)(g124 + 16) = 0;
    *(int32_t *)g130 = a1;
    *(int32_t *)(g130 + 20) = a3;
    *(int32_t *)(g130 + 4) = a2;
    *(int32_t *)(g130 + 8) = a2;
    int32_t dwBytes = 4 * a2; // 0x409cc7
    g124 = dwBytes;
    int32_t v3 = HeapAlloc((int32_t)*(char *)g34, 8, dwBytes); // 0x409cd3
    *(int32_t *)(g130 + 12) = v3;
    g131 = v2;
    int32_t result = g130; // 0x409cd9
    g130 = v1;
    return result;
}

// Address range: 0x409cdf - 0x409ce3
int32_t function_409cdf(char * a1) {
    // 0x409cdf
    return (int32_t)a1;
}

// Address range: 0x409ce6 - 0x409d0b
int32_t function_409ce6(int32_t dwBytes, int32_t a2) {
    int32_t v1 = g130; // 0x409ce6
    HeapAlloc((int32_t)*(char *)g34, 8, dwBytes);
    int32_t v2 = g124; // 0x409cfe
    g130 = v2;
    int32_t result; // 0x409d08
    if (a2 != 0) {
        // 0x409d02
        ((int32_t (*)(int32_t))a2)(v2);
        g125 = v1;
        result = g130;
        // branch -> 0x409d08
    } else {
        result = v2;
    }
    // 0x409d08
    int32_t v3;
    g130 = v3;
    return result;
}

// Address range: 0x409d0e - 0x409d2f
int32_t function_409d0e(int32_t a1) {
    // 0x409d0e
    g124 = a1;
    int32_t v1 = *(int32_t *)(a1 + 16); // 0x409d12
    int32_t v2 = 0;
    *(int32_t *)(a1 + 24) = 0;
    *(int32_t *)(g124 + 28) = v1;
    if (v1 == 0 || *(int32_t *)v1 == v2) {
        // 0x409d2f
        return g124;
    }
    int32_t * v3 = (int32_t *)(g124 + 28); // 0x409d23_0
    int32_t v4 = *(int32_t *)*v3; // 0x409d26
    *v3 = v4;
    while (*(int32_t *)v4 != v2) {
        // 0x409d23
        v3 = (int32_t *)(g124 + 28);
        v4 = *(int32_t *)*v3;
        *v3 = v4;
        // continue -> 0x409d23
    }
    // 0x409d2f
    return g124;
}

// Address range: 0x409d32 - 0x409d82
int32_t function_409d32(int32_t a1, int32_t * a2, int32_t * a3) {
    // 0x409d32
    g125 = a1;
    int32_t v1 = g131; // 0x409d36
    g131 = (int32_t)a2;
    g124 = 0;
    int32_t v2 = g130; // 0x409d3d
    int32_t * v3 = (int32_t *)(a1 + 24); // bp+021
    int32_t v4 = *v3; // 0x409d3e22
    g126 = v4;
    int32_t * v5; // 0x409d78_0
    int32_t result; // 0x409d82_11
    int32_t v6; // 0x409d73
    int32_t v7; // 0x409d6c
    int32_t v8; // 0x409d7b
    if (v4 < 0) {
        // 0x409d6c
        g130 = v2;
        v7 = *(int32_t *)(a1 + 28);
        g126 = v7;
        if (v7 != 0) {
            // 0x409d73
            v6 = v7 + 8;
            *(int32_t *)g131 = v6;
            v5 = (int32_t *)(g125 + 28);
            v8 = *(int32_t *)(*v5 + 4);
            g126 = v8;
            *v5 = v8;
            result = v6;
            // branch -> 0x409d81
        } else {
            result = 0;
        }
        // 0x409d81
        g131 = v1;
        return result;
    }
    int32_t v9 = a1; // 0x409d4a24
    int32_t v10;
    while (true) {
        // 0x409d45
        if (v4 < *(int32_t *)(v9 + 8)) {
            int32_t v11 = *(int32_t *)(v9 + 12) + 4 * v4; // 0x409d4d
            g130 = v11;
            int32_t result2 = *(int32_t *)v11; // 0x409d50
            if (result2 != 0) {
                // 0x409d55
                g130 = result2;
                if (*(int32_t *)result2 != 0) {
                    // 0x409d67
                    *(int32_t *)g131 = v4;
                    int32_t * v12 = (int32_t *)(g125 + 24); // 0x409d60_0
                    *v12 = *v12 + 1;
                    g130 = v2;
                    // branch -> 0x409d81
                    // 0x409d81
                    g131 = v1;
                    return result2;
                }
            }
            // 0x409d60
            *v3 = *v3 + 1;
            int32_t * v13 = (int32_t *)(g125 + 24); // 0x409d3e_0
            int32_t v14 = *v13; // 0x409d3e
            g126 = v14;
            if (v14 < 0) {
                v10 = g125;
                // break -> 0x409d6c
                break;
            }
            v4 = v14;
            v3 = v13;
            v9 = g125;
            // continue -> 0x409d45
            continue;
        } else {
            v10 = v9;
        }
    }
    // 0x409d6c
    g130 = v2;
    v7 = *(int32_t *)(v10 + 28);
    g126 = v7;
    if (v7 != 0) {
        // 0x409d73
        v6 = v7 + 8;
        *(int32_t *)g131 = v6;
        v5 = (int32_t *)(g125 + 28);
        v8 = *(int32_t *)(*v5 + 4);
        g126 = v8;
        *v5 = v8;
        result = v6;
        // branch -> 0x409d81
    } else {
        result = 0;
    }
    // 0x409d81
    g131 = v1;
    return result;
}

// Address range: 0x409d85 - 0x409db0
int32_t function_409d85(int32_t * a1) {
    int32_t v1 = (int32_t)a1; // 0x409d89
    g130 = v1;
    if (*(int32_t *)(v1 + 20) == 0) {
        // 0x409dae
        int32_t v2;
        g130 = v2;
        g129 = v1;
        return 0;
    }
    // 0x409d92
    function_409d0e(v1);
    int32_t v3 = g130; // 0x409da44
    if (function_409d32(v3, a1, (int32_t *)0x409d98) == 0) {
        // 0x409dae
        g130 = v3;
        g129 = v1;
        return 0;
    }
    ((int32_t (*)(int32_t))*(int32_t *)(g130 + 20))(v1);
    int32_t v4 = g130; // 0x409da4
    while (function_409d32(v4, a1, a1) != 0) {
        // 0x409d9a
        ((int32_t (*)(int32_t))*(int32_t *)(g130 + 20))(v1);
        v4 = g130;
        // continue -> 0x409d9a
    }
    // 0x409dae
    g130 = v4;
    g129 = v1;
    return 0;
}

// Address range: 0x409db3 - 0x409dc5
void function_409db3(void) {
    // 0x409db3
    InitializeCriticalSection(g88);
    g87 = 0;
}

// Address range: 0x409dc6 - 0x409ef9
int32_t function_409dc6(int32_t a1, char * a2, int32_t * a3, char a4, int32_t a5) {
    int32_t v1 = g131; // 0x409dcf
    int32_t v2 = a4; // 0x409dd0
    int32_t v3 = a1 + 4; // 0x409dd3
    g127 = v3;
    g130 = 0;
    g131 = v2 % 4;
    int32_t v4 = v3 % 4; // 0x409ddd
    g124 = v4;
    if (v3 != 3) {
        int32_t v5 = 4 - v4; // 0x409de8
        g125 = v5;
        g127 = v5 + v3;
        // branch -> 0x409dec
    }
    // 0x409dec
    char * v6;
    int32_t * v7;
    int32_t result;
    if (a4 == 4) {
        int32_t v8 = HeapAlloc((int32_t)*(char *)g34, 0, 56); // 0x409eb5
        g130 = v8;
        g124 = 0;
        int32_t * v9;
        if (v8 == 0) {
            // 0x409ef5
            result = g130;
            g131 = (int32_t)v7;
            g130 = (int32_t)*v6;
            g127 = (int32_t)v9;
            return result;
        }
        // 0x409ec3
        *(int32_t *)(v8 + 20) = (int32_t)*a2;
        *(int32_t *)(g130 + 24) = (int32_t)a3;
        *(int32_t *)g130 = g124;
        *(int32_t *)(g130 + 4) = g124;
        *(int32_t *)(g130 + 8) = g124;
        *(int32_t *)(g130 + 16) = g127;
        int32_t v10 = g130; // 0x409ee1
        if (g131 == 1) {
            int32_t v11 = v10 + 32; // 0x409ee1
            g124 = v11;
            *(int32_t *)(v10 + 28) = 1;
            InitializeCriticalSection((int32_t *)(struct struct_34 *)v11);
            // branch -> 0x409ef5
        } else {
            // 0x409ef0
            *(int32_t *)(v10 + 28) = g124;
            // branch -> 0x409ef5
        }
        // 0x409ef5
        result = g130;
        g131 = (int32_t)v7;
        g130 = (int32_t)*v6;
        g127 = (int32_t)v9;
        return result;
    }
    int32_t v12 = 0x40f524;
    function_40a231(&v12, (int32_t *)function_409db3, v1);
    int32_t * lpCriticalSection = g88; // 0x409e0a
    EnterCriticalSection(lpCriticalSection);
    int32_t v13 = g87;
    g124 = v13;
    int32_t v14 = g130; // 0x409e2612
    int32_t dwFlags = v13; // 0x409e3b
    char * v15; // 0x409e3c_0
    char * v16; // 0x409e5b_0
    int32_t * v17; // 0x409e5e_0
    int32_t v18; // 0x409e42
    int32_t v19; // 0x409e5f
    int32_t v20; // 0x409e77
    int32_t * v21; // 0x409ef5_04
    int32_t * v22; // 0x409ef7_07
    int32_t v23; // 0x409e58
    if (v13 != v14) {
        // branch -> 0x409e17
        while (true) {
            // 0x409e17
            if (*(int32_t *)(v13 + 12) == g127) {
                // 0x409e1c
                g125 = v2;
                if (*(int32_t *)(v13 + 16) == v2) {
                    int32_t * v24 = (int32_t *)(v13 + 20); // 0x409e2c_0
                    *v24 = *v24 + 1;
                    int32_t v25 = *(int32_t *)(g124 + 8); // 0x409e2f
                    g124 = v25;
                    int32_t * v26 = (int32_t *)0x409e10; // 0x409ef7_08
                    if (v25 == g130) {
                        dwFlags = v25;
                        // 0x409e39
                        v15 = (char *)g34;
                        v6 = v15;
                        v18 = HeapAlloc((int32_t)*v15, dwFlags, 24);
                        g130 = v18;
                        if (v18 != 0) {
                            // 0x409e4e
                            v23 = g127 - 4;
                            v16 = (char *)(int32_t)*a2;
                            v6 = v16;
                            v17 = (int32_t *)v23;
                            v19 = function_409dc6(v23, v16, a3, a4 & -5, v12);
                            g131 = v19;
                            if (v19 == 0) {
                                // 0x409e9d
                                LeaveCriticalSection(lpCriticalSection);
                                // branch -> 0x409ef5
                                // 0x409ef5
                                result = g131;
                                g131 = (int32_t)v17;
                                g130 = (int32_t)*v6;
                                g127 = (int32_t)a3;
                                return result;
                            }
                            // 0x409e6a
                            *(int32_t *)(v19 + 8) = g130;
                            *(int32_t *)(g130 + 4) = 0;
                            *(int32_t *)(g130 + 16) = v2;
                            v20 = g87;
                            g124 = v20;
                            *(int32_t *)(g130 + 8) = g131;
                            *(int32_t *)(g130 + 12) = g127;
                            *(int32_t *)(g130 + 20) = 1;
                            *(int32_t *)g130 = g124;
                            if (v20 != 0) {
                                // 0x409e8f
                                *(int32_t *)(g124 + 4) = g130;
                                // branch -> 0x409e92
                            }
                            // 0x409e92
                            g87 = g130;
                            // branch -> 0x409e9d
                            // 0x409e9d
                            LeaveCriticalSection(lpCriticalSection);
                            // branch -> 0x409ef5
                            // 0x409ef5
                            result = g131;
                            g131 = (int32_t)v17;
                            g130 = (int32_t)*v6;
                            g127 = (int32_t)a3;
                            return result;
                        }
                        v26 = (int32_t *)dwFlags;
                        v7 = (int32_t *)0x409e48;
                    }
                    // 0x409e9a
                    g131 = v25;
                    // branch -> 0x409e9d
                    // 0x409e9d
                    LeaveCriticalSection(lpCriticalSection);
                    // branch -> 0x409ef5
                    // 0x409ef5
                    result = g131;
                    g131 = (int32_t)v7;
                    g130 = (int32_t)*v6;
                    g127 = (int32_t)v26;
                    return result;
                }
            }
            int32_t v27 = *(int32_t *)v13;
            g124 = v27;
            if (v27 == v14) {
                dwFlags = v14;
                // break -> 0x409e39
                break;
            }
            v13 = v27;
            // continue -> 0x409e17
        }
        // 0x409e39
        v15 = (char *)g34;
        v6 = v15;
        v18 = HeapAlloc((int32_t)*v15, dwFlags, 24);
        g130 = v18;
        if (v18 == 0) {
            // 0x409e9a
            g131 = 0;
            v22 = (int32_t *)dwFlags;
            v21 = (int32_t *)0x409e48;
            // branch -> 0x409e9d
        } else {
            // 0x409e4e
            v23 = g127 - 4;
            v16 = (char *)(int32_t)*a2;
            v6 = v16;
            v17 = (int32_t *)v23;
            v19 = function_409dc6(v23, v16, a3, a4 & -5, v12);
            g131 = v19;
            if (v19 != 0) {
                // 0x409e6a
                *(int32_t *)(v19 + 8) = g130;
                *(int32_t *)(g130 + 4) = 0;
                *(int32_t *)(g130 + 16) = v2;
                v20 = g87;
                g124 = v20;
                *(int32_t *)(g130 + 8) = g131;
                *(int32_t *)(g130 + 12) = g127;
                *(int32_t *)(g130 + 20) = 1;
                *(int32_t *)g130 = g124;
                if (v20 != 0) {
                    // 0x409e8f
                    *(int32_t *)(g124 + 4) = g130;
                    // branch -> 0x409e92
                }
                // 0x409e92
                g87 = g130;
                v22 = a3;
                v21 = v17;
                // branch -> 0x409e9d
            } else {
                v22 = a3;
                v21 = v17;
            }
        }
        // 0x409e9d
        LeaveCriticalSection(lpCriticalSection);
        // branch -> 0x409ef5
        // 0x409ef5
        result = g131;
        g131 = (int32_t)v21;
        g130 = (int32_t)*v6;
        g127 = (int32_t)v22;
        return result;
    }
    // 0x409e39
    v15 = (char *)g34;
    v6 = v15;
    v18 = HeapAlloc((int32_t)*v15, dwFlags, 24);
    g130 = v18;
    if (v18 == 0) {
        // 0x409e9a
        g131 = 0;
        v22 = (int32_t *)dwFlags;
        v21 = (int32_t *)0x409e48;
        // branch -> 0x409e9d
    } else {
        // 0x409e4e
        v23 = g127 - 4;
        v16 = (char *)(int32_t)*a2;
        v6 = v16;
        v17 = (int32_t *)v23;
        v19 = function_409dc6(v23, v16, a3, a4 & -5, v12);
        g131 = v19;
        if (v19 != 0) {
            // 0x409e6a
            *(int32_t *)(v19 + 8) = g130;
            *(int32_t *)(g130 + 4) = 0;
            *(int32_t *)(g130 + 16) = v2;
            v20 = g87;
            g124 = v20;
            *(int32_t *)(g130 + 8) = g131;
            *(int32_t *)(g130 + 12) = g127;
            *(int32_t *)(g130 + 20) = 1;
            *(int32_t *)g130 = g124;
            if (v20 != 0) {
                // 0x409e8f
                *(int32_t *)(g124 + 4) = g130;
                // branch -> 0x409e92
            }
            // 0x409e92
            g87 = g130;
            v22 = a3;
            v21 = v17;
            // branch -> 0x409e9d
        } else {
            v22 = a3;
            v21 = v17;
        }
    }
    // 0x409e9d
    LeaveCriticalSection(lpCriticalSection);
    // branch -> 0x409ef5
    // 0x409ef5
    result = g131;
    g131 = (int32_t)v21;
    g130 = (int32_t)*v6;
    g127 = (int32_t)v22;
    return result;
}

// Address range: 0x409efc - 0x40a058
int32_t function_409efc(int32_t a1) {
    int32_t v1 = g130; // 0x409eff
    int32_t v2 = g131; // 0x409f00
    g131 = a1;
    int32_t v3 = 0;
    int32_t dwFlags = 0; // 0x409f24
    int32_t v4 = a1; // 0x409f39
    if (*(int32_t *)(a1 + 28) != 0) {
        // 0x409f10
        EnterCriticalSection((int32_t *)(a1 + 32));
        dwFlags = v3;
        v4 = g131;
        // branch -> 0x409f1a
    }
    int32_t v5 = *(int32_t *)(v4 + 4); // 0x409f1a
    g130 = v5;
    int32_t v6; // 0x40a03c
    int32_t v7;
    int32_t result;
    int32_t v8; // 0x40a046
    int32_t v9; // 0x40a036
    if (v5 == dwFlags) {
        uint32_t v10 = *(int32_t *)(v4 + 20); // 0x409f9b
        int32_t v11 = *(int32_t *)(v4 + 12) / 16 & -16; // 0x409fa1
        int32_t v12 = v10; // 0x409faf
        int32_t dwBytes; // 0x409fdd
        char v13;
        int32_t * v14; // 0x409ffb_0
        int32_t v15;
        int32_t v16; // 0x409fc8
        int32_t v17; // 0x409fe8
        int32_t v18; // 0x40a022
        int32_t v19; // 0x40a022
        int32_t v20; // 0x40a0572
        int32_t v21; // 0x409ffe
        int32_t v22; // 0x40a00c
        int32_t v23; // 0x40a02b
        int32_t v24; // 0x409fb1
        int32_t v25; // 0x409ffe
        if (v11 >= v10) {
            uint32_t v26 = *(int32_t *)(v4 + 24); // 0x409fa8
            if (v11 <= v26) {
                // 0x409fb1
                v24 = *(int32_t *)(v4 + 16);
                v13 = *(char *)g34;
                v16 = HeapAlloc((int32_t)v13, dwFlags, v24 * v11 + 24);
                g130 = v16;
                v15 = 0;
                if (v16 != 0) {
                    // 0x409fd2
                    *(int32_t *)(v16 + 12) = v11;
                    // branch -> 0x409ff8
                    // 0x409ff8
                    v14 = (int32_t *)(g131 + 12);
                    *v14 = *v14 + *(int32_t *)(g130 + 12);
                    v21 = g130;
                    v25 = 1;
                    *(int32_t *)(v21 + 16) = v25;
                    *(int32_t *)(g130 + 20) = v15;
                    *(int32_t *)(g130 + 8) = v15;
                    v22 = g131;
                    if (*(int32_t *)(v21 + 12) > v25) {
                        // 0x40a00c
                        *(int32_t *)g130 = *(int32_t *)(v22 + 4);
                        *(int32_t *)(g130 + 4) = v15;
                        *(int32_t *)(g131 + 4) = g130;
                        // branch -> 0x40a022
                    } else {
                        // 0x40a019
                        *(int32_t *)g130 = *(int32_t *)v22;
                        *(int32_t *)(g130 + 4) = v15;
                        *(int32_t *)g131 = g130;
                        // branch -> 0x40a022
                    }
                    // 0x40a022
                    v18 = g130;
                    v19 = *(int32_t *)v18;
                    g124 = v19;
                    v23 = v18;
                    if (v19 != v15) {
                        // 0x40a028
                        *(int32_t *)(v19 + 4) = v18;
                        v23 = g130;
                        // branch -> 0x40a02b
                    }
                    // 0x40a02b
                    // branch -> 0x40a032
                    // 0x40a032
                    v7 = v23 + 24;
                    // branch -> 0x40a036
                    // 0x40a036
                    v9 = g131;
                    if (*(int32_t *)(v9 + 28) != 0) {
                        // 0x40a03c
                        v6 = v9 + 32;
                        g131 = v6;
                        LeaveCriticalSection((int32_t *)v6);
                        // branch -> 0x40a046
                    }
                    // 0x40a046
                    v8 = v7;
                    if (v8 != 0) {
                        // 0x40a04a
                        *(int32_t *)v8 = g130;
                        result = v7 + 4;
                        // branch -> 0x40a053
                    } else {
                        result = 0;
                    }
                    // 0x40a053
                    g131 = v2;
                    g130 = v1;
                    return result;
                }
                // 0x409fda
                dwBytes = *(int32_t *)(g131 + 16) + 24;
                g124 = dwBytes;
                v17 = HeapAlloc((int32_t)*(char *)g34, 0, dwBytes);
                g130 = v17;
                v20 = 0;
                if (v17 != 0) {
                    // 0x409ff0
                    *(int32_t *)(v17 + 12) = 1;
                    v15 = 0;
                    // branch -> 0x409ff8
                    // 0x409ff8
                    v14 = (int32_t *)(g131 + 12);
                    *v14 = *v14 + *(int32_t *)(g130 + 12);
                    v21 = g130;
                    v25 = 1;
                    *(int32_t *)(v21 + 16) = v25;
                    *(int32_t *)(g130 + 20) = v15;
                    *(int32_t *)(g130 + 8) = v15;
                    v22 = g131;
                    if (*(int32_t *)(v21 + 12) > v25) {
                        // 0x40a00c
                        *(int32_t *)g130 = *(int32_t *)(v22 + 4);
                        *(int32_t *)(g130 + 4) = v15;
                        *(int32_t *)(g131 + 4) = g130;
                        // branch -> 0x40a022
                    } else {
                        // 0x40a019
                        *(int32_t *)g130 = *(int32_t *)v22;
                        *(int32_t *)(g130 + 4) = v15;
                        *(int32_t *)g131 = g130;
                        // branch -> 0x40a022
                    }
                    // 0x40a022
                    v18 = g130;
                    v19 = *(int32_t *)v18;
                    g124 = v19;
                    v23 = v18;
                    if (v19 != v15) {
                        // 0x40a028
                        *(int32_t *)(v19 + 4) = v18;
                        v23 = g130;
                        // branch -> 0x40a02b
                    }
                    // 0x40a02b
                    v20 = v23 + 24;
                    // branch -> 0x40a032
                }
                // 0x40a032
                v7 = v20;
                // branch -> 0x40a036
                // 0x40a036
                v9 = g131;
                if (*(int32_t *)(v9 + 28) != 0) {
                    // 0x40a03c
                    v6 = v9 + 32;
                    g131 = v6;
                    LeaveCriticalSection((int32_t *)v6);
                    // branch -> 0x40a046
                }
                // 0x40a046
                v8 = v7;
                if (v8 != 0) {
                    // 0x40a04a
                    *(int32_t *)v8 = g130;
                    result = v7 + 4;
                    // branch -> 0x40a053
                } else {
                    result = 0;
                }
                // 0x40a053
                g131 = v2;
                g130 = v1;
                return result;
            }
            v12 = v26;
        }
        // 0x409faf
        // branch -> 0x409fb1
        // 0x409fb1
        v24 = *(int32_t *)(v4 + 16);
        v13 = *(char *)g34;
        v16 = HeapAlloc((int32_t)v13, dwFlags, v24 * v12 + 24);
        g130 = v16;
        v15 = 0;
        if (v16 == 0) {
            // 0x409fda
            dwBytes = *(int32_t *)(g131 + 16) + 24;
            g124 = dwBytes;
            v17 = HeapAlloc((int32_t)*(char *)g34, 0, dwBytes);
            g130 = v17;
            v20 = 0;
            if (v17 != 0) {
                // 0x409ff0
                *(int32_t *)(v17 + 12) = 1;
                v15 = 0;
                // branch -> 0x409ff8
                // 0x409ff8
                v14 = (int32_t *)(g131 + 12);
                *v14 = *v14 + *(int32_t *)(g130 + 12);
                v21 = g130;
                v25 = 1;
                *(int32_t *)(v21 + 16) = v25;
                *(int32_t *)(g130 + 20) = v15;
                *(int32_t *)(g130 + 8) = v15;
                v22 = g131;
                if (*(int32_t *)(v21 + 12) > v25) {
                    // 0x40a00c
                    *(int32_t *)g130 = *(int32_t *)(v22 + 4);
                    *(int32_t *)(g130 + 4) = v15;
                    *(int32_t *)(g131 + 4) = g130;
                    // branch -> 0x40a022
                } else {
                    // 0x40a019
                    *(int32_t *)g130 = *(int32_t *)v22;
                    *(int32_t *)(g130 + 4) = v15;
                    *(int32_t *)g131 = g130;
                    // branch -> 0x40a022
                }
                // 0x40a022
                v18 = g130;
                v19 = *(int32_t *)v18;
                g124 = v19;
                v23 = v18;
                if (v19 != v15) {
                    // 0x40a028
                    *(int32_t *)(v19 + 4) = v18;
                    v23 = g130;
                    // branch -> 0x40a02b
                }
                // 0x40a02b
                v20 = v23 + 24;
                // branch -> 0x40a032
            }
            // 0x40a032
            v7 = v20;
            // branch -> 0x40a036
            // 0x40a036
            v9 = g131;
            if (*(int32_t *)(v9 + 28) != 0) {
                // 0x40a03c
                v6 = v9 + 32;
                g131 = v6;
                LeaveCriticalSection((int32_t *)v6);
                // branch -> 0x40a046
            }
            // 0x40a046
            v8 = v7;
            if (v8 != 0) {
                // 0x40a04a
                *(int32_t *)v8 = g130;
                result = v7 + 4;
                // branch -> 0x40a053
            } else {
                result = 0;
            }
            // 0x40a053
            g131 = v2;
            g130 = v1;
            return result;
        }
        // 0x409fd2
        *(int32_t *)(v16 + 12) = v12;
        // branch -> 0x409ff8
        // 0x409ff8
        v14 = (int32_t *)(g131 + 12);
        *v14 = *v14 + *(int32_t *)(g130 + 12);
        v21 = g130;
        v25 = 1;
        *(int32_t *)(v21 + 16) = v25;
        *(int32_t *)(g130 + 20) = v15;
        *(int32_t *)(g130 + 8) = v15;
        v22 = g131;
        if (*(int32_t *)(v21 + 12) > v25) {
            // 0x40a00c
            *(int32_t *)g130 = *(int32_t *)(v22 + 4);
            *(int32_t *)(g130 + 4) = v15;
            *(int32_t *)(g131 + 4) = g130;
            // branch -> 0x40a022
        } else {
            // 0x40a019
            *(int32_t *)g130 = *(int32_t *)v22;
            *(int32_t *)(g130 + 4) = v15;
            *(int32_t *)g131 = g130;
            // branch -> 0x40a022
        }
        // 0x40a022
        v18 = g130;
        v19 = *(int32_t *)v18;
        g124 = v19;
        v23 = v18;
        if (v19 != v15) {
            // 0x40a028
            *(int32_t *)(v19 + 4) = v18;
            v23 = g130;
            // branch -> 0x40a02b
        }
        // 0x40a02b
        // branch -> 0x40a032
        // 0x40a032
        v7 = v23 + 24;
        // branch -> 0x40a036
    } else {
        int32_t v27 = *(int32_t *)(v5 + 20); // 0x409f21
        g124 = v27;
        if (v27 > dwFlags) {
            int32_t * v28 = (int32_t *)(v5 + 8); // 0x409f28_0
            int32_t v29 = *v28; // 0x409f28
            v7 = v29;
            *v28 = *(int32_t *)v29;
            *(int32_t *)(g130 + 20) = v27 - 1;
            // branch -> 0x409f49
        } else {
            int32_t * v30 = (int32_t *)(v5 + 16); // 0x409f36_0
            int32_t v31 = *v30; // 0x409f36
            g124 = v31;
            *v30 = v31 + 1;
            v7 = v5 + 24 + *(int32_t *)(v4 + 16) * v31;
            // branch -> 0x409f49
        }
        int32_t v32 = g130; // 0x409f49
        int32_t v33 = *(int32_t *)(v32 + 20); // 0x409f49
        if (v33 == v3) {
            // 0x409f52
            if (*(int32_t *)(v32 + 16) < *(int32_t *)(v32 + 12)) {
                // 0x40a036
                v9 = g131;
                if (*(int32_t *)(v9 + 28) != 0) {
                    // 0x40a03c
                    v6 = v9 + 32;
                    g131 = v6;
                    LeaveCriticalSection((int32_t *)v6);
                    // branch -> 0x40a046
                }
                // 0x40a046
                v8 = v7;
                if (v8 != 0) {
                    // 0x40a04a
                    *(int32_t *)v8 = g130;
                    result = v7 + 4;
                    // branch -> 0x40a053
                } else {
                    result = 0;
                }
                // 0x40a053
                g131 = v2;
                g130 = v1;
                return result;
            }
            int32_t v34 = *(int32_t *)v32; // 0x409f5e
            int32_t v35 = v32; // 0x409f6f
            if (v34 != v33) {
                // 0x409f64
                *(int32_t *)(v34 + 4) = *(int32_t *)(v32 + 4);
                v35 = g130;
                // branch -> 0x409f6a
            }
            int32_t * v36 = (int32_t *)(g131 + 4); // 0x409f6a_0
            if (v35 == *v36) {
                // 0x409f6f
                *v36 = *(int32_t *)v35;
                // branch -> 0x409f7d
            } else {
                // 0x409f76
                *(int32_t *)*(int32_t *)(v35 + 4) = *(int32_t *)v35;
                // branch -> 0x409f7d
            }
            int32_t v37 = *(int32_t *)g131; // 0x409f7d
            g124 = v37;
            *(int32_t *)g130 = v37;
            *(int32_t *)(g130 + 4) = v3;
            *(int32_t *)g131 = g130;
            int32_t v38 = g130; // 0x409f86
            int32_t v39 = *(int32_t *)v38; // 0x409f86
            if (v39 != v3) {
                // 0x409f90
                *(int32_t *)(v39 + 4) = v38;
                // branch -> 0x40a036
            }
            // 0x40a036
            v9 = g131;
            if (*(int32_t *)(v9 + 28) != 0) {
                // 0x40a03c
                v6 = v9 + 32;
                g131 = v6;
                LeaveCriticalSection((int32_t *)v6);
                // branch -> 0x40a046
            }
            // 0x40a046
            v8 = v7;
            if (v8 != 0) {
                // 0x40a04a
                *(int32_t *)v8 = g130;
                result = v7 + 4;
                // branch -> 0x40a053
            } else {
                result = 0;
            }
            // 0x40a053
            g131 = v2;
            g130 = v1;
            return result;
        }
    }
    // 0x40a036
    v9 = g131;
    if (*(int32_t *)(v9 + 28) != 0) {
        // 0x40a03c
        v6 = v9 + 32;
        g131 = v6;
        LeaveCriticalSection((int32_t *)v6);
        // branch -> 0x40a046
    }
    // 0x40a046
    v8 = v7;
    if (v8 != 0) {
        // 0x40a04a
        *(int32_t *)v8 = g130;
        result = v7 + 4;
        // branch -> 0x40a053
    } else {
        result = 0;
    }
    // 0x40a053
    g131 = v2;
    g130 = v1;
    return result;
}

// Address range: 0x40a05b - 0x40a111
int32_t function_40a05b(int32_t a1, int32_t a2) {
    int32_t v1 = g130; // 0x40a05b
    g130 = a1;
    if (*(int32_t *)(a1 + 28) != 0) {
        int32_t v2 = a1 + 32; // 0x40a066
        g124 = v2;
        EnterCriticalSection((int32_t *)v2);
        // branch -> 0x40a070
    }
    int32_t v3 = a2 - 4; // 0x40a074
    int32_t * v4 = (int32_t *)v3; // 0x40a077_0
    int32_t v5 = *v4; // 0x40a077
    struct struct_35 * v6 = (struct struct_35 *)v5; // 0x40a077_1
    *v4 = v6->e2;
    int32_t v7 = v6->e5 + 1; // 0x40a07e
    v6->e5 = v7;
    g126 = v7;
    v6->e2 = v3;
    int32_t v8 = v6->e4; // 0x40a087
    g125 = v8;
    int32_t v9 = g126; // 0x40a08a
    int32_t v10; // 0x40a106
    struct struct_35 * v11; // 0x40a0bc_7
    int32_t v12; // 0x40a100
    if (v9 == v8) {
        int32_t * v13 = (int32_t *)v5; // 0x40a08e_0
        if (*v13 != 0) {
            int32_t * v14 = v6->e1; // 0x40a094
            g126 = (int32_t)v14;
            v6->e1 = v14;
            // branch -> 0x40a09a
        }
        int32_t * v15 = (int32_t *)(g130 + 4); // 0x40a09a_0
        if (v5 == *v15) {
            // 0x40a09f
            *v15 = *v13;
            // branch -> 0x40a0ad
        } else {
            int32_t v16 = *v13; // 0x40a0a9
            g126 = v16;
            v6->e1 = (int32_t *)v16;
            // branch -> 0x40a0ad
        }
        int32_t v17 = v6->e3; // 0x40a0ad
        g125 = v17;
        int32_t * v18 = (int32_t *)(g130 + 12); // 0x40a0b0_0
        *v18 = *v18 - v17;
        char v19 = *(char *)g34;
        v11 = (struct struct_35 *)(int32_t)HeapFree((int32_t)v19, 0, (char *)v5);
        // branch -> 0x40a100
    } else {
        // 0x40a0c4
        if (v9 == 1) {
            // 0x40a0c9
            if (v8 < v6->e3) {
                // 0x40a100
                v12 = g130;
                if (*(int32_t *)(v12 + 28) != 0) {
                    // 0x40a106
                    v10 = v12 + 32;
                    g130 = v10;
                    LeaveCriticalSection((int32_t *)v10);
                    // branch -> 0x40a110
                }
                // 0x40a110
                g130 = v1;
                return (int32_t)v6;
            }
            int32_t * v20 = (int32_t *)v5; // 0x40a0ce_0
            if (*v20 != 0) {
                int32_t * v21 = v6->e1; // 0x40a0d4
                g126 = (int32_t)v21;
                v6->e1 = v21;
                // branch -> 0x40a0da
            }
            int32_t * v22 = (int32_t *)g130; // 0x40a0da_0
            int32_t ** v23;
            if (v5 == *v22) {
                // 0x40a0de
                *v22 = *v20;
                v23 = &v6->e1;
                // branch -> 0x40a0eb
            } else {
                int32_t v24 = *v20; // 0x40a0e7
                g126 = v24;
                v6->e1 = (int32_t *)v24;
                v23 = &v6->e1;
                // branch -> 0x40a0eb
            }
            // 0x40a0eb
            *v23 = NULL;
            v6->e0 = (int32_t *)*(int32_t *)(g130 + 4);
            *(int32_t *)(g130 + 4) = v5;
            int32_t v25 = *v20; // 0x40a0f7
            g125 = v25;
            if (v25 != 0) {
                // 0x40a0fd
                *v23 = v20;
                // branch -> 0x40a100
            }
            // 0x40a100
            v12 = g130;
            if (*(int32_t *)(v12 + 28) != 0) {
                // 0x40a106
                v10 = v12 + 32;
                g130 = v10;
                LeaveCriticalSection((int32_t *)v10);
                // branch -> 0x40a110
            }
            // 0x40a110
            g130 = v1;
            return (int32_t)v6;
        }
        v11 = v6;
    }
    // 0x40a100
    v12 = g130;
    if (*(int32_t *)(v12 + 28) != 0) {
        // 0x40a106
        v10 = v12 + 32;
        g130 = v10;
        LeaveCriticalSection((int32_t *)v10);
        // branch -> 0x40a110
    }
    // 0x40a110
    g130 = v1;
    return (int32_t)v11;
}

// Address range: 0x40a114 - 0x40a17f
int32_t function_40a114(int32_t * a1) {
    int32_t v1 = g130; // 0x40a116
    int32_t v2 = (int32_t)a1; // 0x40a117
    g130 = v2;
    int32_t dwFlags2 = 0;
    int32_t v3 = g131; // 0x40a120
    int32_t dwFlags = 0; // 0x40a130
    int32_t v4 = v2; // 0x40a12d
    if (*(int32_t *)(v2 + 28) != 0) {
        // 0x40a123
        EnterCriticalSection((int32_t *)(v2 + 32));
        dwFlags = dwFlags2;
        v4 = g130;
        // branch -> 0x40a12d
    }
    int32_t v5 = *(int32_t *)(v4 + 4); // 0x40a12d
    g124 = v5;
    int32_t dwFlags3 = dwFlags; // 0x40a14e
    if (v5 != dwFlags) {
        g131 = *(int32_t *)v5;
        HeapFree((int32_t)*(char *)g34, dwFlags, (char *)v5);
        int32_t v6 = g131; // 0x40a146
        g124 = v6;
        while (v6 != dwFlags2) {
            // 0x40a13a
            v5 = v6;
            g131 = *(int32_t *)v5;
            HeapFree((int32_t)*(char *)g34, dwFlags2, (char *)v5);
            v6 = g131;
            g124 = v6;
            // continue -> 0x40a13a
        }
        // 0x40a14c
        dwFlags3 = v6;
        v4 = g130;
        // branch -> 0x40a14c
    }
    int32_t v7 = *(int32_t *)v4; // 0x40a14c
    int32_t ** v8 = (int32_t **)v7; // 0x40a14c_1
    int32_t v9 = dwFlags3; // 0x40a167
    if (v7 != dwFlags3) {
        g131 = *(int32_t *)v8;
        HeapFree((int32_t)*(char *)g34, dwFlags3, (char *)v8);
        int32_t v10 = g131; // 0x40a15e
        int32_t ** v11 = (int32_t **)v10; // 0x40a160_0
        while (v10 != dwFlags2) {
            // 0x40a152
            v8 = v11;
            g131 = *(int32_t *)v8;
            HeapFree((int32_t)*(char *)g34, dwFlags2, (char *)v8);
            v10 = g131;
            v11 = (int32_t **)v10;
            // continue -> 0x40a152
        }
        // 0x40a164
        v9 = v10;
        v4 = g130;
        v8 = v11;
        // branch -> 0x40a164
    }
    // 0x40a164
    *(int32_t *)v4 = v9;
    *(int32_t *)(g130 + 4) = dwFlags2;
    *(int32_t *)(g130 + 12) = dwFlags2;
    if (*(int32_t *)(v4 + 28) != v9) {
        int32_t v12 = g130 + 32; // 0x40a171
        g130 = v12;
        LeaveCriticalSection((int32_t *)v12);
        // branch -> 0x40a17b
    }
    // 0x40a17b
    g131 = v3;
    g130 = v1;
    return (int32_t)v8;
}

// Address range: 0x40a182 - 0x40a21a
int32_t function_40a182(int32_t a1, int32_t a2) {
    // 0x40a182
    g130 = a1;
    int32_t v1 = g131; // 0x40a188
    int32_t v2 = *(int32_t *)(a1 + 8); // 0x40a189
    g131 = v2;
    g127 = 0;
    int32_t * v3; // 0x40a1f4_0
    int32_t result; // 0x40a211_6
    int32_t v4; // 0x40a192
    if (v2 == 0) {
        // 0x40a1f4
        v3 = (int32_t *)a1;
        function_40a114(v3);
        int32_t v5 = g130; // 0x40a1fa
        int32_t v6 = *(int32_t *)(v5 + 28); // 0x40a1fa
        int32_t v7; // 0x40a209
        int32_t dwFlags; // 0x40a20a
        if (v6 != g127) {
            int32_t v8 = v5 + 32; // 0x40a1ff
            g124 = v8;
            DeleteCriticalSection((int32_t *)v8);
            dwFlags = g127;
            v7 = g130;
            // branch -> 0x40a209
        } else {
            dwFlags = v6;
            v7 = v5;
        }
        char v9 = *(char *)g34;
        result = HeapFree((int32_t)v9, dwFlags, (char *)v7);
        // branch -> 0x40a217
    } else {
        // 0x40a192
        v4 = g129;
        g129 = 0x40f50c;
        EnterCriticalSection(g88);
        int32_t v10 = *(int32_t *)(g130 + 8); // 0x40a19f
        g124 = v10;
        int32_t * v11 = (int32_t *)(v10 + 20); // 0x40a1a2_0
        *v11 = *v11 - 1;
        int32_t v12 = g130; // 0x40a1a5
        int32_t * v13 = (int32_t *)(v12 + 8); // 0x40a1a5_0
        int32_t v14 = *v13; // 0x40a1a5
        uint32_t v15 = g127; // 0x40a1a8
        int32_t * v16 = (int32_t *)0x40f50c; // 0x40a217_04
        int32_t v17 = v14; // 0x40a21a_12
        if (*(int32_t *)(v14 + 20) <= v15) {
            // 0x40a1ad
            *v13 = v15;
            function_40a182(v12, v4);
            int32_t v18 = g131; // 0x40a1b6
            int32_t v19 = *(int32_t *)v18; // 0x40a1b6
            int32_t v20 = v19; // 0x40a1c5
            int32_t v21 = v18; // 0x40a1c9
            if (v19 != g127) {
                // 0x40a1bc
                *(int32_t *)(v19 + 4) = *(int32_t *)(v18 + 4);
                v20 = g127;
                v21 = g131;
                // branch -> 0x40a1c2
            }
            int32_t v22 = *(int32_t *)(v21 + 4); // 0x40a1c2
            g124 = v22;
            int32_t v23 = v21; // 0x40a1dc
            if (v22 != v20) {
                // 0x40a1c9
                *(int32_t *)v22 = *(int32_t *)v21;
                v23 = g131;
                // branch -> 0x40a1cd
            }
            // 0x40a1cd
            if (g87 == v23) {
                int32_t v24 = *(int32_t *)v23; // 0x40a1d5
                g124 = v24;
                g87 = v24;
                // branch -> 0x40a1dc
            }
            char v25 = *(char *)g34;
            int32_t v26 = HeapFree((int32_t)v25, g127, (char *)v23); // 0x40a1e4_6
            v16 = (int32_t *)v12;
            v17 = v26;
            // branch -> 0x40a1ea
        }
        // 0x40a1ea
        LeaveCriticalSection(g88);
        g129 = (int32_t)v16;
        v3 = v16;
        result = v17;
        // branch -> 0x40a217
    }
    // 0x40a217
    g131 = (int32_t)v3;
    g130 = v4;
    g127 = v1;
    return result;
}

// Address range: 0x40a21d - 0x40a22e
void function_40a21d(void) {
    // 0x40a21d
    int32_t v1;
    ((int32_t (*)())v1)();
    int32_t * v2;
    *v2 = 4;
}

// Address range: 0x40a231 - 0x40a2af
int32_t function_40a231(int32_t * a1, int32_t * a2, int32_t a3) {
    int32_t v1 = g127; // 0x40a235
    int32_t v2 = g130; // 0x40a236
    int32_t v3 = g131; // 0x40a237
    g127 = 0;
    LoadLibraryA("Kernel32.dll");
    int32_t v4 = (int32_t)a1; // 0x40a245
    g130 = v4;
    int32_t v5 = g124; // 0x40a248
    g131 = v5;
    int32_t v6; // 0x40a27f
    int32_t v7; // 0x40a2a4
    int32_t result; // 0x40a2af_11
    int32_t v8; // 0x40a287
    int32_t dwMilliseconds; // 0x40a287
    int32_t v9; // 0x40a28b
    if (v5 == 0) {
        // 0x40a279
        g131 = 0;
        v6 = function_40a2cb((int32_t *)v4, 1, 0);
        dwMilliseconds = g131;
        v8 = v6 - dwMilliseconds;
        g124 = v8;
        if (v6 == dwMilliseconds) {
            // 0x40a29e
            ((int32_t (*)())a2)();
            v7 = function_40a2c0((int32_t *)g130, 2);
            g125 = 2;
            result = v7;
            // branch -> 0x40a2ab
        } else {
            // 0x40a28b
            v9 = v8 - 1;
            if (v9 == 0) {
                // 0x40a297
                if (*(int32_t *)g130 != 2) {
                    // 0x40a290
                    Sleep(dwMilliseconds);
                    if (*(int32_t *)g130 != 2) {
                        Sleep(g131);
                        while (*(int32_t *)g130 != 2) {
                            // 0x40a290
                            Sleep(g131);
                            // continue -> 0x40a290
                        }
                        // 0x40a2ab
                        g131 = v3;
                        g130 = v2;
                        g127 = v1;
                        return 0;
                    }
                    result = 0;
                } else {
                    result = 0;
                }
            } else {
                result = v9;
            }
        }
        // 0x40a2ab
        g131 = v3;
        g130 = v2;
        g127 = v1;
        return result;
    }
    int32_t (*func)() = GetProcAddress((int32_t *)v5, "InitOnceExecuteOnce"); // 0x40a254
    if (func != NULL) {
        // 0x40a25e
        ((int32_t (*)(int32_t, int32_t, int32_t))func)(g130, (int32_t)function_40a21d, (int32_t)a2);
        g127++;
        // branch -> 0x40a26e
    }
    int32_t result2 = FreeLibrary((int32_t *)g131); // 0x40a26f_3
    if (g127 == 0) {
        // 0x40a26e
        // branch -> 0x40a279
        // 0x40a279
        g131 = 0;
        v6 = function_40a2cb((int32_t *)g130, 1, 0);
        dwMilliseconds = g131;
        v8 = v6 - dwMilliseconds;
        g124 = v8;
        if (v6 == dwMilliseconds) {
            // 0x40a29e
            ((int32_t (*)())a2)();
            v7 = function_40a2c0((int32_t *)g130, 2);
            g125 = 2;
            result = v7;
            // branch -> 0x40a2ab
        } else {
            // 0x40a28b
            v9 = v8 - 1;
            if (v9 == 0) {
                // 0x40a297
                if (*(int32_t *)g130 != 2) {
                    // 0x40a290
                    Sleep(dwMilliseconds);
                    if (*(int32_t *)g130 != 2) {
                        Sleep(g131);
                        while (*(int32_t *)g130 != 2) {
                            // 0x40a290
                            Sleep(g131);
                            // continue -> 0x40a290
                        }
                        // 0x40a2ab
                        g131 = v3;
                        g130 = v2;
                        g127 = v1;
                        return 0;
                    }
                    result = 0;
                } else {
                    result = 0;
                }
            } else {
                result = v9;
            }
        }
        // 0x40a2ab
        g131 = v3;
        g130 = v2;
        g127 = v1;
        return result;
    }
    // 0x40a2ab
    g131 = v3;
    g130 = v2;
    g127 = v1;
    return result2;
}

// Address range: 0x40a2b2 - 0x40a2bf
void function_40a2b2(void) {
    // 0x40a2b2
    InitializeCriticalSection(g89);
}

// Address range: 0x40a2c0 - 0x40a2ca
int32_t function_40a2c0(int32_t * a1, int32_t a2) {
    // 0x40a2c0
    *a1 = a2;
    return *a1;
}

// Address range: 0x40a2cb - 0x40a2db
int32_t function_40a2cb(int32_t * a1, int32_t a2, int32_t result) {
    // 0x40a2cb
    g125 = (int32_t)a1;
    g126 = a2;
    int32_t v1 = *a1; // 0x40a2d8
    if (v1 == result) {
        // if_40a2d8_3_true
        *a1 = a2;
        // branch -> after_if_40a2d8_3
    } else {
        // if_40a2d8_3_false
        result = v1;
        // branch -> after_if_40a2d8_3
    }
    // after_if_40a2d8_3
    return result;
}

// Address range: 0x40a2dc - 0x40a31b
bool function_40a2dc(int32_t * a1, int32_t a2) {
    int32_t v1 = a2 - 8; // 0x40a2e4
    g124 = v1;
    int32_t v2 = *(int32_t *)v1; // 0x40a2e9
    g126 = v2;
    if (*a1 == v1) {
        // 0x40a2ed
        *a1 = v2;
        int32_t v3 = *(int32_t *)g124; // 0x40a2ef
        if (v3 != 0) {
            // 0x40a2f5
            *(int32_t *)(v3 + 4) = 0;
            // branch -> 0x40a30c
        }
        // 0x40a30c
        return HeapFree((int32_t)*(char *)g34, 0, (char *)g124);
    }
    // 0x40a2fb
    *(int32_t *)*(int32_t *)(a2 - 4) = v2;
    int32_t v4 = *(int32_t *)g124; // 0x40a300
    if (v4 != 0) {
        int32_t v5 = *(int32_t *)(g124 + 4); // 0x40a306
        g126 = v5;
        *(int32_t *)(v4 + 4) = v5;
        // branch -> 0x40a30c
    }
    // 0x40a30c
    return HeapFree((int32_t)*(char *)g34, 0, (char *)g124);
}

// Address range: 0x40a31c - 0x40a348
int32_t function_40a31c(struct struct_18 * a1, int32_t dwBytes) {
    HeapAlloc((int32_t)*(char *)g34, 8, dwBytes);
    if (g124 == 0) {
        // 0x40a345
        return 8;
    }
    int32_t v1 = (int32_t)a1; // 0x40a332
    int32_t v2 = a1->e0; // 0x40a336
    g126 = v2;
    if (v2 != 0) {
        // 0x40a33c
        a1->e1 = g124;
        int32_t v3 = *(int32_t *)v1; // 0x40a33f
        g126 = v3;
        *(int32_t *)g124 = v3;
        // branch -> 0x40a343
    }
    // 0x40a343
    *(int32_t *)v1 = g124;
    // branch -> 0x40a345
    // 0x40a345
    return g124 + 8;
}

// Address range: 0x40a349 - 0x40a3d7
void function_40a349(void) {
    // 0x40a349
    int32_t * v1;
    g127 = (int32_t)v1;
    int32_t v2 = *v1; // 0x40a352
    function_40a3f9();
    int32_t v3;
    int32_t v4;
    int32_t dwBytes = v4 * v3 + 24; // 0x40a360
    g131 = dwBytes;
    char * v5 = (char *)g34; // 0x40a366_0
    int32_t v6 = HeapAlloc((int32_t)*v5, 0, dwBytes); // 0x40a36c
    g130 = v6;
    if (v6 == 0) {
        // 0x40a3d1
        g131 = (int32_t)*v5;
        g130 = (int32_t)NULL;
        g129 = v2;
        return;
    }
    // 0x40a378
    *(int32_t *)(v6 + 4) = v3;
    *(int32_t *)(g130 + 16) = v4;
    int32_t v7;
    *(int32_t *)(g130 + 20) = v7;
    int32_t v8 = g131 - 24; // 0x40a38d
    g131 = v8;
    int32_t * v9;
    *(int32_t *)(g130 + 8) = (int32_t)v9;
    *(int32_t *)(g130 + 12) = g127;
    *(int32_t *)g130 = 1;
    int32_t v10 = g130 + 24; // 0x40a39d
    g130 = v10;
    char * v11 = (char *)v10; // bp-32
    int32_t * set_mem = memset((int32_t *)v10, 0, v8); // 0x40a3a3
    *(int32_t *)g127 = g130;
    function_40a9db();
    if (set_mem == NULL) {
        // 0x40a3d1
        g131 = (int32_t)*v11;
        g130 = (int32_t)(int32_t *)0x40a3b5;
        g129 = v2;
        return;
    }
    // 0x40a3b9
    g127 = v4;
    if (v4 < 1) {
        // 0x40a3d1
        g131 = (int32_t)*v11;
        g130 = (int32_t)(int32_t *)0x40a3b5;
        g129 = v2;
        return;
    }
    int32_t v12 = g130; // 0x40a3c0
    g131 = v12;
    function_40aa26();
    g131 += v3;
    int32_t v13 = g127 - 1; // 0x40a3ce
    g127 = v13;
    // branch -> 0x40a3c2
    while (v13 != 0) {
        // 0x40a3c2
        function_40aa26();
        g131 += v3;
        v13 = g127 - 1;
        g127 = v13;
        // continue -> 0x40a3c2
    }
    // 0x40a3d1
    g131 = (int32_t)*(char *)v12;
    g130 = (int32_t)v9;
    g129 = v2;
}

// Address range: 0x40a3da - 0x40a3f8
void function_40a3da(void) {
    // 0x40a3da
    g90 = 0x40a349;
    g93 = 0x40a449;
    g96 = 0x40a444;
}

// Address range: 0x40a3f9 - 0x40a441
void function_40a3f9(void) {
    // 0x40a3f9
    int32_t v1;
    g130 = v1;
    int32_t v2;
    if (v1 == 0) {
        // 0x40a440
        g130 = v2;
        return;
    }
    int32_t v3 = v1 - 24; // 0x40a402
    g130 = v3;
    if (*(int32_t *)(v1 - 16) != 0) {
        // 0x40a40b
        g127 = 0;
        int32_t v4 = g131; // 0x40a411
        g131 = v1;
        char * v5;
        if (*(int32_t *)(v1 - 8) >= 1) {
            function_40ab41();
            int32_t v6 = g130; // 0x40a420
            int32_t v7 = *(int32_t *)(v6 + 4) + g131; // 0x40a420
            g131 = v7;
            int32_t v8 = g127 + 1; // 0x40a423
            g127 = v8;
            while (v8 < *(int32_t *)(v6 + 16)) {
                // 0x40a417
                v1 = v7;
                function_40ab41();
                v6 = g130;
                v7 = *(int32_t *)(v6 + 4) + g131;
                g131 = v7;
                v8 = g127 + 1;
                g127 = v8;
                // continue -> 0x40a417
            }
            // 0x40a429
            v3 = v6;
            v5 = (char *)*(int32_t *)(v3 + 8);
            // branch -> 0x40a429
        }
        // 0x40a429
        g131 = v1;
        g127 = (int32_t)v5;
        v2 = v4;
        // branch -> 0x40a42b
    }
    // 0x40a42b
    *(int32_t *)*(int32_t *)(v3 + 12) = 0;
    HeapFree((int32_t)*(char *)g34, 0, (char *)g130);
    // branch -> 0x40a440
    // 0x40a440
    g130 = v2;
}

// Address range: 0x40a444 - 0x40a4ef
void function_40a444(void) {
    // 0x40a444
    function_40a3f9();
}

// Address range: 0x40a4f0 - 0x40a53f
int32_t function_40a4f0(void) {
    // 0x40a4f0
    HeapCreate(0, 0x1000, 0);
    int32_t hHeap = g124; // 0x40a502
    g122 = hHeap;
    g99 = 0;
    g123 = 16;
    g124 = 16;
    g125 = hHeap;
    int32_t result = HeapAlloc(hHeap, 0, 16); // 0x40a52a
    g6 = result;
    return result;
}

// Address range: 0x40a540 - 0x40a56f
void function_40a540(void) {
    // 0x40a540
    g124 = g6;
    HeapFree(g122, 0, (char *)g6);
    HeapDestroy(g122);
}

// Address range: 0x40a570 - 0x40a5cf
int32_t function_40a570(int32_t a1) {
    int32_t v1 = g126; // 0x40a576
    char * v2; // 0x40a5b9_3
    if (v1 == 0) {
        // 0x40a5b4
        g124 = g6;
        v2 = (char *)(g99 + g6);
        *v2 = 0;
        // branch -> 0x40a5c2
    } else {
        int32_t len = strlen((char *)v1); // 0x40a583
        int32_t v3 = function_40a7c0(len, g99);
        int32_t v4 = function_40a8a0(&v3, (int32_t *)v1, len, len); // 0x40a5ad
        v2 = (char *)v4;
        // branch -> 0x40a5c2
    }
    // 0x40a5c2
    return (int32_t)v2;
}

// Address range: 0x40a5d0 - 0x40a64f
int32_t function_40a5d0(int32_t ** a1, char * a2, int32_t a3) {
    int32_t result = (int32_t)a2; // 0x40a5d9
    int32_t v1 = g99 - result; // 0x40a5d9
    int32_t dwBytes = v1 + 5; // 0x40a5ea
    int32_t v2;
    if (*(int32_t *)a1 == 0) {
        // 0x40a5e7
        v2 = HeapAlloc(g122, 0, dwBytes);
        // branch -> 0x40a624
    } else {
        // 0x40a603
        v2 = HeapReAlloc(g122, 0, (int32_t *)*(int32_t *)a1, dwBytes);
        // branch -> 0x40a624
    }
    // 0x40a624
    *a1 = (int32_t *)v2;
    int32_t v3 = *(int32_t *)a1; // 0x40a634
    g126 = v3;
    function_40a8a0((int32_t *)v3, (int32_t *)(g6 + result), v1, v1);
    g99 = result;
    return result;
}

// Address range: 0x40a650 - 0x40a67f
void function_40a650(char * lpMem) {
    // 0x40a650
    if (lpMem != NULL) {
        // 0x40a65b
        g125 = g122;
        HeapFree(g122, 0, lpMem);
        // branch -> 0x40a66e
    }
}

// Address range: 0x40a680 - 0x40a6cf
void function_40a680(void) {
    // 0x40a680
    char * str;
    if (str != NULL) {
        int32_t len = strlen(str); // 0x40a68e
        char ** v1;
        *v1 = (char *)HeapAlloc(g122, 0, len + 5);
        int32_t v2 = *(int32_t *)v1; // 0x40a6bf
        function_40a8a0((int32_t *)v2, (int32_t *)str, len, len);
        // branch -> 0x40a6c7
    }
}

// Address range: 0x40a6d0 - 0x40a77f
int32_t function_40a6d0(int32_t ** a1, char * str) {
    // 0x40a6d0
    int32_t v1; // 0x40a76f_01
    if (str == NULL) {
        // 0x40a74a
        if (*(int32_t *)a1 != 0) {
            // 0x40a752
            HeapFree(g122, 0, (char *)*(int32_t *)a1);
            g125 = (int32_t)a1;
            *a1 = NULL;
            v1 = 0;
            // branch -> 0x40a76f
        } else {
            v1 = 0;
        }
        // 0x40a76f
        g124 = v1;
        return v1 + 1;
    }
    int32_t len = strlen(str); // 0x40a6e5
    int32_t dwBytes = len + 5; // 0x40a6fb
    int32_t v2;
    if (*(int32_t *)a1 == 0) {
        // 0x40a6f8
        v2 = HeapAlloc(g122, 0, dwBytes);
        // branch -> 0x40a735
    } else {
        // 0x40a714
        v2 = HeapReAlloc(g122, 0, (int32_t *)*(int32_t *)a1, dwBytes);
        // branch -> 0x40a735
    }
    // 0x40a735
    *a1 = (int32_t *)v2;
    int32_t v3 = *(int32_t *)a1; // 0x40a740
    function_40a8a0((int32_t *)v3, (int32_t *)str, len, len);
    v1 = len;
    // branch -> 0x40a76f
    // 0x40a76f
    g124 = v1;
    return v1 + 1;
}

// Address range: 0x40a780 - 0x40a7bf
int32_t function_40a780(char * a1) {
    uint32_t v1 = (int32_t)a1; // 0x40a783
    if (v1 < g6) {
        // 0x40a7b1
        return 0;
    }
    // 0x40a78e
    int32_t result; // 0x40a7b2_11
    if (v1 <= g99 + g6) {
        // 0x40a79f
        result = v1 - g6 + 1;
        // branch -> 0x40a7b1
    } else {
        result = 0;
    }
    // 0x40a7b1
    return result;
}

// Address range: 0x40a7c0 - 0x40a83f
int32_t function_40a7c0(int32_t a1, int32_t a2) {
    int32_t v1 = g99 + a1; // 0x40a7cb
    int32_t v2; // 0x40a812
    if (v1 < g123 - 4) {
        // 0x40a7c0
        v2 = g6;
        // branch -> 0x40a812
    } else {
        // 0x40a7df
        g123 = v1 + 0x4000;
        int32_t v3 = HeapReAlloc(g122, 0, (int32_t *)g6, v1 + 0x4005); // 0x40a807
        g6 = v3;
        v2 = v3;
        // branch -> 0x40a812
    }
    int32_t result = v2 + a2; // 0x40a817
    g124 = result;
    int32_t v4 = a2 + a1; // 0x40a820
    g125 = v4;
    g99 = v4;
    return result;
}

// Address range: 0x40a840 - 0x40a85f
int32_t function_40a840(int32_t a1) {
    // 0x40a840
    g124 = a1;
    g125 = g6;
    return a1 - 1 + g6;
}

// Address range: 0x40a860 - 0x40a87f
int32_t function_40a860(int32_t a1) {
    // 0x40a860
    g124 = g99;
    int32_t result = g99 - a1; // 0x40a868
    g99 = result;
    return result;
}

// Address range: 0x40a880 - 0x40a89f
void function_40a880(void) {
    // 0x40a880
    char * v1;
    int32_t v2 = (int32_t)v1; // 0x40a883
    g99 = v2;
    *(char *)(g6 + v2) = 0;
}

// Address range: 0x40a8a0 - 0x40a8ef
int32_t function_40a8a0(int32_t * a1, int32_t * a2, int32_t a3, int32_t a4) {
    int32_t v1 = (int32_t)a1 + a3; // 0x40a8a7
    g124 = v1;
    char * v2 = (char *)v1; // 0x40a8aa_0
    if (a3 < 1) {
        // 0x40a8da
        g125 = v1;
        *v2 = 0;
        int32_t result;
        return result;
    }
    int32_t v3 = a3; // 0x40a8d247
    *a1 = *a2;
    int32_t v4 = (int32_t)a2 + 4; // 0x40a8c9
    g126 = v4;
    g124 = v3;
    int32_t v5 = v3 - 4; // 0x40a8d2
    while (v5 >= 1) {
        // 0x40a8b3
        a1 = (int32_t *)((int32_t)a1 + 4);
        a2 = (int32_t *)v4;
        v3 = v5;
        *a1 = *a2;
        v4 = (int32_t)a2 + 4;
        g126 = v4;
        g124 = v3;
        v5 = v3 - 4;
        // continue -> 0x40a8b3
    }
    // 0x40a8ad
    // branch -> 0x40a8da
    // 0x40a8da
    g125 = v1;
    *v2 = 0;
    return (a3 - 1) % 4 - 3;
}

// Address range: 0x40a8f0 - 0x40a92f
void function_40a8f0(void) {
    // 0x40a8f0
    uint32_t v1;
    int64_t v2 = v1; // 0x40a904
    int32_t v3;
    uint32_t v4;
    int32_t v5;
    if (v5 == v3) {
        uint64_t v6 = v2 * (int64_t)v4; // 0x40a904
        g124 = v6;
        g126 = v6 / 0x100000000;
        return;
    }
    uint64_t v7 = v2 * (int64_t)v4; // 0x40a91c
    g124 = v7;
    g126 = v3 * v4 + v1 * v5 + (int32_t)(v7 / 0x100000000);
}

// Address range: 0x40a930 - 0x40a9da
void function_40a930(void) {
    // 0x40a930
    if (g10 != 0) {
        int32_t v1 = g124; // 0x40a947
        g124 = v1 + 252 & 201 | v1 & -256;
        return;
    }
    float80_t v2 = g2; // 0x40a96f
    int32_t v3 = v2;
    float80_t v4 = v3; // 0x40a979
    g1 = v4;
    g124 = v3;
    int32_t v5 = (float32_t)v2; // 0x40a98b
    if (v3 == 0) {
        // 0x40a9c5
        int32_t v6;
        if (v6 == 0x7fffffff) {
            // 0x40a9d9
            return;
        }
        v5 = v6;
    }
    float80_t v7 = v2 - v4; // 0x40a989
    g2 = v7;
    if (v5 < 0) {
        int32_t v8 = (int32_t)(float32_t)v7 - 1; // 0x40a99b
        g125 = v8;
        g124 = (int32_t)(v8 < ((int32_t)(float32_t)v7 ^ -0x80000000)) + v3;
        // branch -> 0x40a9d9
    } else {
        // 0x40a9ad
        g125 = (int32_t)(float32_t)g3 + 0x7fffffff;
        g124 = (int32_t)((int32_t)(float32_t)g3 > 0x80000000) + v3;
        // branch -> 0x40a9d9
    }
}

// Address range: 0x40a9db - 0x40aa23
void function_40a9db(void) {
    // 0x40a9db
    int32_t v1;
    g130 = v1;
    int32_t v2;
    if (v1 == 0) {
        // 0x40aa22
        g130 = v2;
        return;
    }
    int32_t v3 = *(int32_t *)v1; // 0x40aa1b1053
    g125 = v3;
    if (v3 == -1) {
        // 0x40aa22
        g130 = v2;
        return;
    }
    while (true) {
        // branch -> 0x40a9e8
        while (true) {
            int32_t v4 = v1 + 4; // 0x40a9e8
            g130 = v4;
            int32_t v5; // 0x40aa1b
            if (v3 < -6) {
                // 0x40aa1b
                v5 = *(int32_t *)v4;
                g125 = v5;
                if (v5 == -1) {
                    // break -> 0x40aa22
                    break;
                }
                v3 = v5;
                v1 = v4;
                // continue -> 0x40a9e8
                continue;
            } else {
                // 0x40a9f0
                if (v3 < -3) {
                    // 0x40aa17
                    // branch -> 0x40aa22
                    // 0x40aa22
                    g130 = v2;
                    return;
                }
                // 0x40a9f5
                switch (v3) {
                    case -3: {
                        // 0x40aa04
                        // branch -> 0x40aa17
                        break;
                    }
                    case -2: {
                        // 0x40a9ff
                        // branch -> 0x40aa17
                        break;
                    }
                }
                // 0x40aa1b
                v5 = *(int32_t *)v4;
                g125 = v5;
                if (v5 == -1) {
                    // break (via goto) -> 0x40aa22
                    goto lab_0x55d4b10;
                }
                v3 = v5;
                v1 = v4;
                // continue -> 0x40a9e8
                continue;
            }
        }
      lab_0x55d4b10:
        // 0x40aa22
        g130 = v2;
        return;
    }
}

// Address range: 0x40aa26 - 0x40ab3e
void function_40aa26(void) {
    // 0x40aa26
    int32_t * v1;
    int32_t v2 = (int32_t)v1; // 0x40aa2c
    g130 = v2;
    int32_t v3 = *v1; // 0x40aa2f
    int32_t v4;
    if (v3 == -1) {
        // 0x40ab3c
        g130 = v4;
        return;
    }
    // 0x40aa3a
    int32_t v5;
    g127 = v5;
    g131 = 4;
    int32_t v6 = 4; // 0x40aa7a
    // branch -> 0x40aa42
    while (true) {
        int32_t v7 = v2 + v6; // 0x40aa42
        g130 = v7;
        int32_t * v8;
        int32_t * v9 = v8; // 0x1114
        int32_t v10;
        int32_t v11 = v10; // 0x40aae312
        int32_t v12;
        int32_t v13 = v12; // 0x40ab0610
        int32_t v14;
        int32_t v15 = v14; // 0x40ab298
        int32_t v16 = v4; // 0x40ab3c5
        int32_t * v17;
        int32_t * v18 = v17; // 0x40ab3b_04
        int32_t v19;
        int32_t v20 = v19; // 0x40ab3a2
        int32_t v21; // 0x40ab2f
        int32_t v22; // 0x40ab2f
        switch (v3) {
            case -6: {
                int32_t v23 = v7 + v6; // 0x40ab10
                g130 = v23;
                int32_t v24 = *(int32_t *)v23; // 0x40ab12
                g125 = v24;
                int32_t v25 = v23 + v6; // 0x40ab14
                g130 = v25;
                int32_t v26 = *(int32_t *)v25; // 0x40ab16
                int32_t v27 = v25 + v6; // 0x40ab18
                g130 = v27;
                int32_t v28 = *(int32_t *)v27; // 0x40ab1d
                g126 = v28;
                int32_t v29 = g127 + *(int32_t *)v7; // 0x40ab20
                g124 = v29;
                g130 = v27 + v6;
                ((int32_t (*)(int32_t, int32_t, int32_t, int32_t, int32_t))g92)(v24, v26, v29, v28, v14);
                v9 = v8;
                v11 = v10;
                v13 = v12;
                v15 = v14;
                v16 = v29;
                v18 = (int32_t *)v26;
                v20 = v24;
                // branch -> 0x40ab2f
                break;
            }
            case -5: {
                int32_t v30 = v7 + v6; // 0x40aaed
                g130 = v30;
                int32_t v31 = *(int32_t *)v30; // 0x40aaef
                g125 = v31;
                int32_t v32 = v30 + v6; // 0x40aaf1
                g130 = v32;
                int32_t v33 = *(int32_t *)v32; // 0x40aaf3
                int32_t v34 = v32 + v6; // 0x40aaf5
                g130 = v34;
                int32_t v35 = *(int32_t *)v34; // 0x40aafa
                g126 = v35;
                int32_t v36 = g127 + *(int32_t *)v7; // 0x40ab00
                g124 = v36;
                g130 = v34 + v6;
                ((int32_t (*)(int32_t, int32_t, int32_t, int32_t, int32_t))g91)(v31, v36, v33, v35, v12);
                v9 = v8;
                v11 = v10;
                v13 = v12;
                v15 = v31;
                v16 = v4;
                v18 = v17;
                v20 = v19;
                // branch -> 0x40ab2f
                break;
            }
            case -4: {
                int32_t v37 = v7 + v6; // 0x40aac0
                g130 = v37;
                int32_t v38 = *(int32_t *)v37; // 0x40aac2
                g125 = v38;
                int32_t v39 = v37 + v6; // 0x40aac4
                g130 = v39;
                int32_t v40 = *(int32_t *)v39; // 0x40aac6
                int32_t v41 = v39 + v6; // 0x40aac8
                g130 = v41;
                int32_t v42 = *(int32_t *)v41; // 0x40aacd
                int32_t v43 = v41 + v6; // 0x40aacf
                g130 = v43;
                int32_t v44 = *(int32_t *)v43; // 0x40aad4
                g126 = v44;
                int32_t v45 = g127 + *(int32_t *)v7; // 0x40aad6
                g124 = v45;
                g130 = v43 + v6;
                ((int32_t (*)(int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t))g90)(v38, v40, v42, v44, v45, v10, (int32_t)v8);
                v9 = v8;
                v11 = v10;
                v13 = v38;
                v15 = v14;
                v16 = v4;
                v18 = v17;
                v20 = v19;
                // branch -> 0x40ab2f
                break;
            }
            case -3: {
                int32_t v46 = v7 + 8; // 0x40aaac
                g130 = v46;
                int32_t v47 = *(int32_t *)v46; // 0x40aaaf
                g125 = v47;
                g130 = v46 + v6;
                function_40aa26();
                v9 = (int32_t *)v47;
                v11 = g127 + *(int32_t *)v7;
                v13 = v12;
                v15 = v14;
                v16 = v4;
                v18 = v17;
                v20 = v19;
                // branch -> 0x40ab2f
                break;
            }
            case -2: {
                int32_t v48 = *(int32_t *)v7; // 0x40aa69
                g125 = v48;
                int32_t v49 = v7 + v6; // 0x40aa6b
                g130 = v49;
                int32_t v50 = v49 + v6; // 0x40aa6f
                g130 = v50;
                int32_t v51 = v50 + v6; // 0x40aa73
                g130 = v51;
                g130 = v51 + v6;
                if (v48 >= 1) {
                    // branch -> 0x40aa8f
                    while (true) {
                        // 0x40aa8f
                        function_40aa26();
                        int32_t v52 = v48 - 1; // 0x40aaa0
                        if (v52 == 0) {
                            v9 = (int32_t *)0x40aa9a;
                            v11 = v10;
                            v13 = v12;
                            v15 = v14;
                            v16 = v4;
                            v18 = v17;
                            v20 = v19;
                            // break (via goto) -> 0x40ab2f
                            goto lab_0x55f5660;
                        }
                        v48 = v52;
                        // continue -> 0x40aa8f
                    }
                    if (v22 == -1) {
                        // 0x40ab3a
                        g131 = v20;
                    } else {
                      lab_0x55f2770:
                        // 0x40ab2f
                        v3 = v22;
                        v6 = g131;
                        v2 = v21;
                        v8 = v9;
                        v10 = v11;
                        v12 = v13;
                        v14 = v15;
                        v4 = v16;
                        v17 = v18;
                        v19 = v20;
                        // branch -> 0x40aa42
                        continue;
                    }
                } else {
                    v9 = v8;
                    v11 = v10;
                    v13 = v12;
                    v15 = v14;
                    v16 = v4;
                    v18 = v17;
                    v20 = v19;
                }
                // 0x40ab2f
                v21 = g130;
                v22 = *(int32_t *)v21;
                if (v22 != -1) {
                    goto lab_0x55f2770;
                }
                // 0x40ab3a
                g131 = v20;
                g127 = (int32_t)v18;
                // branch -> 0x40ab3c
                // 0x40ab3c
                g130 = v16;
                return;
            }
        }
      lab_0x55f5660:
        // 0x40ab2f
        v21 = g130;
        v22 = *(int32_t *)v21;
        if (v22 != -1) {
            goto lab_0x55f2770;
        }
        // 0x40ab3a
        g131 = v20;
        g127 = (int32_t)v18;
        // branch -> 0x40ab3c
        // 0x40ab3c
        g130 = v16;
        return;
    }
}

// Address range: 0x40ab41 - 0x40ac10
void function_40ab41(void) {
    // 0x40ab41
    int32_t * v1;
    int32_t v2 = (int32_t)v1; // 0x40ab49
    g130 = v2;
    int32_t v3 = *v1; // 0x40ab4c
    int32_t * v4;
    int32_t * v5;
    int32_t * v6;
    if (v3 == -1) {
        // 0x40ac0b
        g131 = (int32_t)v6;
        g130 = (int32_t)v5;
        g127 = (int32_t)v4;
        return;
    }
    // 0x40ab57
    int32_t * v7;
    g131 = (int32_t)v7;
    // branch -> 0x40ab5a
    int32_t * v8; // 0x40ac0c_04
    int32_t * v9; // 0x40ac0d_07
    int32_t * v10; // bp+010
    while (true) {
        // 0x40ab5a
        g126 = 4;
        int32_t v11 = v2 + 4; // 0x40ab5d
        g130 = v11;
        int32_t v12; // 0x40ac00
        int32_t v13; // 0x40ac00
        switch (v3) {
            default: {
                int32_t v14 = *(int32_t *)(g131 + v3); // 0x40ab7c
                g124 = v14;
                if (v14 != 0) {
                    // 0x40ab83
                    function_40a650((char *)v14);
                    v10 = v4;
                    v9 = v5;
                    v8 = v6;
                    // branch -> 0x40ac00
                } else {
                    v10 = v4;
                    v9 = v5;
                    v8 = v6;
                }
              lab_0x56081b0:
                // 0x40ac00
                v12 = g130;
                v13 = *(int32_t *)v12;
                if (v13 == -1) {
                    // break (via goto) -> 0x40ac0b
                    goto lab_0x5619b10;
                }
                v3 = v13;
                v2 = v12;
                v4 = v10;
                v5 = v9;
                v6 = v8;
                // continue -> 0x40ab5a
                continue;
            }
            case -6: {
                int32_t v15 = *(int32_t *)v11; // 0x40abf2
                g124 = v15;
                g130 = v2 + 20;
                ((int32_t (*)(int32_t))g98)(*(int32_t *)(g131 + v15));
                v10 = v4;
                v9 = v5;
                v8 = v6;
                // branch -> 0x40ac00
                goto lab_0x56081b0;
            }
            case -5: {
                int32_t v16 = *(int32_t *)v11; // 0x40abe2
                g124 = v16;
                int32_t v17 = *(int32_t *)(g131 + v16); // 0x40abe4
                g130 = v2 + 20;
                ((int32_t (*)(int32_t))g97)(v17);
                v10 = v4;
                v9 = v5;
                v8 = (int32_t *)v17;
                // branch -> 0x40ac00
                goto lab_0x56081b0;
            }
            case -4: {
                int32_t v18 = *(int32_t *)v11; // 0x40abd2
                g124 = v18;
                int32_t v19 = *(int32_t *)(g131 + v18); // 0x40abd4
                g130 = v2 + 24;
                ((int32_t (*)(int32_t))g96)(v19);
                v10 = v4;
                v9 = (int32_t *)v19;
                v8 = (int32_t *)0x40abe0;
                // branch -> 0x40ac00
                goto lab_0x56081b0;
            }
            case -3: {
                int32_t v20 = v2 + 12; // 0x40abc0
                g130 = v20;
                g125 = *(int32_t *)v20;
                g130 = v2 + 16;
                function_40ab41();
                v10 = (int32_t *)(g131 + *(int32_t *)v11);
                v9 = (int32_t *)0x40abd0;
                v8 = v6;
                // branch -> 0x40ac00
                goto lab_0x56081b0;
            }
            case -2: {
                int32_t v21 = *(int32_t *)v11; // 0x40ab8b
                g125 = v21;
                int32_t v22 = v2 + 8; // 0x40ab8d
                g130 = v22;
                int32_t v23 = *(int32_t *)v22; // 0x40ab8f
                int32_t v24 = v2 + 12; // 0x40ab91
                g130 = v24;
                int32_t v25 = *(int32_t *)v24; // 0x40ab93
                int32_t v26 = v2 + 16; // 0x40ab95
                g130 = v26;
                g127 = *(int32_t *)v26;
                g130 = v2 + 20;
                if (v21 < 1) {
                    v10 = v4;
                    v9 = v5;
                    v8 = v6;
                    goto lab_0x56081b0;
                }
                // 0x40aba5
                g127 = g131 + v23;
                // branch -> 0x40abab
                while (true) {
                    // 0x40abab
                    function_40ab41();
                    g127 += v25;
                    int32_t v27 = v21 - 1; // 0x40abb7
                    if (v27 == 0) {
                        v10 = v4;
                        v9 = v5;
                        v8 = v6;
                        // break (via goto) -> 0x40ac00
                        goto lab_0x5618400;
                    }
                    v21 = v27;
                    // continue -> 0x40abab
                }
            }
        }
      lab_0x5618400:
        // 0x40ac00
        v12 = g130;
        v13 = *(int32_t *)v12;
        if (v13 == -1) {
            // break (via goto) -> 0x40ac0b
            goto lab_0x5619b10;
        }
        v3 = v13;
        v2 = v12;
        v4 = v10;
        v5 = v9;
        v6 = v8;
        // continue -> 0x40ab5a
    }
  lab_0x5619b10:
    // 0x40ac0b
    g131 = (int32_t)v8;
    g130 = (int32_t)v9;
    g127 = (int32_t)v10;
}

// Address range: 0x40ac13 - 0x40aec6
void function_40ac13(void) {
    // 0x40ac13
    int32_t * v1;
    int32_t v2 = (int32_t)v1; // 0x40ac1b
    g131 = v2;
    int32_t * v3; // 0x40ae643
    int32_t * v4; // 0x40ae64_67
    int32_t v5; // 0x40ae33
    int32_t * v6;
    int32_t * v7;
    int32_t * v8;
    int32_t * v9;
    int32_t * v10;
    int32_t * v11;
    int32_t v12; // 0x40ae56
    int32_t * v13; // bp+012
    int32_t * v14; // bp+017
    int32_t v15; // 0x40ae4d22
    if (v1 == NULL) {
        // 0x40ae64
        memcpy(v7, v6, (int32_t)v8);
        // branch -> 0x40ae6c
    } else {
        // 0x40ac2b
        g127 = (int32_t)v7;
        int32_t v16 = *v1; // 0x40ac2f
        g130 = v16;
        int32_t v17;
        int32_t * v18;
        int32_t * v19;
        if (v16 == -1) {
            v12 = 0;
            // 0x40ae45
            g130 = v17;
            if (v12 < (int32_t)v8) {
                // 0x40ae4d
                // branch -> 0x40ae64
                // 0x40ae64
                memcpy(v11, v19, (int32_t)v18);
                v9 = (int32_t *)(v12 + (int32_t)v6);
                v10 = (int32_t *)(g127 + v12);
                // branch -> 0x40ae6c
            }
            // 0x40ae6c
            g131 = (int32_t)v10;
            g127 = (int32_t)v9;
            return;
        }
        int32_t v20 = (int32_t)v6; // 0x40adc7
        int32_t * v21 = NULL; // bp+027
        // branch -> 0x40ac3a
        while (true) {
            // 0x40ac3a
            g126 = 4;
            int32_t v22 = v2 + 4; // 0x40ac3d
            g131 = v22;
            int32_t v23; // 0x40acfc
            int32_t * v24; // bp+018
            int32_t * v25; // bp+028
            switch (v16) {
                default: {
                    int32_t v26 = g127 + v16; // 0x40ac71
                    g124 = v26;
                    int32_t * v27 = (int32_t *)v26; // 0x40ac74_0
                    int32_t v28 = *v27; // 0x40ac74
                    if (v28 != 0) {
                        // 0x40ac7d
                        function_40a650((char *)v28);
                        *v27 = 0;
                        // branch -> 0x40ac89
                    }
                    // 0x40ac89
                    v25 = (int32_t *)4;
                    v15 = v17;
                    v24 = v9;
                    if (*(int32_t *)(v16 + v20) != 0) {
                        // 0x40ac93
                        function_40a680();
                        v25 = (int32_t *)4;
                        v15 = v17;
                        v24 = v9;
                        // branch -> 0x40ae13
                    }
                  lab_0x85ec2f0:;
                    int32_t v29 = (int32_t)v21; // 0x40ae13
                    int32_t v30 = g130; // 0x40ae16
                    int32_t v31 = v30; // 0x40ae33
                    v14 = v24;
                    v13 = v10;
                    v4 = v18;
                    v3 = v19;
                    if (v30 > v29) {
                        int32_t v32 = v30 - v29; // 0x40ae1c
                        int32_t * v33 = (int32_t *)(v29 + v20); // 0x40ae24_0
                        int32_t * v34 = (int32_t *)(g127 + v29); // 0x40ae27_0
                        memcpy(v34, v33, v32);
                        v31 = g130;
                        v14 = (int32_t *)v32;
                        v13 = v33;
                        v4 = v34;
                        v3 = (int32_t *)0x40ae2d;
                        // branch -> 0x40ae30
                    }
                    // 0x40ae30
                    v5 = v31 + (int32_t)v25;
                    int32_t v35 = g131; // 0x40ae35
                    int32_t v36 = *(int32_t *)v35; // 0x40ae35
                    g130 = v36;
                    if (v36 == -1) {
                        // break (via goto) -> 0x40ae43
                        goto lab_0x565c2a0;
                    }
                    v16 = v36;
                    v2 = v35;
                    v21 = (int32_t *)v5;
                    v17 = v15;
                    v9 = v14;
                    v10 = v13;
                    v18 = v4;
                    v19 = v3;
                    // continue -> 0x40ac3a
                    continue;
                }
                case -6: {
                    int32_t v37 = *(int32_t *)v22; // 0x40adc5
                    g130 = v37;
                    int32_t v38 = *(int32_t *)(g127 + v37); // 0x40adca
                    g125 = v38;
                    int32_t v39 = *(int32_t *)(v37 + v20); // 0x40adcd
                    g124 = v39;
                    g131 = v2 + 20;
                    if (v38 != 0) {
                        // 0x40adda
                        ((int32_t (*)(int32_t))g98)(v38);
                        g124 = v39;
                        // branch -> 0x40ade4
                    }
                    // 0x40ade4
                    if (v39 == 0) {
                        v25 = (int32_t *)4;
                        v15 = v17;
                        v24 = v9;
                        goto lab_0x85ec2f0;
                    }
                    int32_t v40 = g127 + g130; // 0x40adeb
                    g125 = v40;
                    int32_t v41 = *(int32_t *)(v39 + 16); // 0x40adef
                    int32_t v42 = *(int32_t *)(v39 + 28); // 0x40adf2
                    ((int32_t (*)(int32_t, int32_t, int32_t, int32_t))g92)(v42, v41, v40, *(int32_t *)(v39 + 32));
                    g124 = v20;
                    int32_t v43 = g130; // 0x40ae00
                    int32_t v44 = *(int32_t *)(v43 + v20); // 0x40ae03
                    ((int32_t (*)(int32_t, int32_t, int32_t))g95)(v44, *(int32_t *)(g127 + v43), 0);
                    v25 = (int32_t *)4;
                    v15 = v44;
                    v24 = (int32_t *)0x40ae0c;
                    // branch -> 0x40ae13
                    goto lab_0x85ec2f0;
                }
                case -5: {
                    int32_t v45 = *(int32_t *)v22; // 0x40ad75
                    g130 = v45;
                    int32_t v46 = *(int32_t *)(g127 + v45); // 0x40ad7a
                    g125 = v46;
                    int32_t v47 = *(int32_t *)(v45 + v20); // 0x40ad7d
                    g124 = v47;
                    g131 = v2 + 20;
                    if (v46 != 0) {
                        // 0x40ad8a
                        ((int32_t (*)(int32_t))g97)(v46);
                        g124 = v47;
                        // branch -> 0x40ad94
                    }
                    // 0x40ad94
                    if (v47 == 0) {
                        v25 = (int32_t *)8;
                        v15 = v17;
                        v24 = v9;
                        goto lab_0x85ec2f0;
                    }
                    int32_t v48 = g127 + g130; // 0x40ad9b
                    g125 = v48;
                    int32_t v49 = *(int32_t *)(v47 + 24); // 0x40ad9e
                    int32_t v50 = *(int32_t *)(v47 + 40); // 0x40ada2
                    ((int32_t (*)(int32_t, int32_t, int32_t, int32_t))g91)(v50, v48, v49, *(int32_t *)(v47 + 44));
                    g124 = v20;
                    int32_t v51 = g130; // 0x40adb0
                    int32_t v52 = *(int32_t *)(g127 + v51); // 0x40adb0
                    ((int32_t (*)(int32_t, int32_t, int32_t))g94)(*(int32_t *)(v51 + v20), v52, 0);
                    v25 = (int32_t *)8;
                    v15 = v17;
                    v24 = v9;
                    // branch -> 0x40ae13
                    goto lab_0x85ec2f0;
                }
                case -4: {
                    int32_t v53 = *(int32_t *)v22; // 0x40ad25
                    g130 = v53;
                    int32_t v54 = *(int32_t *)(g127 + v53); // 0x40ad2a
                    g125 = v54;
                    int32_t v55 = *(int32_t *)(v53 + v20); // 0x40ad2d
                    g124 = v55;
                    g131 = v2 + 24;
                    if (v54 != 0) {
                        // 0x40ad3a
                        ((int32_t (*)(int32_t))g96)(v54);
                        g124 = v55;
                        // branch -> 0x40ad44
                    }
                    // 0x40ad44
                    if (v55 == 0) {
                        v25 = (int32_t *)4;
                        v15 = v17;
                        v24 = v9;
                        goto lab_0x85ec2f0;
                    }
                    int32_t v56 = g127 + g130; // 0x40ad4c
                    g125 = v56;
                    int32_t v57 = *(int32_t *)(v55 - 16); // 0x40ad50
                    int32_t v58 = *(int32_t *)(v55 - 8); // 0x40ad56
                    int32_t v59 = *(int32_t *)(v55 - 20); // 0x40ad59
                    ((int32_t (*)(int32_t, int32_t, int32_t, int32_t, int32_t))g90)(v59, v58, *(int32_t *)(v55 - 4), v57, v56);
                    ((int32_t (*)(int32_t, int32_t, int32_t))g93)(v55, *(int32_t *)(g127 + g130), 0);
                    v25 = (int32_t *)4;
                    v15 = v17;
                    v24 = v9;
                    // branch -> 0x40ae13
                    goto lab_0x85ec2f0;
                }
                case -3: {
                    // 0x40acfa
                    g130 = *(int32_t *)v22;
                    v23 = v2 + 8;
                    g131 = v23;
                    g131 = v2 + 12;
                    g131 = v2 + 16;
                    function_40ac13();
                    // branch -> 0x40ad1d
                    break;
                }
                case -2: {
                    uint32_t v60 = *(int32_t *)v22; // 0x40aca1
                    int32_t v61 = v2 + 8; // 0x40aca3
                    g131 = v61;
                    g130 = *(int32_t *)v61;
                    int32_t v62 = v2 + 12; // 0x40aca7
                    g131 = v62;
                    g131 = v2 + 16;
                    g131 = v2 + 20;
                    if (v60 >= 1) {
                        // 0x40acbe
                        function_40ac13();
                        int32_t v63 = v60 - 1; // 0x40acec52
                        if (v63 != 0) {
                            while (true) {
                                // 0x40acd1
                                function_40ac13();
                                int32_t v64 = v63 - 1; // 0x40acec
                                if (v64 == 0) {
                                    // break (via goto) -> 0x40acf1
                                    goto lab_0x565a620;
                                }
                                v63 = v64;
                                // continue -> 0x40acd1
                            }
                            // 0x40acf1
                            // branch -> 0x40acf4
                          lab_0xa5448a0:
                            // 0x40acf4
                            // branch -> 0x40ad1d
                          lab_0x56592e0:
                            // 0x40ad1d
                            v25 = (int32_t *)(*(int32_t *)v62 * v60);
                            v15 = v17;
                            v24 = v9;
                            // branch -> 0x40ae13
                            goto lab_0x85ec2f0;
                        }
                      lab_0x565a620:
                        // 0x40acf1
                        // branch -> 0x40acf4
                        goto lab_0xa5448a0;
                    }
                    // 0x40acf4
                    // branch -> 0x40ad1d
                    goto lab_0x56592e0;
                }
            }
            // 0x40ad1d
            v25 = (int32_t *)*(int32_t *)v23;
            v15 = v17;
            v24 = v9;
            // branch -> 0x40ae13
            goto lab_0x85ec2f0;
        }
    }
    // 0x40ae6c
    g131 = (int32_t)v10;
    g127 = (int32_t)v9;
  lab_0x565c2a0:
    // 0x40ae43
    v12 = v5;
    // branch -> 0x40ae45
    // 0x40ae45
    g130 = v15;
    v9 = v14;
    v10 = v13;
    if (v12 < (int32_t)v8) {
        // 0x40ae4d
        // branch -> 0x40ae64
        // 0x40ae64
        memcpy(v11, v3, (int32_t)v4);
        v9 = (int32_t *)(v12 + (int32_t)v6);
        v10 = (int32_t *)(g127 + v12);
        // branch -> 0x40ae6c
    }
    // 0x40ae6c
    g131 = (int32_t)v10;
    g127 = (int32_t)v9;
    return;
}

// Address range: 0x40aecc - 0x40af92
void function_40aecc(void) {
    // 0x40aecc
    char * str;
    sprintf(str, "PB_GadgetStack_%i", (int32_t)*(char *)g35);
    GetPropA();
    int32_t v1 = 0;
    char * v2;
    int32_t Msg = (int32_t)v2;
    char v3;
    int32_t v4;
    char * v5;
    char * v6;
    if (g131 == 0) {
        // 0x40af7d
        v3 = *(char *)v4;
        DefWindowProcA((int32_t *)v6, Msg, (int32_t)v3, (int32_t)v5);
        // branch -> 0x40af8f
        // 0x40af8f
        g131 = (int32_t)str;
        return;
    }
    int32_t v7 = 0; // 0x40af61
    if (v2 == (char *)130) {
        int32_t v8 = function_409cdf(str); // 0x40af15
        int32_t * v9 = (int32_t *)(v8 + 16); // 0x40af1a_0
        int32_t v10 = v8;
        if (*v9 != v1) {
            // 0x40af23
            v10 = *(int32_t *)(v8 + 12);
            // branch -> 0x40af28
        }
        int32_t dwFlags = v1; // 0x40af40
        if ((int32_t)str == *(int32_t *)v10) {
            // 0x40af2c
            ((struct struct_38 *)v8)->e0 = (char *)v1;
            *v9 = v1;
            dwFlags = v1;
            // branch -> 0x40af31
        }
        // 0x40af31
        g130 = g13;
        int32_t dwFlags2 = dwFlags; // 0x40af4a
        char * lpMem;
        if ((int32_t)lpMem != dwFlags) {
            // 0x40af3f
            HeapFree((int32_t)*(char *)g34, dwFlags, lpMem);
            dwFlags2 = v1;
            // branch -> 0x40af49
        }
        // 0x40af49
        HeapFree((int32_t)*(char *)g34, dwFlags2, str);
        RemovePropA();
        g130 = (int32_t)v6;
        v7 = v1;
        // branch -> 0x40af61
    }
    // 0x40af61
    int32_t * lpPrevWndFunc;
    if ((int32_t)lpPrevWndFunc != v7) {
        char v11 = *(char *)v4;
        CallWindowProcA(lpPrevWndFunc, (int32_t *)v6, Msg, (int32_t)v11, (int32_t)v5);
        // branch -> 0x40af8f
        // 0x40af8f
        g131 = (int32_t)str;
        return;
    }
    // 0x40af7d
    v3 = *(char *)v4;
    DefWindowProcA((int32_t *)v6, Msg, (int32_t)v3, (int32_t)v5);
    // branch -> 0x40af8f
    // 0x40af8f
    g131 = (int32_t)str;
}

// Address range: 0x40af95 - 0x40b0b4
int32_t function_40af95(char * a1, char * a2) {
    struct struct_39 * v1 = NULL; // bp-100
    function_409cdf((char *)g111);
    int32_t v2 = g124; // 0x40afa8
    g130 = v2;
    int32_t v3 = v2;
    if (*(int32_t *)(v2 + 16) != 0) {
        // 0x40afb4
        v3 = *(int32_t *)(v2 + 12);
        // branch -> 0x40afb9
    }
    int32_t result = *(int32_t *)v3;
    g124 = result;
    int32_t v4 = (int32_t)a1;
    if (a1 == NULL) {
        // 0x40b0ae
        g130 = (int32_t)v1;
        return result;
    }
    // 0x40afc7
    char * str;
    sprintf(str, "PB_GadgetStack_%i", (int32_t)*(char *)g35);
    g131 = g20;
    int32_t v5;
    int32_t v6;
    int32_t v7;
    int32_t v8;
    if (result != 0) {
        // 0x40afeb
        GetPropA();
        int32_t v9 = g130; // 0x40aff4
        int32_t * v10 = (int32_t *)(v9 + 12); // 0x40aff9_0
        *v10 = 0;
        v5 = *(int32_t *)(v9 + 20);
        v6 = *(int32_t *)(v9 + 16);
        v7 = *v10;
        v8 = *(int32_t *)v9;
        // branch -> 0x40b00f
    }
    // 0x40b00f
    GetPropA();
    int32_t v11 = g130; // 0x40b050
    int32_t v12 = *(int32_t *)(v11 + 12); // 0x40b050
    char * v13;
    if (g131 == 0) {
        // 0x40b050
        g131 = g12;
        if (v12 == 0) {
            int32_t v14 = HeapAlloc((int32_t)*(char *)g34, 8, 40); // 0x40b065
            *(int32_t *)(g130 + 16) = 0;
            *(int32_t *)(g130 + 12) = v14;
            *(int32_t *)(g130 + 20) = 10;
            // branch -> 0x40b07a
        } else {
            // 0x40b077
            *(int32_t *)(v11 + 16) = 0;
            // branch -> 0x40b07a
        }
        // 0x40b07a
        v1 = (struct struct_39 *)8;
        *(int32_t *)g130 = v4;
        char v15 = *(char *)g34;
        int32_t v16 = HeapAlloc((int32_t)v15, (int32_t)v1, (int32_t)(struct struct_39 *)24); // 0x40b086
        g131 = v16;
        v13 = (char *)v4;
        *(int32_t *)v16 = v4;
        SetPropA();
        int32_t v17 = SetWindowLongA((int32_t *)v4, -4, (int32_t)function_40aecc); // 0x40b0a0
        *(int32_t *)(g131 + 20) = v17;
        // branch -> 0x40b0a9
    } else {
        // 0x40b01e
        int32_t v18; // 0x40b036
        if (v12 != 0) {
            // 0x40b025
            v1 = NULL;
            char * v19 = (char *)g34; // 0x40b027_0
            v13 = v19;
            HeapFree((int32_t)*v19, 0, (char *)v12);
            v18 = g130;
            // branch -> 0x40b033
        } else {
            v18 = v11;
        }
        // 0x40b033
        *(int32_t *)v18 = v8;
        *(int32_t *)(g130 + 12) = v7;
        *(int32_t *)(g130 + 16) = v6;
        g124 = v5;
        *(int32_t *)(g130 + 20) = v5;
        // branch -> 0x40b0a9
    }
    // 0x40b0a9
    *(int32_t *)(g130 + 4) = 0;
    g131 = (int32_t)*v13;
    // branch -> 0x40b0ae
    // 0x40b0ae
    g130 = (int32_t)v1;
    return result;
}

// Address range: 0x40b0b7 - 0x40b1ff
void function_40b0b7(void) {
    char * v1 = (char *)g124; // 0x40b0b7_0
    *v1 = (char)((int32_t)*v1 + g124);
    char * v2 = (char *)g124; // 0x40b0b9_0
    *v2 = (char)((int32_t)*v2 + g124);
    char * v3 = (char *)g124; // 0x40b0bb_0
    *v3 = (char)((int32_t)*v3 + g124);
    char * v4 = (char *)g124; // 0x40b0bd_0
    *v4 = (char)((int32_t)*v4 + g124);
    char * v5 = (char *)g124; // 0x40b0bf_0
    *v5 = (char)((int32_t)*v5 + g124);
    char * v6 = (char *)g124; // 0x40b0c1_0
    *v6 = (char)((int32_t)*v6 + g124);
    char * v7 = (char *)g124; // 0x40b0c3_0
    *v7 = (char)((int32_t)*v7 + g124);
    char * v8 = (char *)g124; // 0x40b0c5_0
    *v8 = (char)((int32_t)*v8 + g124);
    char * v9 = (char *)g124; // 0x40b0c7_0
    *v9 = (char)((int32_t)*v9 + g124);
    char * v10 = (char *)g124; // 0x40b0c9_0
    *v10 = (char)((int32_t)*v10 + g124);
    char * v11 = (char *)g124; // 0x40b0cb_0
    *v11 = (char)((int32_t)*v11 + g124);
    char * v12 = (char *)g124; // 0x40b0cd_0
    *v12 = (char)((int32_t)*v12 + g124);
    char * v13 = (char *)g124; // 0x40b0cf_0
    *v13 = (char)((int32_t)*v13 + g124);
    char * v14 = (char *)g124; // 0x40b0d1_0
    *v14 = (char)((int32_t)*v14 + g124);
    char * v15 = (char *)g124; // 0x40b0d3_0
    *v15 = (char)((int32_t)*v15 + g124);
    char * v16 = (char *)g124; // 0x40b0d5_0
    *v16 = (char)((int32_t)*v16 + g124);
    char * v17 = (char *)g124; // 0x40b0d7_0
    *v17 = (char)((int32_t)*v17 + g124);
    char * v18 = (char *)g124; // 0x40b0d9_0
    *v18 = (char)((int32_t)*v18 + g124);
    char * v19 = (char *)g124; // 0x40b0db_0
    *v19 = (char)((int32_t)*v19 + g124);
    char * v20 = (char *)g124; // 0x40b0dd_0
    *v20 = (char)((int32_t)*v20 + g124);
    char * v21 = (char *)g124; // 0x40b0df_0
    *v21 = (char)((int32_t)*v21 + g124);
    char * v22 = (char *)g124; // 0x40b0e1_0
    *v22 = (char)((int32_t)*v22 + g124);
    char * v23 = (char *)g124; // 0x40b0e3_0
    *v23 = (char)((int32_t)*v23 + g124);
    char * v24 = (char *)g124; // 0x40b0e5_0
    *v24 = (char)((int32_t)*v24 + g124);
    char * v25 = (char *)g124; // 0x40b0e7_0
    *v25 = (char)((int32_t)*v25 + g124);
    char * v26 = (char *)g124; // 0x40b0e9_0
    *v26 = (char)((int32_t)*v26 + g124);
    char * v27 = (char *)g124; // 0x40b0eb_0
    *v27 = (char)((int32_t)*v27 + g124);
    char * v28 = (char *)g124; // 0x40b0ed_0
    *v28 = (char)((int32_t)*v28 + g124);
    char * v29 = (char *)g124; // 0x40b0ef_0
    *v29 = (char)((int32_t)*v29 + g124);
    char * v30 = (char *)g124; // 0x40b0f1_0
    *v30 = (char)((int32_t)*v30 + g124);
    char * v31 = (char *)g124; // 0x40b0f3_0
    *v31 = (char)((int32_t)*v31 + g124);
    char * v32 = (char *)g124; // 0x40b0f5_0
    *v32 = (char)((int32_t)*v32 + g124);
    char * v33 = (char *)g124; // 0x40b0f7_0
    *v33 = (char)((int32_t)*v33 + g124);
    char * v34 = (char *)g124; // 0x40b0f9_0
    *v34 = (char)((int32_t)*v34 + g124);
    char * v35 = (char *)g124; // 0x40b0fb_0
    *v35 = (char)((int32_t)*v35 + g124);
    char * v36 = (char *)g124; // 0x40b0fd_0
    *v36 = (char)((int32_t)*v36 + g124);
    char * v37 = (char *)g124; // 0x40b0ff_0
    *v37 = (char)((int32_t)*v37 + g124);
    char * v38 = (char *)g124; // 0x40b101_0
    *v38 = (char)((int32_t)*v38 + g124);
    char * v39 = (char *)g124; // 0x40b103_0
    *v39 = (char)((int32_t)*v39 + g124);
    char * v40 = (char *)g124; // 0x40b105_0
    *v40 = (char)((int32_t)*v40 + g124);
    char * v41 = (char *)g124; // 0x40b107_0
    *v41 = (char)((int32_t)*v41 + g124);
    char * v42 = (char *)g124; // 0x40b109_0
    *v42 = (char)((int32_t)*v42 + g124);
    char * v43 = (char *)g124; // 0x40b10b_0
    *v43 = (char)((int32_t)*v43 + g124);
    char * v44 = (char *)g124; // 0x40b10d_0
    *v44 = (char)((int32_t)*v44 + g124);
    char * v45 = (char *)g124; // 0x40b10f_0
    *v45 = (char)((int32_t)*v45 + g124);
    char * v46 = (char *)g124; // 0x40b111_0
    *v46 = (char)((int32_t)*v46 + g124);
    char * v47 = (char *)g124; // 0x40b113_0
    *v47 = (char)((int32_t)*v47 + g124);
    char * v48 = (char *)g124; // 0x40b115_0
    *v48 = (char)((int32_t)*v48 + g124);
    char * v49 = (char *)g124; // 0x40b117_0
    *v49 = (char)((int32_t)*v49 + g124);
    char * v50 = (char *)g124; // 0x40b119_0
    *v50 = (char)((int32_t)*v50 + g124);
    char * v51 = (char *)g124; // 0x40b11b_0
    *v51 = (char)((int32_t)*v51 + g124);
    char * v52 = (char *)g124; // 0x40b11d_0
    *v52 = (char)((int32_t)*v52 + g124);
    char * v53 = (char *)g124; // 0x40b11f_0
    *v53 = (char)((int32_t)*v53 + g124);
    char * v54 = (char *)g124; // 0x40b121_0
    *v54 = (char)((int32_t)*v54 + g124);
    char * v55 = (char *)g124; // 0x40b123_0
    *v55 = (char)((int32_t)*v55 + g124);
    char * v56 = (char *)g124; // 0x40b125_0
    *v56 = (char)((int32_t)*v56 + g124);
    char * v57 = (char *)g124; // 0x40b127_0
    *v57 = (char)((int32_t)*v57 + g124);
    char * v58 = (char *)g124; // 0x40b129_0
    *v58 = (char)((int32_t)*v58 + g124);
    char * v59 = (char *)g124; // 0x40b12b_0
    *v59 = (char)((int32_t)*v59 + g124);
    char * v60 = (char *)g124; // 0x40b12d_0
    *v60 = (char)((int32_t)*v60 + g124);
    char * v61 = (char *)g124; // 0x40b12f_0
    *v61 = (char)((int32_t)*v61 + g124);
    char * v62 = (char *)g124; // 0x40b131_0
    *v62 = (char)((int32_t)*v62 + g124);
    char * v63 = (char *)g124; // 0x40b133_0
    *v63 = (char)((int32_t)*v63 + g124);
    char * v64 = (char *)g124; // 0x40b135_0
    *v64 = (char)((int32_t)*v64 + g124);
    char * v65 = (char *)g124; // 0x40b137_0
    *v65 = (char)((int32_t)*v65 + g124);
    char * v66 = (char *)g124; // 0x40b139_0
    *v66 = (char)((int32_t)*v66 + g124);
    char * v67 = (char *)g124; // 0x40b13b_0
    *v67 = (char)((int32_t)*v67 + g124);
    char * v68 = (char *)g124; // 0x40b13d_0
    *v68 = (char)((int32_t)*v68 + g124);
    char * v69 = (char *)g124; // 0x40b13f_0
    *v69 = (char)((int32_t)*v69 + g124);
    char * v70 = (char *)g124; // 0x40b141_0
    *v70 = (char)((int32_t)*v70 + g124);
    char * v71 = (char *)g124; // 0x40b143_0
    *v71 = (char)((int32_t)*v71 + g124);
    char * v72 = (char *)g124; // 0x40b145_0
    *v72 = (char)((int32_t)*v72 + g124);
    char * v73 = (char *)g124; // 0x40b147_0
    *v73 = (char)((int32_t)*v73 + g124);
    char * v74 = (char *)g124; // 0x40b149_0
    *v74 = (char)((int32_t)*v74 + g124);
    char * v75 = (char *)g124; // 0x40b14b_0
    *v75 = (char)((int32_t)*v75 + g124);
    char * v76 = (char *)g124; // 0x40b14d_0
    *v76 = (char)((int32_t)*v76 + g124);
    char * v77 = (char *)g124; // 0x40b14f_0
    *v77 = (char)((int32_t)*v77 + g124);
    char * v78 = (char *)g124; // 0x40b151_0
    *v78 = (char)((int32_t)*v78 + g124);
    char * v79 = (char *)g124; // 0x40b153_0
    *v79 = (char)((int32_t)*v79 + g124);
    char * v80 = (char *)g124; // 0x40b155_0
    *v80 = (char)((int32_t)*v80 + g124);
    char * v81 = (char *)g124; // 0x40b157_0
    *v81 = (char)((int32_t)*v81 + g124);
    char * v82 = (char *)g124; // 0x40b159_0
    *v82 = (char)((int32_t)*v82 + g124);
    char * v83 = (char *)g124; // 0x40b15b_0
    *v83 = (char)((int32_t)*v83 + g124);
    char * v84 = (char *)g124; // 0x40b15d_0
    *v84 = (char)((int32_t)*v84 + g124);
    char * v85 = (char *)g124; // 0x40b15f_0
    *v85 = (char)((int32_t)*v85 + g124);
    char * v86 = (char *)g124; // 0x40b161_0
    *v86 = (char)((int32_t)*v86 + g124);
    char * v87 = (char *)g124; // 0x40b163_0
    *v87 = (char)((int32_t)*v87 + g124);
    char * v88 = (char *)g124; // 0x40b165_0
    *v88 = (char)((int32_t)*v88 + g124);
    char * v89 = (char *)g124; // 0x40b167_0
    *v89 = (char)((int32_t)*v89 + g124);
    char * v90 = (char *)g124; // 0x40b169_0
    *v90 = (char)((int32_t)*v90 + g124);
    char * v91 = (char *)g124; // 0x40b16b_0
    *v91 = (char)((int32_t)*v91 + g124);
    char * v92 = (char *)g124; // 0x40b16d_0
    *v92 = (char)((int32_t)*v92 + g124);
    char * v93 = (char *)g124; // 0x40b16f_0
    *v93 = (char)((int32_t)*v93 + g124);
    char * v94 = (char *)g124; // 0x40b171_0
    *v94 = (char)((int32_t)*v94 + g124);
    char * v95 = (char *)g124; // 0x40b173_0
    *v95 = (char)((int32_t)*v95 + g124);
    char * v96 = (char *)g124; // 0x40b175_0
    *v96 = (char)((int32_t)*v96 + g124);
    char * v97 = (char *)g124; // 0x40b177_0
    *v97 = (char)((int32_t)*v97 + g124);
    char * v98 = (char *)g124; // 0x40b179_0
    *v98 = (char)((int32_t)*v98 + g124);
    char * v99 = (char *)g124; // 0x40b17b_0
    *v99 = (char)((int32_t)*v99 + g124);
    char * v100 = (char *)g124; // 0x40b17d_0
    *v100 = (char)((int32_t)*v100 + g124);
    char * v101 = (char *)g124; // 0x40b17f_0
    *v101 = (char)((int32_t)*v101 + g124);
    char * v102 = (char *)g124; // 0x40b181_0
    *v102 = (char)((int32_t)*v102 + g124);
    char * v103 = (char *)g124; // 0x40b183_0
    *v103 = (char)((int32_t)*v103 + g124);
    char * v104 = (char *)g124; // 0x40b185_0
    *v104 = (char)((int32_t)*v104 + g124);
    char * v105 = (char *)g124; // 0x40b187_0
    *v105 = (char)((int32_t)*v105 + g124);
    char * v106 = (char *)g124; // 0x40b189_0
    *v106 = (char)((int32_t)*v106 + g124);
    char * v107 = (char *)g124; // 0x40b18b_0
    *v107 = (char)((int32_t)*v107 + g124);
    char * v108 = (char *)g124; // 0x40b18d_0
    *v108 = (char)((int32_t)*v108 + g124);
    char * v109 = (char *)g124; // 0x40b18f_0
    *v109 = (char)((int32_t)*v109 + g124);
    char * v110 = (char *)g124; // 0x40b191_0
    *v110 = (char)((int32_t)*v110 + g124);
    char * v111 = (char *)g124; // 0x40b193_0
    *v111 = (char)((int32_t)*v111 + g124);
    char * v112 = (char *)g124; // 0x40b195_0
    *v112 = (char)((int32_t)*v112 + g124);
    char * v113 = (char *)g124; // 0x40b197_0
    *v113 = (char)((int32_t)*v113 + g124);
    char * v114 = (char *)g124; // 0x40b199_0
    *v114 = (char)((int32_t)*v114 + g124);
    char * v115 = (char *)g124; // 0x40b19b_0
    *v115 = (char)((int32_t)*v115 + g124);
    char * v116 = (char *)g124; // 0x40b19d_0
    *v116 = (char)((int32_t)*v116 + g124);
    char * v117 = (char *)g124; // 0x40b19f_0
    *v117 = (char)((int32_t)*v117 + g124);
    char * v118 = (char *)g124; // 0x40b1a1_0
    *v118 = (char)((int32_t)*v118 + g124);
    char * v119 = (char *)g124; // 0x40b1a3_0
    *v119 = (char)((int32_t)*v119 + g124);
    char * v120 = (char *)g124; // 0x40b1a5_0
    *v120 = (char)((int32_t)*v120 + g124);
    char * v121 = (char *)g124; // 0x40b1a7_0
    *v121 = (char)((int32_t)*v121 + g124);
    char * v122 = (char *)g124; // 0x40b1a9_0
    *v122 = (char)((int32_t)*v122 + g124);
    char * v123 = (char *)g124; // 0x40b1ab_0
    *v123 = (char)((int32_t)*v123 + g124);
    char * v124 = (char *)g124; // 0x40b1ad_0
    *v124 = (char)((int32_t)*v124 + g124);
    char * v125 = (char *)g124; // 0x40b1af_0
    *v125 = (char)((int32_t)*v125 + g124);
    char * v126 = (char *)g124; // 0x40b1b1_0
    *v126 = (char)((int32_t)*v126 + g124);
    char * v127 = (char *)g124; // 0x40b1b3_0
    *v127 = (char)((int32_t)*v127 + g124);
    char * v128 = (char *)g124; // 0x40b1b5_0
    *v128 = (char)((int32_t)*v128 + g124);
    char * v129 = (char *)g124; // 0x40b1b7_0
    *v129 = (char)((int32_t)*v129 + g124);
    char * v130 = (char *)g124; // 0x40b1b9_0
    *v130 = (char)((int32_t)*v130 + g124);
    char * v131 = (char *)g124; // 0x40b1bb_0
    *v131 = (char)((int32_t)*v131 + g124);
    char * v132 = (char *)g124; // 0x40b1bd_0
    *v132 = (char)((int32_t)*v132 + g124);
    char * v133 = (char *)g124; // 0x40b1bf_0
    *v133 = (char)((int32_t)*v133 + g124);
    char * v134 = (char *)g124; // 0x40b1c1_0
    *v134 = (char)((int32_t)*v134 + g124);
    char * v135 = (char *)g124; // 0x40b1c3_0
    *v135 = (char)((int32_t)*v135 + g124);
    char * v136 = (char *)g124; // 0x40b1c5_0
    *v136 = (char)((int32_t)*v136 + g124);
    char * v137 = (char *)g124; // 0x40b1c7_0
    *v137 = (char)((int32_t)*v137 + g124);
    char * v138 = (char *)g124; // 0x40b1c9_0
    *v138 = (char)((int32_t)*v138 + g124);
    char * v139 = (char *)g124; // 0x40b1cb_0
    *v139 = (char)((int32_t)*v139 + g124);
    char * v140 = (char *)g124; // 0x40b1cd_0
    *v140 = (char)((int32_t)*v140 + g124);
    char * v141 = (char *)g124; // 0x40b1cf_0
    *v141 = (char)((int32_t)*v141 + g124);
    char * v142 = (char *)g124; // 0x40b1d1_0
    *v142 = (char)((int32_t)*v142 + g124);
    char * v143 = (char *)g124; // 0x40b1d3_0
    *v143 = (char)((int32_t)*v143 + g124);
    char * v144 = (char *)g124; // 0x40b1d5_0
    *v144 = (char)((int32_t)*v144 + g124);
    char * v145 = (char *)g124; // 0x40b1d7_0
    *v145 = (char)((int32_t)*v145 + g124);
    char * v146 = (char *)g124; // 0x40b1d9_0
    *v146 = (char)((int32_t)*v146 + g124);
    char * v147 = (char *)g124; // 0x40b1db_0
    *v147 = (char)((int32_t)*v147 + g124);
    char * v148 = (char *)g124; // 0x40b1dd_0
    *v148 = (char)((int32_t)*v148 + g124);
    char * v149 = (char *)g124; // 0x40b1df_0
    *v149 = (char)((int32_t)*v149 + g124);
    char * v150 = (char *)g124; // 0x40b1e1_0
    *v150 = (char)((int32_t)*v150 + g124);
    char * v151 = (char *)g124; // 0x40b1e3_0
    *v151 = (char)((int32_t)*v151 + g124);
    char * v152 = (char *)g124; // 0x40b1e5_0
    *v152 = (char)((int32_t)*v152 + g124);
    char * v153 = (char *)g124; // 0x40b1e7_0
    *v153 = (char)((int32_t)*v153 + g124);
    char * v154 = (char *)g124; // 0x40b1e9_0
    *v154 = (char)((int32_t)*v154 + g124);
    char * v155 = (char *)g124; // 0x40b1eb_0
    *v155 = (char)((int32_t)*v155 + g124);
    char * v156 = (char *)g124; // 0x40b1ed_0
    *v156 = (char)((int32_t)*v156 + g124);
    char * v157 = (char *)g124; // 0x40b1ef_0
    *v157 = (char)((int32_t)*v157 + g124);
    char * v158 = (char *)g124; // 0x40b1f1_0
    *v158 = (char)((int32_t)*v158 + g124);
    char * v159 = (char *)g124; // 0x40b1f3_0
    *v159 = (char)((int32_t)*v159 + g124);
    char * v160 = (char *)g124; // 0x40b1f5_0
    *v160 = (char)((int32_t)*v160 + g124);
    char * v161 = (char *)g124; // 0x40b1f7_0
    *v161 = (char)((int32_t)*v161 + g124);
    char * v162 = (char *)g124; // 0x40b1f9_0
    *v162 = (char)((int32_t)*v162 + g124);
    char * v163 = (char *)g124; // 0x40b1fb_0
    *v163 = (char)((int32_t)*v163 + g124);
    char * v164 = (char *)g124; // 0x40b1fd_0
    *v164 = (char)((int32_t)*v164 + g124);
}

/* --------- External Functions --------- */

// void abort(void);
// BOOL WINAPI AdjustWindowRectEx(_Inout_ LPRECT lpRect, _In_ DWORD dwStyle, _In_ BOOL bMenu, _In_ DWORD dwExStyle)
// void AppendMenuA(void);
// void BringWindowToTop(void);
// LRESULT WINAPI CallWindowProcA(_In_  WNDPROC lpPrevWndFunc, _In_  HWND hWnd, _In_  UINT Msg, _In_  WPARAM wParam, _In_  LPARAM lParam)
// double ceil(double x)
// BOOL WINAPI CloseHandle(_In_ HANDLE hObject)
// void CoInitialize(void);
// BOOL WINAPI CopyFileA(_In_ LPCTSTR lpExistingFileName, _In_ LPCTSTR lpNewFileName, _In_ BOOL bFailIfExists);
// void CreateAcceleratorTableA(void);
// HDC CreateCompatibleDC(HDC hdc)
// BOOL WINAPI CreateDirectoryA(_In_ LPCTSTR lpPathName, _In_opt_  LPSECURITY_ATTRIBUTES lpSecurityAttributes)
// HANDLE WINAPI CreateFileA(_In_ LPCTSTR lpFileName, _In_ DWORD dwDesiredAccess, _In_ DWORD dwShareMode, _In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes, _In_ DWORD dwCreationDisposition, _In_ DWORD dwFlagsAndAttributes, _In_opt_  HANDLE hTemplateFile)
// HMENU WINAPI CreateMenu(void)
// void CreatePipe(void);
// BOOL WINAPI CreateProcessA(In_opt_ LPCTSTR lpApplicationName, _Inout_opt_  LPTSTR lpCommandLine, _In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes, _In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes, _In_         BOOL bInheritHandles, _In_         DWORD dwCreationFlags, _In_opt_     LPVOID lpEnvironment, _In_opt_     LPCTSTR lpCurrentDirectory, _In_         LPSTARTUPINFO lpStartupInfo, _Out_        LPPROCESS_INFORMATION lpProcessInformation)
// HBRUSH CreateSolidBrush(_In_  COLORREF crColor)
// void CreateStatusWindowA(void);
// HANDLE WINAPI CreateThread(_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes, _In_ SIZE_T dwStackSize, _In_ LPTHREAD_START_ROUTINE lpStartAddress, _In_opt_ LPVOID lpParameter, _In_ DWORD dwCreationFlags, _Out_opt_ LPDWORD lpThreadId)
// HWND WINAPI CreateWindowExA(_In_ DWORD dwExStyle, _In_opt_ LPCTSTR lpClassName, _In_opt_ LPCTSTR lpWindowName, _In_ DWORD dwStyle, _In_ int x, _In_ int y, _In_ int nWidth, _In_ int nHeight, _In_opt_ HWND hWndParent, _In_opt_ HMENU hMenu, _In_opt_ HINSTANCE hInstance, _In_opt_ LPVOID lpParam)
// LRESULT WINAPI DefFrameProcA(_In_ HWND hWnd, _In_ HWND hWndMDIClient, _In_ UINT uMsg, _In_ WPARAM wParam, _In_ LPARAM lParam)
// LRESULT WINAPI DefWindowProcA(_In_ HWND hWnd, _In_ UINT Msg, _In_ WPARAM wParam, _In_ LPARAM lParam)
// void WINAPI DeleteCriticalSection(_Inout_  LPCRITICAL_SECTION lpCriticalSection)
// BOOL DeleteDC(_In_  HDC hdc)
// BOOL WINAPI DeleteFileA(_In_  LPCTSTR lpFileName)
// BOOL DeleteObject(_In_  HGDIOBJ hObject)
// void DestroyAcceleratorTable(void);
// BOOL WINAPI DestroyIcon(_In_ HICON hIcon)
// void DestroyMenu(void);
// BOOL WINAPI DestroyWindow(_In_  HWND hWnd)
// LRESULT WINAPI DispatchMessageA(_In_ const MSG *lpmsg)
// BOOL DrawStateA(_In_  HDC hdc,_In_  HBRUSH hbr,_In_  DRAWSTATEPROC lpOutputFunc,_In_  LPARAM lData,_In_  WPARAM wData,_In_  int x,_In_  int y,_In_  int cx,_In_  int cy,_In_  UINT fuFlags)
// BOOL WINAPI DuplicateHandle(_In_   HANDLE hSourceProcessHandle, _In_   HANDLE hSourceHandle, _In_   HANDLE hTargetProcessHandle, _Out_  LPHANDLE lpTargetHandle, _In_   DWORD dwDesiredAccess, _In_   BOOL bInheritHandle, _In_   DWORD dwOptions)
// BOOL WINAPI EnableWindow(_In_  HWND hWnd, _In_  BOOL bEnable)
// void WINAPI EnterCriticalSection(_Inout_  LPCRITICAL_SECTION lpCriticalSection)
// void EnumChildWindows(void);
// void EnumWindows(void);
// VOID WINAPI ExitProcess(_In_ UINT uExitCode)
// double sqrt (double x)
// int fclose (FILE *)
// int FillRect(_In_  HDC hDC, _In_  const RECT *lprc, _In_  HBRUSH hbr);
// BOOL WINAPI FindClose(_Inout_  HANDLE hFindFile)
// HANDLE WINAPI FindFirstFileA(_In_   LPCTSTR lpFileName, _Out_  LPWIN32_FIND_DATA lpFindFileData)
// BOOL WINAPI FindNextFileA(_In_   HANDLE hFindFile, _Out_  LPWIN32_FIND_DATA lpFindFileData)
// double floor (double x)
// void free (void *)
// BOOL WINAPI FreeLibrary(_In_  HMODULE hModule)
// HWND WINAPI GetActiveWindow(void)
// int WINAPI GetClassNameA(_In_ HWND hWnd, _Out_ LPTSTR lpClassName, _In_ int nMaxCount)
// BOOL WINAPI GetClientRect(_In_   HWND hWnd, _Out_  LPRECT lpRect)
// DWORD WINAPI GetCurrentDirectoryA(_In_   DWORD nBufferLength, _Out_  LPTSTR lpBuffer)
// HANDLE WINAPI GetCurrentProcess(void)
// DWORD WINAPI GetCurrentProcessId(void)
// DWORD WINAPI GetCurrentThreadId(void)
// BOOL WINAPI GetCursorPos(_Out_ LPPOINT lpPoint)
// int GetDIBits(_In_ HDC hdc, _In_ HBITMAP hbmp, _In_ UINT uStartScan, _In_ UINT cScanLines, _Out_ LPVOID lpvBits, _Inout_  LPBITMAPINFO lpbi, _In_ UINT uUsage)
// HWND WINAPI GetFocus(void)
// HWND WINAPI GetForegroundWindow(void)
// void GetIconInfo(void);
// SHORT WINAPI GetKeyState(_In_  int nVirtKey)
// DWORD WINAPI GetLastError(void)
// HMENU WINAPI GetMenu(_In_  HWND hWnd)
// BOOL WINAPI GetMessageA(_Out_ LPMSG lpMsg, _In_opt_ HWND hWnd, _In_ UINT wMsgFilterMin, _In_ UINT wMsgFilterMax)
// HMODULE WINAPI GetModuleHandleA(_In_opt_  LPCTSTR lpModuleName)
// int GetObjectA(_In_   HGDIOBJ hgdiobj, _In_   int cbBuffer, _Out_  LPVOID lpvObject)
// void GetObjectType(void);
// void GetOpenFileNameA(void);
// HWND WINAPI GetParent(_In_  HWND hWnd)
// FARPROC WINAPI GetProcAddress(_In_  HMODULE hModule, _In_  LPCSTR lpProcName)
// void GetPropA(void);
// void GetSaveFileNameA(void);
// HANDLE WINAPI GetStdHandle(_In_  DWORD nStdHandle)
// HGDIOBJ GetStockObject(_In_  int fnObject)
// DWORD WINAPI GetSysColor(_In_  int nIndex)
// HBRUSH GetSysColorBrush(_In_  int nIndex)
// int WINAPI GetSystemMetrics(_In_  int nIndex)
// BOOL WINAPI GetVersionExA(_Inout_  LPOSVERSIONINFO lpVersionInfo)
// HWND WINAPI GetWindow(_In_  HWND hWnd, _In_  UINT uCmd)
// void GetWindowLongA(void);
// BOOL WINAPI GetWindowRect(_In_   HWND hWnd, _Out_  LPRECT lpRect)
// int WINAPI GetWindowTextA(_In_   HWND hWnd, _Out_  LPTSTR lpString, _In_   int nMaxCount)
// int WINAPI GetWindowTextLengthA(_In_ HWND hWnd)
// DWORD WINAPI GetWindowThreadProcessId(_In_ HWND hWnd, _Out_opt_  LPDWORD lpdwProcessId)
// LPVOID WINAPI HeapAlloc(_In_  HANDLE hHeap, _In_  DWORD dwFlags, _In_  SIZE_T dwBytes)
// HANDLE WINAPI HeapCreate(_In_  DWORD flOptions, _In_  SIZE_T dwInitialSize, _In_  SIZE_T dwMaximumSize)
// BOOL WINAPI HeapDestroy(_In_  HANDLE hHeap)
// BOOL WINAPI HeapFree(_In_  HANDLE hHeap, _In_  DWORD dwFlags, _In_  LPVOID lpMem)
// LPVOID WINAPI HeapReAlloc(_In_  HANDLE hHeap, _In_  DWORD dwFlags, _In_  LPVOID lpMem, _In_  SIZE_T dwBytes)
// void InitCommonControlsEx(void);
// void WINAPI InitializeCriticalSection(_Out_  LPCRITICAL_SECTION lpCriticalSection)
// void IntersectClipRect(void);
// BOOL InvalidateRect(_In_  HWND hWnd, _In_  const RECT *lpRect, _In_  BOOL bErase)
// void IsChild(void);
// BOOL WINAPI IsWindowEnabled(_In_  HWND hWnd)
// BOOL WINAPI IsWindowVisible(_In_ HWND hWnd)
// void IsZoomed(void);
// void WINAPI LeaveCriticalSection(_Inout_  LPCRITICAL_SECTION lpCriticalSection)
// char llvm_ctpop_i8(char a1);
// HCURSOR WINAPI LoadCursorA(_In_opt_ HINSTANCE hInstance, _In_ LPCTSTR lpCursorName)
// HICON WINAPI LoadIconA(_In_opt_ HINSTANCE hInstance, _In_ LPCTSTR lpIconName)
// HANDLE WINAPI LoadImageA(_In_opt_ HINSTANCE hinst, _In_ LPCTSTR lpszName, _In_ UINT uType, _In_ int cxDesired, _In_ int cyDesired, _In_ UINT fuLoad)
// HMODULE WINAPI LoadLibraryA(_In_ LPCTSTR lpFileName)
// void * malloc (size_t)
// void MapWindowPoints(void);
// void * memcpy (void *restrict, const void *restrict, size_t)
// void * memset (void *, int, size_t)
// int WINAPI MessageBoxA(_In_opt_ HWND hWnd, _In_opt_ LPCTSTR lpText, _In_opt_ LPCTSTR lpCaption, _In_ UINT uType)
// void MoveWindow(void);
// void MsgWaitForMultipleObjects(void);
// BOOL WINAPI PeekMessageA(_Out_ LPMSG lpMsg, _In_opt_ HWND hWnd, _In_ UINT wMsgFilterMin, _In_ UINT wMsgFilterMax, _In_ UINT wRemoveMsg)
// BOOL WINAPI PostMessageA(_In_opt_ HWND hWnd, _In_ UINT Msg, _In_ WPARAM wParam, _In_ LPARAM lParam)
// BOOL RedrawWindow(_In_  HWND hWnd, _In_  const RECT *lprcUpdate, _In_  HRGN hrgnUpdate, _In_  UINT flags)
// ATOM WINAPI RegisterClassA(_In_  const WNDCLASS *lpWndClass)
// ATOM WINAPI RegisterClassExA(_In_  const WNDCLASSEX *lpwcx)
// BOOL WINAPI ReleaseCapture(void)
// void RemoveDirectoryA(void);
// void RemovePropA(void);
// void RevokeDragDrop(void);
// HGDIOBJ SelectObject(_In_  HDC hdc, _In_  HGDIOBJ hgdiobj)
// LRESULT WINAPI SendMessageA(_In_ HWND hWnd, _In_ UINT Msg, _In_ WPARAM wParam, _In_  LPARAM lParam)
// void SetActiveWindow(void);
// COLORREF SetBkColor(_In_  HDC hdc, _In_  COLORREF crColor)
// void SetCapture(void);
// HCURSOR WINAPI SetCursor(_In_opt_  HCURSOR hCursor)
// void SetCursorPos(void);
// BOOL WINAPI SetFileAttributes(_In_  LPCTSTR lpFileName, _In_  DWORD dwFileAttributes)
// DWORD WINAPI SetFilePointer(_In_ HANDLE hFile, _In_ LONG lDistanceToMove, _Inout_opt_ PLONG lpDistanceToMoveHigh, _In_ DWORD dwMoveMethod)
// void SetFocus(void);
// BOOL WINAPI SetForegroundWindow(_In_  HWND hWnd)
// void WINAPI SetLastError(_In_  DWORD dwErrCode)
// BOOL WINAPI SetMenu(_In_ HWND hWnd, _In_opt_  HMENU hMenu)
// void SetPropA(void);
// COLORREF SetTextColor(_In_  HDC hdc, _In_  COLORREF crColor)
// LONG WINAPI SetWindowLong(_In_  HWND hWnd, _In_  int nIndex, _In_  LONG dwNewLong)
// BOOL WINAPI SetWindowPos(_In_ HWND hWnd, _In_opt_  HWND hWndInsertAfter, _In_ int X, _In_ int Y, _In_ int cx, _In_ int cy, _In_ UINT uFlags)
// BOOL WINAPI SetWindowTextA(_In_ HWND hWnd, _In_opt_  LPCTSTR lpString)
// BOOL ShellExecuteExA(_Inout_  SHELLEXECUTEINFO *pExecInfo)
// BOOL WINAPI ShowWindow(_In_  HWND hWnd, _In_  int nCmdShow)
// VOID WINAPI Sleep(_In_  DWORD dwMilliseconds)
// int sprintf (char *restrict, const char *restrict, ...)
// char * strcat (char *restrict, const char *restrict)
// int strcmp (const char *, const char *)
// char * strcpy (char *restrict, const char *restrict)
// size_t strlen (const char *)
// int strncmp (const char *, const char *, size_t)
// char * strncpy (char *restrict, const char *restrict, size_t)
// BOOL WINAPI SystemParametersInfoA(_In_     UINT uiAction, _In_     UINT uiParam, _Inout_  PVOID pvParam, _In_     UINT fWinIni)
// DWORD WINAPI TlsAlloc(void)
// void TranslateAcceleratorA(void);
// BOOL WINAPI TranslateMessage(_In_  const MSG *lpMsg)
// BOOL WINAPI UnregisterClassA(_In_ LPCTSTR lpClassName, _In_opt_  HINSTANCE hInstance)
// void ValidateRect(void);
// DWORD WINAPI WaitForSingleObject(_In_  HANDLE hHandle, _In_  DWORD dwMilliseconds)
// BOOL WINAPI WriteFile(_In_ HANDLE hFile, _In_ LPCVOID lpBuffer, _In_ DWORD nNumberOfBytesToWrite, _Out_opt_ LPDWORD lpNumberOfBytesWritten, _Inout_opt_  LPOVERLAPPED lpOverlapped)

/* ---------- Meta-Information ---------- */

// Detected compiler: purebasic 4.x
// Detected functions: 227 (227 in front-end)
// Decompiler release: v2.0 (Jun  1 2015)
// Decompilation date: Aug 25 2015 02:34:31
